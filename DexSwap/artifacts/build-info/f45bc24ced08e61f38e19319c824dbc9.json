{
	"id": "f45bc24ced08e61f38e19319c824dbc9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.16",
	"solcLongVersion": "0.5.16+commit.9c3226ce",
	"input": {
		"language": "Solidity",
		"sources": {
			"DexSwap/USDT.sol": {
				"content": "/**\n *Submitted for verification at BscScan.com on 2020-09-04\n*/\n\npragma solidity 0.5.16;\n\ninterface IBEP20 {\n  /**\n   * @dev Returns the amount of tokens in existence.\n   */\n  function totalSupply() external view returns (uint256);\n\n  /**\n   * @dev Returns the token decimals.\n   */\n  function decimals() external view returns (uint8);\n\n  /**\n   * @dev Returns the token symbol.\n   */\n  function symbol() external view returns (string memory);\n\n  /**\n  * @dev Returns the token name.\n  */\n  function name() external view returns (string memory);\n\n  /**\n   * @dev Returns the bep token owner.\n   */\n  function getOwner() external view returns (address);\n\n  /**\n   * @dev Returns the amount of tokens owned by `account`.\n   */\n  function balanceOf(address account) external view returns (uint256);\n\n  /**\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Returns the remaining number of tokens that `spender` will be\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\n   * zero by default.\n   *\n   * This value changes when {approve} or {transferFrom} are called.\n   */\n  function allowance(address _owner, address spender) external view returns (uint256);\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\n   * that someone may use both the old and the new allowance by unfortunate\n   * transaction ordering. One possible solution to mitigate this race\n   * condition is to first reduce the spender's allowance to 0 and set the\n   * desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   *\n   * Emits an {Approval} event.\n   */\n  function approve(address spender, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\n   * allowance mechanism. `amount` is then deducted from the caller's\n   * allowance.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\n   * another (`to`).\n   *\n   * Note that `value` may be zero.\n   */\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n  /**\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n   * a call to {approve}. `value` is the new allowance.\n   */\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\ncontract Context {\n  // Empty internal constructor, to prevent people from mistakenly deploying\n  // an instance of this contract, which should be used via inheritance.\n  constructor () internal { }\n\n  function _msgSender() internal view returns (address payable) {\n    return msg.sender;\n  }\n\n  function _msgData() internal view returns (bytes memory) {\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n    return msg.data;\n  }\n}\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n  /**\n   * @dev Returns the addition of two unsigned integers, reverting on\n   * overflow.\n   *\n   * Counterpart to Solidity's `+` operator.\n   *\n   * Requirements:\n   * - Addition cannot overflow.\n   */\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    require(c >= a, \"SafeMath: addition overflow\");\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the subtraction of two unsigned integers, reverting on\n   * overflow (when the result is negative).\n   *\n   * Counterpart to Solidity's `-` operator.\n   *\n   * Requirements:\n   * - Subtraction cannot overflow.\n   */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    return sub(a, b, \"SafeMath: subtraction overflow\");\n  }\n\n  /**\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n   * overflow (when the result is negative).\n   *\n   * Counterpart to Solidity's `-` operator.\n   *\n   * Requirements:\n   * - Subtraction cannot overflow.\n   */\n  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n    require(b <= a, errorMessage);\n    uint256 c = a - b;\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the multiplication of two unsigned integers, reverting on\n   * overflow.\n   *\n   * Counterpart to Solidity's `*` operator.\n   *\n   * Requirements:\n   * - Multiplication cannot overflow.\n   */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    uint256 c = a * b;\n    require(c / a == b, \"SafeMath: multiplication overflow\");\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the integer division of two unsigned integers. Reverts on\n   * division by zero. The result is rounded towards zero.\n   *\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\n   * uses an invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    return div(a, b, \"SafeMath: division by zero\");\n  }\n\n  /**\n   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n   * division by zero. The result is rounded towards zero.\n   *\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\n   * uses an invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n    // Solidity only automatically asserts when dividing by 0\n    require(b > 0, errorMessage);\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n   * Reverts when dividing by zero.\n   *\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\n   * invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n    return mod(a, b, \"SafeMath: modulo by zero\");\n  }\n\n  /**\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n   * Reverts with custom message when dividing by zero.\n   *\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\n   * invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n    require(b != 0, errorMessage);\n    return a % b;\n  }\n}\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\ncontract Ownable is Context {\n  address private _owner;\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n  /**\n   * @dev Initializes the contract setting the deployer as the initial owner.\n   */\n  constructor () internal {\n    address msgSender = _msgSender();\n    _owner = msgSender;\n    emit OwnershipTransferred(address(0), msgSender);\n  }\n\n  /**\n   * @dev Returns the address of the current owner.\n   */\n  function owner() public view returns (address) {\n    return _owner;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\n    _;\n  }\n\n  /**\n   * @dev Leaves the contract without owner. It will not be possible to call\n   * `onlyOwner` functions anymore. Can only be called by the current owner.\n   *\n   * NOTE: Renouncing ownership will leave the contract without an owner,\n   * thereby removing any functionality that is only available to the owner.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipTransferred(_owner, address(0));\n    _owner = address(0);\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   * Can only be called by the current owner.\n   */\n  function transferOwnership(address newOwner) public onlyOwner {\n    _transferOwnership(newOwner);\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   */\n  function _transferOwnership(address newOwner) internal {\n    require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n    emit OwnershipTransferred(_owner, newOwner);\n    _owner = newOwner;\n  }\n}\n\ncontract BEP20USDT is Context, IBEP20, Ownable {\n  using SafeMath for uint256;\n\n  mapping (address => uint256) private _balances;\n\n  mapping (address => mapping (address => uint256)) private _allowances;\n\n  uint256 private _totalSupply;\n  uint8 public _decimals;\n  string public _symbol;\n  string public _name;\n\n  constructor() public {\n    _name = \"ZChain USD\";\n    _symbol = \"USDZ\";\n    _decimals = 18;\n    _totalSupply = 1000000000*10**18;\n    _balances[msg.sender] = _totalSupply;\n\n    emit Transfer(address(0), msg.sender, _totalSupply);\n  }\n\n  /**\n   * @dev Returns the bep token owner.\n   */\n  function getOwner() external view returns (address) {\n    return owner();\n  }\n\n  /**\n   * @dev Returns the token decimals.\n   */\n  function decimals() external view returns (uint8) {\n    return _decimals;\n  }\n\n  /**\n   * @dev Returns the token symbol.\n   */\n  function symbol() external view returns (string memory) {\n    return _symbol;\n  }\n\n  /**\n  * @dev Returns the token name.\n  */\n  function name() external view returns (string memory) {\n    return _name;\n  }\n\n  /**\n   * @dev See {BEP20-totalSupply}.\n   */\n  function totalSupply() external view returns (uint256) {\n    return _totalSupply;\n  }\n\n  /**\n   * @dev See {BEP20-balanceOf}.\n   */\n  function balanceOf(address account) external view returns (uint256) {\n    return _balances[account];\n  }\n\n  /**\n   * @dev See {BEP20-transfer}.\n   *\n   * Requirements:\n   *\n   * - `recipient` cannot be the zero address.\n   * - the caller must have a balance of at least `amount`.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool) {\n    _transfer(_msgSender(), recipient, amount);\n    return true;\n  }\n\n  /**\n   * @dev See {BEP20-allowance}.\n   */\n  function allowance(address owner, address spender) external view returns (uint256) {\n    return _allowances[owner][spender];\n  }\n\n  /**\n   * @dev See {BEP20-approve}.\n   *\n   * Requirements:\n   *\n   * - `spender` cannot be the zero address.\n   */\n  function approve(address spender, uint256 amount) external returns (bool) {\n    _approve(_msgSender(), spender, amount);\n    return true;\n  }\n\n  /**\n   * @dev See {BEP20-transferFrom}.\n   *\n   * Emits an {Approval} event indicating the updated allowance. This is not\n   * required by the EIP. See the note at the beginning of {BEP20};\n   *\n   * Requirements:\n   * - `sender` and `recipient` cannot be the zero address.\n   * - `sender` must have a balance of at least `amount`.\n   * - the caller must have allowance for `sender`'s tokens of at least\n   * `amount`.\n   */\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\n    _transfer(sender, recipient, amount);\n    _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\"));\n    return true;\n  }\n\n  /**\n   * @dev Atomically increases the allowance granted to `spender` by the caller.\n   *\n   * This is an alternative to {approve} that can be used as a mitigation for\n   * problems described in {BEP20-approve}.\n   *\n   * Emits an {Approval} event indicating the updated allowance.\n   *\n   * Requirements:\n   *\n   * - `spender` cannot be the zero address.\n   */\n  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n    return true;\n  }\n\n  /**\n   * @dev Atomically decreases the allowance granted to `spender` by the caller.\n   *\n   * This is an alternative to {approve} that can be used as a mitigation for\n   * problems described in {BEP20-approve}.\n   *\n   * Emits an {Approval} event indicating the updated allowance.\n   *\n   * Requirements:\n   *\n   * - `spender` cannot be the zero address.\n   * - `spender` must have allowance for the caller of at least\n   * `subtractedValue`.\n   */\n  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\"));\n    return true;\n  }\n\n  /**\n   * @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\n   * the total supply.\n   *\n   * Requirements\n   *\n   * - `msg.sender` must be the token owner\n   */\n  function mint(uint256 amount) public onlyOwner returns (bool) {\n    _mint(_msgSender(), amount);\n    return true;\n  }\n\n  /**\n   * @dev Burn `amount` tokens and decreasing the total supply.\n   */\n  function burn(uint256 amount) public returns (bool) {\n    _burn(_msgSender(), amount);\n    return true;\n  }\n\n  /**\n   * @dev Moves tokens `amount` from `sender` to `recipient`.\n   *\n   * This is internal function is equivalent to {transfer}, and can be used to\n   * e.g. implement automatic token fees, slashing mechanisms, etc.\n   *\n   * Emits a {Transfer} event.\n   *\n   * Requirements:\n   *\n   * - `sender` cannot be the zero address.\n   * - `recipient` cannot be the zero address.\n   * - `sender` must have a balance of at least `amount`.\n   */\n  function _transfer(address sender, address recipient, uint256 amount) internal {\n    require(sender != address(0), \"BEP20: transfer from the zero address\");\n    require(recipient != address(0), \"BEP20: transfer to the zero address\");\n\n    _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\");\n    _balances[recipient] = _balances[recipient].add(amount);\n    emit Transfer(sender, recipient, amount);\n  }\n\n  /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n   * the total supply.\n   *\n   * Emits a {Transfer} event with `from` set to the zero address.\n   *\n   * Requirements\n   *\n   * - `to` cannot be the zero address.\n   */\n  function _mint(address account, uint256 amount) internal {\n    require(account != address(0), \"BEP20: mint to the zero address\");\n\n    _totalSupply = _totalSupply.add(amount);\n    _balances[account] = _balances[account].add(amount);\n    emit Transfer(address(0), account, amount);\n  }\n\n  /**\n   * @dev Destroys `amount` tokens from `account`, reducing the\n   * total supply.\n   *\n   * Emits a {Transfer} event with `to` set to the zero address.\n   *\n   * Requirements\n   *\n   * - `account` cannot be the zero address.\n   * - `account` must have at least `amount` tokens.\n   */\n  function _burn(address account, uint256 amount) internal {\n    require(account != address(0), \"BEP20: burn from the zero address\");\n\n    _balances[account] = _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\");\n    _totalSupply = _totalSupply.sub(amount);\n    emit Transfer(account, address(0), amount);\n  }\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n   *\n   * This is internal function is equivalent to `approve`, and can be used to\n   * e.g. set automatic allowances for certain subsystems, etc.\n   *\n   * Emits an {Approval} event.\n   *\n   * Requirements:\n   *\n   * - `owner` cannot be the zero address.\n   * - `spender` cannot be the zero address.\n   */\n  function _approve(address owner, address spender, uint256 amount) internal {\n    require(owner != address(0), \"BEP20: approve from the zero address\");\n    require(spender != address(0), \"BEP20: approve to the zero address\");\n\n    _allowances[owner][spender] = amount;\n    emit Approval(owner, spender, amount);\n  }\n\n  /**\n   * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n   * from the caller's allowance.\n   *\n   * See {_burn} and {_approve}.\n   */\n  function _burnFrom(address account, uint256 amount) internal {\n    _burn(account, amount);\n    _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \"BEP20: burn amount exceeds allowance\"));\n  }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"DexSwap/USDT.sol": {
				"BEP20USDT": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "See {BEP20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {BEP20-approve}.   * Requirements:   * - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {BEP20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Burn `amount` tokens and decreasing the total supply."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller.   * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.   * Emits an {Approval} event indicating the updated allowance.   * Requirements:   * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller.   * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.   * Emits an {Approval} event indicating the updated allowance.   * Requirements:   * - `spender` cannot be the zero address."
							},
							"mint(uint256)": {
								"details": "Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply.   * Requirements   * - `msg.sender` must be the token owner"
							},
							"name()": {
								"details": "Returns the token name."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "See {BEP20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {BEP20-transfer}.   * Requirements:   * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {BEP20-transferFrom}.   * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20};   * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"DexSwap/USDT.sol\":11034:18777  contract BEP20USDT is Context, IBEP20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"DexSwap/USDT.sol\":11348:11580  constructor() public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n  pop\n    /* \"DexSwap/USDT.sol\":9593:9610  address msgSender */\n  0x00\n    /* \"DexSwap/USDT.sol\":9613:9625  _msgSender() */\n  tag_7\n  sub(shl(0xe0, 0x01), 0x01)\n    /* \"DexSwap/USDT.sol\":9613:9623  _msgSender */\n  tag_8\n    /* \"DexSwap/USDT.sol\":9613:9625  _msgSender() */\n  and\n  jump\t// in\ntag_7:\n    /* \"DexSwap/USDT.sol\":9631:9637  _owner */\n  0x00\n    /* \"DexSwap/USDT.sol\":9631:9649  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"DexSwap/USDT.sol\":9660:9703  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"DexSwap/USDT.sol\":9631:9649  _owner = msgSender */\n  swap3\n  swap4\n  pop\n  swap2\n    /* \"DexSwap/USDT.sol\":9660:9703  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"DexSwap/USDT.sol\":9631:9637  _owner */\n  dup3\n  swap1\n    /* \"DexSwap/USDT.sol\":9660:9703  OwnershipTransferred(address(0), msgSender) */\n  log3\n  pop\n    /* \"DexSwap/USDT.sol\":11375:11395  _name = \"ZChain USD\" */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x0a\n  dup1\n  dup3\n  mstore\n  shl(0xb2, 0x1690da185a5b881554d1)\n  0x20\n  swap1\n  swap3\n  add\n  swap2\n  dup3\n  mstore\n  tag_10\n  swap2\n    /* \"DexSwap/USDT.sol\":11375:11380  _name */\n  0x06\n  swap2\n    /* \"DexSwap/USDT.sol\":11375:11395  _name = \"ZChain USD\" */\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"DexSwap/USDT.sol\":11401:11417  _symbol = \"USDZ\" */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x04\n  dup1\n  dup3\n  mstore\n  shl(0xe1, 0x2aa9a22d)\n  0x20\n  swap1\n  swap3\n  add\n  swap2\n  dup3\n  mstore\n  tag_12\n  swap2\n    /* \"DexSwap/USDT.sol\":11401:11408  _symbol */\n  0x05\n  swap2\n    /* \"DexSwap/USDT.sol\":11401:11417  _symbol = \"USDZ\" */\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n    /* \"DexSwap/USDT.sol\":11423:11432  _decimals */\n  0x04\n    /* \"DexSwap/USDT.sol\":11423:11437  _decimals = 18 */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"DexSwap/USDT.sol\":11435:11437  18 */\n  0x12\n    /* \"DexSwap/USDT.sol\":11423:11437  _decimals = 18 */\n  or\n  swap1\n  sstore\n    /* \"DexSwap/USDT.sol\":11458:11475  1000000000*10**18 */\n  0x033b2e3c9fd0803ce8000000\n    /* \"DexSwap/USDT.sol\":11443:11455  _totalSupply */\n  0x03\n    /* \"DexSwap/USDT.sol\":11443:11475  _totalSupply = 1000000000*10**18 */\n  dup2\n  swap1\n  sstore\n    /* \"DexSwap/USDT.sol\":11491:11501  msg.sender */\n  caller\n    /* \"DexSwap/USDT.sol\":11423:11432  _decimals */\n  0x00\n    /* \"DexSwap/USDT.sol\":11481:11502  _balances[msg.sender] */\n  dup2\n  dup2\n  mstore\n    /* \"DexSwap/USDT.sol\":11423:11437  _decimals = 18 */\n  0x01\n    /* \"DexSwap/USDT.sol\":11481:11502  _balances[msg.sender] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"DexSwap/USDT.sol\":11481:11517  _balances[msg.sender] = _totalSupply */\n  dup6\n  swap1\n  sstore\n    /* \"DexSwap/USDT.sol\":11529:11575  Transfer(address(0), msg.sender, _totalSupply) */\n  dup1\n  mload\n  swap5\n  dup6\n  mstore\n  mload\n    /* \"DexSwap/USDT.sol\":11491:11501  msg.sender */\n  swap3\n  swap4\n    /* \"DexSwap/USDT.sol\":11423:11432  _decimals */\n  swap2\n  swap3\n    /* \"DexSwap/USDT.sol\":11529:11575  Transfer(address(0), msg.sender, _totalSupply) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap3\n  dup2\n  swap1\n  sub\n  swap1\n  swap2\n  add\n  swap1\n  log3\n    /* \"DexSwap/USDT.sol\":11034:18777  contract BEP20USDT is Context, IBEP20, Ownable {... */\n  jump(tag_13)\n    /* \"DexSwap/USDT.sol\":3661:3751  function _msgSender() internal view returns (address payable) {... */\ntag_8:\n    /* \"DexSwap/USDT.sol\":3736:3746  msg.sender */\n  caller\n    /* \"DexSwap/USDT.sol\":3661:3751  function _msgSender() internal view returns (address payable) {... */\ntag_14:\n  swap1\n  jump\t// out\n    /* \"DexSwap/USDT.sol\":11034:18777  contract BEP20USDT is Context, IBEP20, Ownable {... */\ntag_11:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_16\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_18)\ntag_16:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_18\n  jumpi\n  swap2\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_17)\ntag_18:\n  pop\n  tag_19\n  swap3\n  swap2\n  pop\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_20:\n  tag_14\n  swap2\n  swap1\ntag_22:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_19\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_22)\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"DexSwap/USDT.sol\":11034:18777  contract BEP20USDT is Context, IBEP20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"DexSwap/USDT.sol\":11034:18777  contract BEP20USDT is Context, IBEP20, Ownable {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x893d20e8\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xb09f1266\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd28d8852\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x893d20e8\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x32424aa3\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x32424aa3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"DexSwap/USDT.sol\":12024:12101  function name() external view returns (string memory) {... */\n    tag_3:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_28:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_28)\n    tag_30:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"DexSwap/USDT.sol\":12024:12101  function name() external view returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_31\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_31:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DexSwap/USDT.sol\":13019:13160  function approve(address spender, uint256 amount) external returns (bool) {... */\n    tag_4:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_33\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_33:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DexSwap/USDT.sol\":13019:13160  function approve(address spender, uint256 amount) external returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_34\n      jump\t// in\n    tag_32:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"DexSwap/USDT.sol\":12152:12237  function totalSupply() external view returns (uint256) {... */\n    tag_5:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"DexSwap/USDT.sol\":13591:13879  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {... */\n    tag_6:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_38\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_38:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DexSwap/USDT.sol\":13591:13879  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_39\n      jump\t// in\n        /* \"DexSwap/USDT.sol\":11766:11843  function decimals() external view returns (uint8) {... */\n    tag_7:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"DexSwap/USDT.sol\":11273:11295  uint8 public _decimals */\n    tag_8:\n      tag_40\n      tag_43\n      jump\t// in\n        /* \"DexSwap/USDT.sol\":14247:14444  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_9:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_45\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_45:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DexSwap/USDT.sol\":14247:14444  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_46\n      jump\t// in\n        /* \"DexSwap/USDT.sol\":15535:15642  function burn(uint256 amount) public returns (bool) {... */\n    tag_10:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_48\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_48:\n      pop\n        /* \"DexSwap/USDT.sol\":15535:15642  function burn(uint256 amount) public returns (bool) {... */\n      calldataload\n      tag_49\n      jump\t// in\n        /* \"DexSwap/USDT.sol\":12286:12390  function balanceOf(address account) external view returns (uint256) {... */\n    tag_11:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_51:\n      pop\n        /* \"DexSwap/USDT.sol\":12286:12390  function balanceOf(address account) external view returns (uint256) {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_52\n      jump\t// in\n        /* \"DexSwap/USDT.sol\":10359:10486  function renounceOwnership() public onlyOwner {... */\n    tag_12:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      stop\n        /* \"DexSwap/USDT.sol\":11635:11712  function getOwner() external view returns (address) {... */\n    tag_13:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"DexSwap/USDT.sol\":9776:9847  function owner() public view returns (address) {... */\n    tag_14:\n      tag_55\n      tag_58\n      jump\t// in\n        /* \"DexSwap/USDT.sol\":11895:11976  function symbol() external view returns (string memory) {... */\n    tag_15:\n      tag_26\n      tag_60\n      jump\t// in\n        /* \"DexSwap/USDT.sol\":15338:15455  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_16:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_66\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_66:\n      pop\n        /* \"DexSwap/USDT.sol\":15338:15455  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n      calldataload\n      tag_67\n      jump\t// in\n        /* \"DexSwap/USDT.sol\":14900:15148  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_17:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_69\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_69:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DexSwap/USDT.sol\":14900:15148  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_70\n      jump\t// in\n        /* \"DexSwap/USDT.sol\":12574:12721  function transfer(address recipient, uint256 amount) external returns (bool) {... */\n    tag_18:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_72\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_72:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DexSwap/USDT.sol\":12574:12721  function transfer(address recipient, uint256 amount) external returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_73\n      jump\t// in\n        /* \"DexSwap/USDT.sol\":11299:11320  string public _symbol */\n    tag_19:\n      tag_26\n      tag_75\n      jump\t// in\n        /* \"DexSwap/USDT.sol\":11324:11343  string public _name */\n    tag_20:\n      tag_26\n      tag_81\n      jump\t// in\n        /* \"DexSwap/USDT.sol\":12770:12898  function allowance(address owner, address spender) external view returns (uint256) {... */\n    tag_21:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_87\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_87:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DexSwap/USDT.sol\":12770:12898  function allowance(address owner, address spender) external view returns (uint256) {... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_88\n      jump\t// in\n        /* \"DexSwap/USDT.sol\":10625:10726  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_22:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_90\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_90:\n      pop\n        /* \"DexSwap/USDT.sol\":10625:10726  function transferOwnership(address newOwner) public onlyOwner {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_91\n      jump\t// in\n        /* \"DexSwap/USDT.sol\":12024:12101  function name() external view returns (string memory) {... */\n    tag_27:\n        /* \"DexSwap/USDT.sol\":12091:12096  _name */\n      0x06\n        /* \"DexSwap/USDT.sol\":12084:12096  return _name */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"DexSwap/USDT.sol\":12063:12076  string memory */\n      0x60\n      swap4\n        /* \"DexSwap/USDT.sol\":12084:12096  return _name */\n      swap1\n      swap3\n        /* \"DexSwap/USDT.sol\":12091:12096  _name */\n      swap1\n      swap2\n        /* \"DexSwap/USDT.sol\":12084:12096  return _name */\n      dup4\n      add\n        /* \"DexSwap/USDT.sol\":12091:12096  _name */\n      dup3\n        /* \"DexSwap/USDT.sol\":12084:12096  return _name */\n      dup3\n      dup1\n      iszero\n      tag_93\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_94\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_93)\n    tag_94:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_95:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_95\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"DexSwap/USDT.sol\":12024:12101  function name() external view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"DexSwap/USDT.sol\":13019:13160  function approve(address spender, uint256 amount) external returns (bool) {... */\n    tag_34:\n        /* \"DexSwap/USDT.sol\":13087:13091  bool */\n      0x00\n        /* \"DexSwap/USDT.sol\":13099:13138  _approve(_msgSender(), spender, amount) */\n      tag_97\n        /* \"DexSwap/USDT.sol\":13108:13120  _msgSender() */\n      tag_98\n        /* \"DexSwap/USDT.sol\":13108:13118  _msgSender */\n      tag_99\n        /* \"DexSwap/USDT.sol\":13108:13120  _msgSender() */\n      jump\t// in\n    tag_98:\n        /* \"DexSwap/USDT.sol\":13122:13129  spender */\n      dup5\n        /* \"DexSwap/USDT.sol\":13131:13137  amount */\n      dup5\n        /* \"DexSwap/USDT.sol\":13099:13107  _approve */\n      tag_100\n        /* \"DexSwap/USDT.sol\":13099:13138  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_97:\n      pop\n        /* \"DexSwap/USDT.sol\":13151:13155  true */\n      0x01\n        /* \"DexSwap/USDT.sol\":13019:13160  function approve(address spender, uint256 amount) external returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"DexSwap/USDT.sol\":12152:12237  function totalSupply() external view returns (uint256) {... */\n    tag_36:\n        /* \"DexSwap/USDT.sol\":12220:12232  _totalSupply */\n      sload(0x03)\n        /* \"DexSwap/USDT.sol\":12152:12237  function totalSupply() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"DexSwap/USDT.sol\":13591:13879  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {... */\n    tag_39:\n        /* \"DexSwap/USDT.sol\":13682:13686  bool */\n      0x00\n        /* \"DexSwap/USDT.sol\":13694:13730  _transfer(sender, recipient, amount) */\n      tag_103\n        /* \"DexSwap/USDT.sol\":13704:13710  sender */\n      dup5\n        /* \"DexSwap/USDT.sol\":13712:13721  recipient */\n      dup5\n        /* \"DexSwap/USDT.sol\":13723:13729  amount */\n      dup5\n        /* \"DexSwap/USDT.sol\":13694:13703  _transfer */\n      tag_104\n        /* \"DexSwap/USDT.sol\":13694:13730  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_103:\n        /* \"DexSwap/USDT.sol\":13736:13857  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      tag_105\n        /* \"DexSwap/USDT.sol\":13745:13751  sender */\n      dup5\n        /* \"DexSwap/USDT.sol\":13753:13765  _msgSender() */\n      tag_106\n        /* \"DexSwap/USDT.sol\":13753:13763  _msgSender */\n      tag_99\n        /* \"DexSwap/USDT.sol\":13753:13765  _msgSender() */\n      jump\t// in\n    tag_106:\n        /* \"DexSwap/USDT.sol\":13767:13856  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      tag_107\n        /* \"DexSwap/USDT.sol\":13805:13811  amount */\n      dup6\n        /* \"DexSwap/USDT.sol\":13767:13856  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e\n      0x28\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DexSwap/USDT.sol\":13767:13786  _allowances[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DexSwap/USDT.sol\":13767:13778  _allowances */\n      0x02\n        /* \"DexSwap/USDT.sol\":13767:13786  _allowances[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"DexSwap/USDT.sol\":13787:13799  _msgSender() */\n      tag_108\n        /* \"DexSwap/USDT.sol\":13787:13797  _msgSender */\n      tag_99\n        /* \"DexSwap/USDT.sol\":13787:13799  _msgSender() */\n      jump\t// in\n    tag_108:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DexSwap/USDT.sol\":13767:13800  _allowances[sender][_msgSender()] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      swap2\n        /* \"DexSwap/USDT.sol\":13767:13856  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      swap1\n      0xffffffff\n        /* \"DexSwap/USDT.sol\":13767:13804  _allowances[sender][_msgSender()].sub */\n      tag_109\n        /* \"DexSwap/USDT.sol\":13767:13856  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      and\n      jump\t// in\n    tag_107:\n        /* \"DexSwap/USDT.sol\":13736:13744  _approve */\n      tag_100\n        /* \"DexSwap/USDT.sol\":13736:13857  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_105:\n      pop\n        /* \"DexSwap/USDT.sol\":13870:13874  true */\n      0x01\n        /* \"DexSwap/USDT.sol\":13591:13879  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DexSwap/USDT.sol\":11766:11843  function decimals() external view returns (uint8) {... */\n    tag_41:\n        /* \"DexSwap/USDT.sol\":11829:11838  _decimals */\n      and(0xff, sload(0x04))\n        /* \"DexSwap/USDT.sol\":11766:11843  function decimals() external view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"DexSwap/USDT.sol\":11273:11295  uint8 public _decimals */\n    tag_43:\n      and(0xff, sload(0x04))\n      dup2\n      jump\t// out\n        /* \"DexSwap/USDT.sol\":14247:14444  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_46:\n        /* \"DexSwap/USDT.sol\":14327:14331  bool */\n      0x00\n        /* \"DexSwap/USDT.sol\":14339:14422  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_97\n        /* \"DexSwap/USDT.sol\":14348:14360  _msgSender() */\n      tag_113\n        /* \"DexSwap/USDT.sol\":14348:14358  _msgSender */\n      tag_99\n        /* \"DexSwap/USDT.sol\":14348:14360  _msgSender() */\n      jump\t// in\n    tag_113:\n        /* \"DexSwap/USDT.sol\":14362:14369  spender */\n      dup5\n        /* \"DexSwap/USDT.sol\":14371:14421  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_107\n        /* \"DexSwap/USDT.sol\":14410:14420  addedValue */\n      dup6\n        /* \"DexSwap/USDT.sol\":14371:14382  _allowances */\n      0x02\n        /* \"DexSwap/USDT.sol\":14371:14396  _allowances[_msgSender()] */\n      0x00\n        /* \"DexSwap/USDT.sol\":14383:14395  _msgSender() */\n      tag_115\n        /* \"DexSwap/USDT.sol\":14383:14393  _msgSender */\n      tag_99\n        /* \"DexSwap/USDT.sol\":14383:14395  _msgSender() */\n      jump\t// in\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DexSwap/USDT.sol\":14371:14396  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"DexSwap/USDT.sol\":14371:14405  _allowances[_msgSender()][spender] */\n      swap2\n      dup13\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"DexSwap/USDT.sol\":14371:14421  _allowances[_msgSender()][spender].add(addedValue) */\n      0xffffffff\n        /* \"DexSwap/USDT.sol\":14371:14409  _allowances[_msgSender()][spender].add */\n      tag_116\n        /* \"DexSwap/USDT.sol\":14371:14421  _allowances[_msgSender()][spender].add(addedValue) */\n      and\n      jump\t// in\n        /* \"DexSwap/USDT.sol\":15535:15642  function burn(uint256 amount) public returns (bool) {... */\n    tag_49:\n        /* \"DexSwap/USDT.sol\":15581:15585  bool */\n      0x00\n        /* \"DexSwap/USDT.sol\":15593:15620  _burn(_msgSender(), amount) */\n      tag_118\n        /* \"DexSwap/USDT.sol\":15599:15611  _msgSender() */\n      tag_119\n        /* \"DexSwap/USDT.sol\":15599:15609  _msgSender */\n      tag_99\n        /* \"DexSwap/USDT.sol\":15599:15611  _msgSender() */\n      jump\t// in\n    tag_119:\n        /* \"DexSwap/USDT.sol\":15613:15619  amount */\n      dup4\n        /* \"DexSwap/USDT.sol\":15593:15598  _burn */\n      tag_120\n        /* \"DexSwap/USDT.sol\":15593:15620  _burn(_msgSender(), amount) */\n      jump\t// in\n    tag_118:\n      pop\n        /* \"DexSwap/USDT.sol\":15633:15637  true */\n      0x01\n        /* \"DexSwap/USDT.sol\":15535:15642  function burn(uint256 amount) public returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"DexSwap/USDT.sol\":12286:12390  function balanceOf(address account) external view returns (uint256) {... */\n    tag_52:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DexSwap/USDT.sol\":12367:12385  _balances[account] */\n      and\n        /* \"DexSwap/USDT.sol\":12345:12352  uint256 */\n      0x00\n        /* \"DexSwap/USDT.sol\":12367:12385  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"DexSwap/USDT.sol\":12367:12376  _balances */\n      0x01\n        /* \"DexSwap/USDT.sol\":12367:12385  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"DexSwap/USDT.sol\":12286:12390  function balanceOf(address account) external view returns (uint256) {... */\n      jump\t// out\n        /* \"DexSwap/USDT.sol\":10359:10486  function renounceOwnership() public onlyOwner {... */\n    tag_54:\n        /* \"DexSwap/USDT.sol\":9972:9984  _msgSender() */\n      tag_123\n        /* \"DexSwap/USDT.sol\":9972:9982  _msgSender */\n      tag_99\n        /* \"DexSwap/USDT.sol\":9972:9984  _msgSender() */\n      jump\t// in\n    tag_123:\n        /* \"DexSwap/USDT.sol\":9962:9968  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"DexSwap/USDT.sol\":9962:9984  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"DexSwap/USDT.sol\":9954:10021  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_124\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_124:\n        /* \"DexSwap/USDT.sol\":10453:10454  0 */\n      0x00\n        /* \"DexSwap/USDT.sol\":10437:10443  _owner */\n      dup1\n      sload\n        /* \"DexSwap/USDT.sol\":10416:10456  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DexSwap/USDT.sol\":10437:10443  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"DexSwap/USDT.sol\":10416:10456  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"DexSwap/USDT.sol\":10453:10454  0 */\n      dup4\n      swap1\n        /* \"DexSwap/USDT.sol\":10416:10456  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"DexSwap/USDT.sol\":10479:10480  0 */\n      0x00\n        /* \"DexSwap/USDT.sol\":10462:10481  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"DexSwap/USDT.sol\":10359:10486  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"DexSwap/USDT.sol\":11635:11712  function getOwner() external view returns (address) {... */\n    tag_56:\n        /* \"DexSwap/USDT.sol\":11678:11685  address */\n      0x00\n        /* \"DexSwap/USDT.sol\":11700:11707  owner() */\n      tag_127\n        /* \"DexSwap/USDT.sol\":11700:11705  owner */\n      tag_58\n        /* \"DexSwap/USDT.sol\":11700:11707  owner() */\n      jump\t// in\n    tag_127:\n        /* \"DexSwap/USDT.sol\":11693:11707  return owner() */\n      swap1\n      pop\n        /* \"DexSwap/USDT.sol\":11635:11712  function getOwner() external view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"DexSwap/USDT.sol\":9776:9847  function owner() public view returns (address) {... */\n    tag_58:\n        /* \"DexSwap/USDT.sol\":9814:9821  address */\n      0x00\n        /* \"DexSwap/USDT.sol\":9836:9842  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"DexSwap/USDT.sol\":9776:9847  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"DexSwap/USDT.sol\":11895:11976  function symbol() external view returns (string memory) {... */\n    tag_60:\n        /* \"DexSwap/USDT.sol\":11964:11971  _symbol */\n      0x05\n        /* \"DexSwap/USDT.sol\":11957:11971  return _symbol */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"DexSwap/USDT.sol\":11936:11949  string memory */\n      0x60\n      swap4\n        /* \"DexSwap/USDT.sol\":11957:11971  return _symbol */\n      swap1\n      swap3\n        /* \"DexSwap/USDT.sol\":11964:11971  _symbol */\n      swap1\n      swap2\n        /* \"DexSwap/USDT.sol\":11957:11971  return _symbol */\n      dup4\n      add\n        /* \"DexSwap/USDT.sol\":11964:11971  _symbol */\n      dup3\n        /* \"DexSwap/USDT.sol\":11957:11971  return _symbol */\n      dup3\n      dup1\n      iszero\n      tag_93\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_94\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_93)\n        /* \"DexSwap/USDT.sol\":15338:15455  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_67:\n        /* \"DexSwap/USDT.sol\":15394:15398  bool */\n      0x00\n        /* \"DexSwap/USDT.sol\":9972:9984  _msgSender() */\n      tag_134\n        /* \"DexSwap/USDT.sol\":9972:9982  _msgSender */\n      tag_99\n        /* \"DexSwap/USDT.sol\":9972:9984  _msgSender() */\n      jump\t// in\n    tag_134:\n        /* \"DexSwap/USDT.sol\":9962:9968  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"DexSwap/USDT.sol\":9962:9984  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"DexSwap/USDT.sol\":9954:10021  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_135\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_135:\n        /* \"DexSwap/USDT.sol\":15406:15433  _mint(_msgSender(), amount) */\n      tag_118\n        /* \"DexSwap/USDT.sol\":15412:15424  _msgSender() */\n      tag_138\n        /* \"DexSwap/USDT.sol\":15412:15422  _msgSender */\n      tag_99\n        /* \"DexSwap/USDT.sol\":15412:15424  _msgSender() */\n      jump\t// in\n    tag_138:\n        /* \"DexSwap/USDT.sol\":15426:15432  amount */\n      dup4\n        /* \"DexSwap/USDT.sol\":15406:15411  _mint */\n      tag_139\n        /* \"DexSwap/USDT.sol\":15406:15433  _mint(_msgSender(), amount) */\n      jump\t// in\n        /* \"DexSwap/USDT.sol\":14900:15148  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_70:\n        /* \"DexSwap/USDT.sol\":14985:14989  bool */\n      0x00\n        /* \"DexSwap/USDT.sol\":14997:15126  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")) */\n      tag_97\n        /* \"DexSwap/USDT.sol\":15006:15018  _msgSender() */\n      tag_142\n        /* \"DexSwap/USDT.sol\":15006:15016  _msgSender */\n      tag_99\n        /* \"DexSwap/USDT.sol\":15006:15018  _msgSender() */\n      jump\t// in\n    tag_142:\n        /* \"DexSwap/USDT.sol\":15020:15027  spender */\n      dup5\n        /* \"DexSwap/USDT.sol\":15029:15125  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      tag_107\n        /* \"DexSwap/USDT.sol\":15068:15083  subtractedValue */\n      dup6\n        /* \"DexSwap/USDT.sol\":15029:15125  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22\n      0x25\n      swap2\n      codecopy\n        /* \"DexSwap/USDT.sol\":15029:15040  _allowances */\n      0x02\n        /* \"DexSwap/USDT.sol\":15029:15054  _allowances[_msgSender()] */\n      0x00\n        /* \"DexSwap/USDT.sol\":15041:15053  _msgSender() */\n      tag_144\n        /* \"DexSwap/USDT.sol\":15041:15051  _msgSender */\n      tag_99\n        /* \"DexSwap/USDT.sol\":15041:15053  _msgSender() */\n      jump\t// in\n    tag_144:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DexSwap/USDT.sol\":15029:15054  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"DexSwap/USDT.sol\":15029:15063  _allowances[_msgSender()][spender] */\n      swap2\n      dup14\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"DexSwap/USDT.sol\":15029:15125  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      swap1\n      0xffffffff\n        /* \"DexSwap/USDT.sol\":15029:15067  _allowances[_msgSender()][spender].sub */\n      tag_109\n        /* \"DexSwap/USDT.sol\":15029:15125  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      and\n      jump\t// in\n        /* \"DexSwap/USDT.sol\":12574:12721  function transfer(address recipient, uint256 amount) external returns (bool) {... */\n    tag_73:\n        /* \"DexSwap/USDT.sol\":12645:12649  bool */\n      0x00\n        /* \"DexSwap/USDT.sol\":12657:12699  _transfer(_msgSender(), recipient, amount) */\n      tag_97\n        /* \"DexSwap/USDT.sol\":12667:12679  _msgSender() */\n      tag_147\n        /* \"DexSwap/USDT.sol\":12667:12677  _msgSender */\n      tag_99\n        /* \"DexSwap/USDT.sol\":12667:12679  _msgSender() */\n      jump\t// in\n    tag_147:\n        /* \"DexSwap/USDT.sol\":12681:12690  recipient */\n      dup5\n        /* \"DexSwap/USDT.sol\":12692:12698  amount */\n      dup5\n        /* \"DexSwap/USDT.sol\":12657:12666  _transfer */\n      tag_104\n        /* \"DexSwap/USDT.sol\":12657:12699  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"DexSwap/USDT.sol\":11299:11320  string public _symbol */\n    tag_75:\n      0x05\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x02\n      0x01\n      dup6\n      and\n      iszero\n      0x0100\n      mul\n      not(0x00)\n      add\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      div\n      0x1f\n      dup2\n      add\n      dup5\n      swap1\n      div\n      dup5\n      mul\n      dup3\n      add\n      dup5\n      add\n      swap1\n      swap3\n      mstore\n      dup2\n      dup2\n      mstore\n      swap3\n      swap2\n      dup4\n      add\n      dup3\n      dup3\n      dup1\n      iszero\n      tag_148\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_149\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_148)\n    tag_149:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_150:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_150\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_148:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"DexSwap/USDT.sol\":11324:11343  string public _name */\n    tag_81:\n      0x06\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x02\n      0x01\n      dup6\n      and\n      iszero\n      0x0100\n      mul\n      not(0x00)\n      add\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      div\n      0x1f\n      dup2\n      add\n      dup5\n      swap1\n      div\n      dup5\n      mul\n      dup3\n      add\n      dup5\n      add\n      swap1\n      swap3\n      mstore\n      dup2\n      dup2\n      mstore\n      swap3\n      swap2\n      dup4\n      add\n      dup3\n      dup3\n      dup1\n      iszero\n      tag_148\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_149\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_148)\n        /* \"DexSwap/USDT.sol\":12770:12898  function allowance(address owner, address spender) external view returns (uint256) {... */\n    tag_88:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DexSwap/USDT.sol\":12866:12884  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"DexSwap/USDT.sol\":12844:12851  uint256 */\n      0x00\n        /* \"DexSwap/USDT.sol\":12866:12884  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"DexSwap/USDT.sol\":12866:12877  _allowances */\n      0x02\n        /* \"DexSwap/USDT.sol\":12866:12884  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"DexSwap/USDT.sol\":12866:12893  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"DexSwap/USDT.sol\":12770:12898  function allowance(address owner, address spender) external view returns (uint256) {... */\n      jump\t// out\n        /* \"DexSwap/USDT.sol\":10625:10726  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_91:\n        /* \"DexSwap/USDT.sol\":9972:9984  _msgSender() */\n      tag_156\n        /* \"DexSwap/USDT.sol\":9972:9982  _msgSender */\n      tag_99\n        /* \"DexSwap/USDT.sol\":9972:9984  _msgSender() */\n      jump\t// in\n    tag_156:\n        /* \"DexSwap/USDT.sol\":9962:9968  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"DexSwap/USDT.sol\":9962:9984  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"DexSwap/USDT.sol\":9954:10021  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_157\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_157:\n        /* \"DexSwap/USDT.sol\":10693:10721  _transferOwnership(newOwner) */\n      tag_159\n        /* \"DexSwap/USDT.sol\":10712:10720  newOwner */\n      dup2\n        /* \"DexSwap/USDT.sol\":10693:10711  _transferOwnership */\n      tag_160\n        /* \"DexSwap/USDT.sol\":10693:10721  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_159:\n        /* \"DexSwap/USDT.sol\":10625:10726  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"DexSwap/USDT.sol\":3661:3751  function _msgSender() internal view returns (address payable) {... */\n    tag_99:\n        /* \"DexSwap/USDT.sol\":3736:3746  msg.sender */\n      caller\n        /* \"DexSwap/USDT.sol\":3661:3751  function _msgSender() internal view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"DexSwap/USDT.sol\":18078:18392  function _approve(address owner, address spender, uint256 amount) internal {... */\n    tag_100:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DexSwap/USDT.sol\":18167:18186  owner != address(0) */\n      dup4\n      and\n        /* \"DexSwap/USDT.sol\":18159:18227  require(owner != address(0), \"BEP20: approve from the zero address\") */\n      tag_163\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_163:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DexSwap/USDT.sol\":18241:18262  spender != address(0) */\n      dup3\n      and\n        /* \"DexSwap/USDT.sol\":18233:18301  require(spender != address(0), \"BEP20: approve to the zero address\") */\n      tag_164\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_164:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DexSwap/USDT.sol\":18308:18326  _allowances[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"DexSwap/USDT.sol\":18308:18319  _allowances */\n      0x02\n        /* \"DexSwap/USDT.sol\":18308:18326  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"DexSwap/USDT.sol\":18308:18335  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"DexSwap/USDT.sol\":18308:18344  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"DexSwap/USDT.sol\":18355:18387  Approval(owner, spender, amount) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"DexSwap/USDT.sol\":18078:18392  function _approve(address owner, address spender, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DexSwap/USDT.sol\":16086:16528  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n    tag_104:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DexSwap/USDT.sol\":16179:16199  sender != address(0) */\n      dup4\n      and\n        /* \"DexSwap/USDT.sol\":16171:16241  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n      tag_166\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_166:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DexSwap/USDT.sol\":16255:16278  recipient != address(0) */\n      dup3\n      and\n        /* \"DexSwap/USDT.sol\":16247:16318  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_167:\n        /* \"DexSwap/USDT.sol\":16345:16416  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      tag_168\n        /* \"DexSwap/USDT.sol\":16367:16373  amount */\n      dup2\n        /* \"DexSwap/USDT.sol\":16345:16416  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73\n      0x26\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DexSwap/USDT.sol\":16345:16362  _balances[sender] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DexSwap/USDT.sol\":16345:16354  _balances */\n      0x01\n        /* \"DexSwap/USDT.sol\":16345:16362  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"DexSwap/USDT.sol\":16345:16416  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      swap1\n      0xffffffff\n        /* \"DexSwap/USDT.sol\":16345:16366  _balances[sender].sub */\n      tag_109\n        /* \"DexSwap/USDT.sol\":16345:16416  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      and\n      jump\t// in\n    tag_168:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DexSwap/USDT.sol\":16325:16342  _balances[sender] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DexSwap/USDT.sol\":16325:16334  _balances */\n      0x01\n        /* \"DexSwap/USDT.sol\":16325:16342  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"DexSwap/USDT.sol\":16325:16416  _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"DexSwap/USDT.sol\":16445:16465  _balances[recipient] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"DexSwap/USDT.sol\":16445:16477  _balances[recipient].add(amount) */\n      tag_169\n      swap1\n        /* \"DexSwap/USDT.sol\":16470:16476  amount */\n      dup3\n        /* \"DexSwap/USDT.sol\":16445:16477  _balances[recipient].add(amount) */\n      0xffffffff\n        /* \"DexSwap/USDT.sol\":16445:16469  _balances[recipient].add */\n      tag_116\n        /* \"DexSwap/USDT.sol\":16445:16477  _balances[recipient].add(amount) */\n      and\n      jump\t// in\n    tag_169:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DexSwap/USDT.sol\":16422:16442  _balances[recipient] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"DexSwap/USDT.sol\":16422:16431  _balances */\n      0x01\n        /* \"DexSwap/USDT.sol\":16422:16442  _balances[recipient] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"DexSwap/USDT.sol\":16422:16477  _balances[recipient] = _balances[recipient].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"DexSwap/USDT.sol\":16488:16523  Transfer(sender, recipient, amount) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"DexSwap/USDT.sol\":16422:16442  _balances[recipient] */\n      swap2\n      swap4\n        /* \"DexSwap/USDT.sol\":16488:16523  Transfer(sender, recipient, amount) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"DexSwap/USDT.sol\":16086:16528  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DexSwap/USDT.sol\":5558:5731  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_109:\n        /* \"DexSwap/USDT.sol\":5644:5651  uint256 */\n      0x00\n        /* \"DexSwap/USDT.sol\":5675:5687  errorMessage */\n      dup2\n        /* \"DexSwap/USDT.sol\":5667:5673  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"DexSwap/USDT.sol\":5659:5688  require(b <= a, errorMessage) */\n      tag_171\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_172:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_174\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_172)\n    tag_174:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"DexSwap/USDT.sol\":5659:5688  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_175\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_175:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_171:\n      pop\n      pop\n      pop\n        /* \"DexSwap/USDT.sol\":5706:5711  a - b */\n      swap1\n      sub\n      swap1\n        /* \"DexSwap/USDT.sol\":5558:5731  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"DexSwap/USDT.sol\":4760:4922  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_116:\n        /* \"DexSwap/USDT.sol\":4818:4825  uint256 */\n      0x00\n        /* \"DexSwap/USDT.sol\":4845:4850  a + b */\n      dup3\n      dup3\n      add\n        /* \"DexSwap/USDT.sol\":4864:4870  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"DexSwap/USDT.sol\":4856:4902  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_177\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_177:\n        /* \"DexSwap/USDT.sol\":4916:4917  c */\n      swap4\n        /* \"DexSwap/USDT.sol\":4760:4922  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DexSwap/USDT.sol\":17357:17681  function _burn(address account, uint256 amount) internal {... */\n    tag_120:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DexSwap/USDT.sol\":17428:17449  account != address(0) */\n      dup3\n      and\n        /* \"DexSwap/USDT.sol\":17420:17487  require(account != address(0), \"BEP20: burn from the zero address\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_179:\n        /* \"DexSwap/USDT.sol\":17515:17583  _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      tag_180\n        /* \"DexSwap/USDT.sol\":17538:17544  amount */\n      dup2\n        /* \"DexSwap/USDT.sol\":17515:17583  _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      data_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032\n      0x22\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DexSwap/USDT.sol\":17515:17533  _balances[account] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DexSwap/USDT.sol\":17515:17524  _balances */\n      0x01\n        /* \"DexSwap/USDT.sol\":17515:17533  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"DexSwap/USDT.sol\":17515:17583  _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      swap1\n      0xffffffff\n        /* \"DexSwap/USDT.sol\":17515:17537  _balances[account].sub */\n      tag_109\n        /* \"DexSwap/USDT.sol\":17515:17583  _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      and\n      jump\t// in\n    tag_180:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DexSwap/USDT.sol\":17494:17512  _balances[account] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DexSwap/USDT.sol\":17494:17503  _balances */\n      0x01\n        /* \"DexSwap/USDT.sol\":17494:17512  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"DexSwap/USDT.sol\":17494:17583  _balances[account] = _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      sstore\n        /* \"DexSwap/USDT.sol\":17604:17616  _totalSupply */\n      sload(0x03)\n        /* \"DexSwap/USDT.sol\":17604:17628  _totalSupply.sub(amount) */\n      tag_181\n      swap1\n        /* \"DexSwap/USDT.sol\":17621:17627  amount */\n      dup3\n        /* \"DexSwap/USDT.sol\":17604:17628  _totalSupply.sub(amount) */\n      0xffffffff\n        /* \"DexSwap/USDT.sol\":17604:17620  _totalSupply.sub */\n      tag_182\n        /* \"DexSwap/USDT.sol\":17604:17628  _totalSupply.sub(amount) */\n      and\n      jump\t// in\n    tag_181:\n        /* \"DexSwap/USDT.sol\":17589:17601  _totalSupply */\n      0x03\n        /* \"DexSwap/USDT.sol\":17589:17628  _totalSupply = _totalSupply.sub(amount) */\n      sstore\n        /* \"DexSwap/USDT.sol\":17639:17676  Transfer(account, address(0), amount) */\n      0x40\n      dup1\n      mload\n      dup3\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"DexSwap/USDT.sol\":17665:17666  0 */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DexSwap/USDT.sol\":17639:17676  Transfer(account, address(0), amount) */\n      dup6\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log3\n        /* \"DexSwap/USDT.sol\":17357:17681  function _burn(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"DexSwap/USDT.sol\":16778:17062  function _mint(address account, uint256 amount) internal {... */\n    tag_139:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DexSwap/USDT.sol\":16849:16870  account != address(0) */\n      dup3\n      and\n        /* \"DexSwap/USDT.sol\":16841:16906  require(account != address(0), \"BEP20: mint to the zero address\") */\n      tag_184\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x42455032303a206d696e7420746f20746865207a65726f206164647265737300\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_184:\n        /* \"DexSwap/USDT.sol\":16928:16940  _totalSupply */\n      sload(0x03)\n        /* \"DexSwap/USDT.sol\":16928:16952  _totalSupply.add(amount) */\n      tag_185\n      swap1\n        /* \"DexSwap/USDT.sol\":16945:16951  amount */\n      dup3\n        /* \"DexSwap/USDT.sol\":16928:16952  _totalSupply.add(amount) */\n      0xffffffff\n        /* \"DexSwap/USDT.sol\":16928:16944  _totalSupply.add */\n      tag_116\n        /* \"DexSwap/USDT.sol\":16928:16952  _totalSupply.add(amount) */\n      and\n      jump\t// in\n    tag_185:\n        /* \"DexSwap/USDT.sol\":16913:16925  _totalSupply */\n      0x03\n        /* \"DexSwap/USDT.sol\":16913:16952  _totalSupply = _totalSupply.add(amount) */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DexSwap/USDT.sol\":16979:16997  _balances[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DexSwap/USDT.sol\":16979:16988  _balances */\n      0x01\n        /* \"DexSwap/USDT.sol\":16979:16997  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"DexSwap/USDT.sol\":16979:17009  _balances[account].add(amount) */\n      tag_186\n      swap1\n        /* \"DexSwap/USDT.sol\":17002:17008  amount */\n      dup3\n        /* \"DexSwap/USDT.sol\":16979:17009  _balances[account].add(amount) */\n      0xffffffff\n        /* \"DexSwap/USDT.sol\":16979:17001  _balances[account].add */\n      tag_116\n        /* \"DexSwap/USDT.sol\":16979:17009  _balances[account].add(amount) */\n      and\n      jump\t// in\n    tag_186:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DexSwap/USDT.sol\":16958:16976  _balances[account] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"DexSwap/USDT.sol\":16958:16967  _balances */\n      0x01\n        /* \"DexSwap/USDT.sol\":16958:16976  _balances[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"DexSwap/USDT.sol\":16958:17009  _balances[account] = _balances[account].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"DexSwap/USDT.sol\":17020:17057  Transfer(address(0), account, amount) */\n      dup4\n      mload\n      dup6\n      dup2\n      mstore\n      swap4\n      mload\n        /* \"DexSwap/USDT.sol\":16958:16976  _balances[account] */\n      swap3\n      swap4\n      swap2\n      swap3\n        /* \"DexSwap/USDT.sol\":17020:17057  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"DexSwap/USDT.sol\":16778:17062  function _mint(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"DexSwap/USDT.sol\":10819:11030  function _transferOwnership(address newOwner) internal {... */\n    tag_160:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DexSwap/USDT.sol\":10888:10910  newOwner != address(0) */\n      dup2\n      and\n        /* \"DexSwap/USDT.sol\":10880:10953  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_188:\n        /* \"DexSwap/USDT.sol\":10985:10991  _owner */\n      0x00\n      dup1\n      sload\n        /* \"DexSwap/USDT.sol\":10964:11002  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"DexSwap/USDT.sol\":10985:10991  _owner */\n      swap3\n      and\n      swap2\n        /* \"DexSwap/USDT.sol\":10964:11002  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"DexSwap/USDT.sol\":11008:11014  _owner */\n      0x00\n        /* \"DexSwap/USDT.sol\":11008:11025  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"DexSwap/USDT.sol\":10819:11030  function _transferOwnership(address newOwner) internal {... */\n      jump\t// out\n        /* \"DexSwap/USDT.sol\":5166:5294  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_182:\n        /* \"DexSwap/USDT.sol\":5224:5231  uint256 */\n      0x00\n        /* \"DexSwap/USDT.sol\":5246:5289  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_177\n        /* \"DexSwap/USDT.sol\":5250:5251  a */\n      dup4\n        /* \"DexSwap/USDT.sol\":5253:5254  b */\n      dup4\n        /* \"DexSwap/USDT.sol\":5246:5289  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"DexSwap/USDT.sol\":5246:5249  sub */\n      tag_109\n        /* \"DexSwap/USDT.sol\":5246:5289  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    stop\n    data_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57 42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4 42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e 42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73 42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2 42455032303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22 42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n    data_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855 42455032303a206275726e2066726f6d20746865207a65726f2061646472657373\n    data_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032 42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365\n    data_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5 42455032303a20617070726f766520746f20746865207a65726f2061646472657373\n\n    auxdata: 0xa265627a7a723158208a0805e926067b33bbc59599d38d41694ebf521e292f9946f22765dacd1c0b9964736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506000620000276001600160e01b036200014116565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35060408051808201909152600a808252691690da185a5b881554d160b21b6020909201918252620000a49160069162000146565b50604080518082019091526004808252632aa9a22d60e11b6020909201918252620000d29160059162000146565b506004805460ff191660121790556b033b2e3c9fd0803ce80000006003819055336000818152600160209081526040808320859055805194855251929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a3620001e8565b335b90565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200018957805160ff1916838001178555620001b9565b82800160010185558215620001b9579182015b82811115620001b95782518255916020019190600101906200019c565b50620001c7929150620001cb565b5090565b6200014391905b80821115620001c75760008155600101620001d2565b61113d80620001f86000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c8063893d20e8116100ad578063a9059cbb11610071578063a9059cbb1461035a578063b09f126614610386578063d28d88521461038e578063dd62ed3e14610396578063f2fde38b146103c45761012c565b8063893d20e8146102dd5780638da5cb5b1461030157806395d89b4114610309578063a0712d6814610311578063a457c2d71461032e5761012c565b806332424aa3116100f457806332424aa31461025c578063395093511461026457806342966c681461029057806370a08231146102ad578063715018a6146102d35761012c565b806306fdde0314610131578063095ea7b3146101ae57806318160ddd146101ee57806323b872dd14610208578063313ce5671461023e575b600080fd5b6101396103ea565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561017357818101518382015260200161015b565b50505050905090810190601f1680156101a05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101da600480360360408110156101c457600080fd5b506001600160a01b038135169060200135610480565b604080519115158252519081900360200190f35b6101f661049d565b60408051918252519081900360200190f35b6101da6004803603606081101561021e57600080fd5b506001600160a01b038135811691602081013590911690604001356104a3565b610246610530565b6040805160ff9092168252519081900360200190f35b610246610539565b6101da6004803603604081101561027a57600080fd5b506001600160a01b038135169060200135610542565b6101da600480360360208110156102a657600080fd5b5035610596565b6101f6600480360360208110156102c357600080fd5b50356001600160a01b03166105b1565b6102db6105cc565b005b6102e5610680565b604080516001600160a01b039092168252519081900360200190f35b6102e561068f565b61013961069e565b6101da6004803603602081101561032757600080fd5b50356106ff565b6101da6004803603604081101561034457600080fd5b506001600160a01b03813516906020013561077c565b6101da6004803603604081101561037057600080fd5b506001600160a01b0381351690602001356107ea565b6101396107fe565b61013961088c565b6101f6600480360360408110156103ac57600080fd5b506001600160a01b03813581169160200135166108e7565b6102db600480360360208110156103da57600080fd5b50356001600160a01b0316610912565b60068054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104765780601f1061044b57610100808354040283529160200191610476565b820191906000526020600020905b81548152906001019060200180831161045957829003601f168201915b5050505050905090565b600061049461048d610988565b848461098c565b50600192915050565b60035490565b60006104b0848484610a78565b610526846104bc610988565b6105218560405180606001604052806028815260200161100e602891396001600160a01b038a166000908152600260205260408120906104fa610988565b6001600160a01b03168152602081019190915260400160002054919063ffffffff610bd616565b61098c565b5060019392505050565b60045460ff1690565b60045460ff1681565b600061049461054f610988565b846105218560026000610560610988565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610c6d16565b60006105a96105a3610988565b83610cce565b506001919050565b6001600160a01b031660009081526001602052604090205490565b6105d4610988565b6000546001600160a01b03908116911614610636576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b600061068a61068f565b905090565b6000546001600160a01b031690565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104765780601f1061044b57610100808354040283529160200191610476565b6000610709610988565b6000546001600160a01b0390811691161461076b576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6105a9610776610988565b83610dca565b6000610494610789610988565b846105218560405180606001604052806025815260200161107f60259139600260006107b3610988565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff610bd616565b60006104946107f7610988565b8484610a78565b6005805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156108845780601f1061085957610100808354040283529160200191610884565b820191906000526020600020905b81548152906001019060200180831161086757829003601f168201915b505050505081565b6006805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156108845780601f1061085957610100808354040283529160200191610884565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b61091a610988565b6000546001600160a01b0390811691161461097c576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b61098581610ebc565b50565b3390565b6001600160a01b0383166109d15760405162461bcd60e51b8152600401808060200182810382526024815260200180610fc46024913960400191505060405180910390fd5b6001600160a01b038216610a165760405162461bcd60e51b81526004018080602001828103825260228152602001806110e76022913960400191505060405180910390fd5b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610abd5760405162461bcd60e51b8152600401808060200182810382526025815260200180610f9f6025913960400191505060405180910390fd5b6001600160a01b038216610b025760405162461bcd60e51b815260040180806020018281038252602381526020018061105c6023913960400191505060405180910390fd5b610b4581604051806060016040528060268152602001611036602691396001600160a01b038616600090815260016020526040902054919063ffffffff610bd616565b6001600160a01b038085166000908152600160205260408082209390935590841681522054610b7a908263ffffffff610c6d16565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610c655760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610c2a578181015183820152602001610c12565b50505050905090810190601f168015610c575780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610cc7576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610d135760405162461bcd60e51b81526004018080602001828103825260218152602001806110a46021913960400191505060405180910390fd5b610d56816040518060600160405280602281526020016110c5602291396001600160a01b038516600090815260016020526040902054919063ffffffff610bd616565b6001600160a01b038316600090815260016020526040902055600354610d82908263ffffffff610f5c16565b6003556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6001600160a01b038216610e25576040805162461bcd60e51b815260206004820152601f60248201527f42455032303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600354610e38908263ffffffff610c6d16565b6003556001600160a01b038216600090815260016020526040902054610e64908263ffffffff610c6d16565b6001600160a01b03831660008181526001602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038116610f015760405162461bcd60e51b8152600401808060200182810382526026815260200180610fe86026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000610cc783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610bd656fe42455032303a207472616e736665722066726f6d20746865207a65726f206164647265737342455032303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737342455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a207472616e7366657220746f20746865207a65726f206164647265737342455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a206275726e2066726f6d20746865207a65726f206164647265737342455032303a206275726e20616d6f756e7420657863656564732062616c616e636542455032303a20617070726f766520746f20746865207a65726f2061646472657373a265627a7a723158208a0805e926067b33bbc59599d38d41694ebf521e292f9946f22765dacd1c0b9964736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH3 0x27 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH3 0x141 AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xA DUP1 DUP3 MSTORE PUSH10 0x1690DA185A5B881554D1 PUSH1 0xB2 SHL PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 DUP3 MSTORE PUSH3 0xA4 SWAP2 PUSH1 0x6 SWAP2 PUSH3 0x146 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP1 DUP3 MSTORE PUSH4 0x2AA9A22D PUSH1 0xE1 SHL PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 DUP3 MSTORE PUSH3 0xD2 SWAP2 PUSH1 0x5 SWAP2 PUSH3 0x146 JUMP JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE PUSH12 0x33B2E3C9FD0803CE8000000 PUSH1 0x3 DUP2 SWAP1 SSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE DUP1 MLOAD SWAP5 DUP6 MSTORE MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 PUSH3 0x1E8 JUMP JUMPDEST CALLER JUMPDEST SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x189 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x1B9 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x1B9 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x1B9 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x19C JUMP JUMPDEST POP PUSH3 0x1C7 SWAP3 SWAP2 POP PUSH3 0x1CB JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x143 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x1C7 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1D2 JUMP JUMPDEST PUSH2 0x113D DUP1 PUSH3 0x1F8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0xB09F1266 EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0xD28D8852 EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3C4 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x32E JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x32424AA3 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x32424AA3 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2D3 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x23E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x173 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x15B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1A0 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x480 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1F6 PUSH2 0x49D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1DA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x21E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x4A3 JUMP JUMPDEST PUSH2 0x246 PUSH2 0x530 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x246 PUSH2 0x539 JUMP JUMPDEST PUSH2 0x1DA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x542 JUMP JUMPDEST PUSH2 0x1DA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x596 JUMP JUMPDEST PUSH2 0x1F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5B1 JUMP JUMPDEST PUSH2 0x2DB PUSH2 0x5CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E5 PUSH2 0x680 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2E5 PUSH2 0x68F JUMP JUMPDEST PUSH2 0x139 PUSH2 0x69E JUMP JUMPDEST PUSH2 0x1DA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x6FF JUMP JUMPDEST PUSH2 0x1DA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x77C JUMP JUMPDEST PUSH2 0x1DA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x370 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x7EA JUMP JUMPDEST PUSH2 0x139 PUSH2 0x7FE JUMP JUMPDEST PUSH2 0x139 PUSH2 0x88C JUMP JUMPDEST PUSH2 0x1F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x8E7 JUMP JUMPDEST PUSH2 0x2DB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x912 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x476 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x44B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x476 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x459 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x494 PUSH2 0x48D PUSH2 0x988 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x98C JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B0 DUP5 DUP5 DUP5 PUSH2 0xA78 JUMP JUMPDEST PUSH2 0x526 DUP5 PUSH2 0x4BC PUSH2 0x988 JUMP JUMPDEST PUSH2 0x521 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x100E PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x4FA PUSH2 0x988 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xBD6 AND JUMP JUMPDEST PUSH2 0x98C JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x494 PUSH2 0x54F PUSH2 0x988 JUMP JUMPDEST DUP5 PUSH2 0x521 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x560 PUSH2 0x988 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xC6D AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A9 PUSH2 0x5A3 PUSH2 0x988 JUMP JUMPDEST DUP4 PUSH2 0xCCE JUMP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x5D4 PUSH2 0x988 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x636 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x68A PUSH2 0x68F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x476 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x44B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x476 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x709 PUSH2 0x988 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x76B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x5A9 PUSH2 0x776 PUSH2 0x988 JUMP JUMPDEST DUP4 PUSH2 0xDCA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x494 PUSH2 0x789 PUSH2 0x988 JUMP JUMPDEST DUP5 PUSH2 0x521 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x107F PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0x7B3 PUSH2 0x988 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xBD6 AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x494 PUSH2 0x7F7 PUSH2 0x988 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x884 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x859 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x884 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x867 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x884 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x859 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x884 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x91A PUSH2 0x988 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x97C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x985 DUP2 PUSH2 0xEBC JUMP JUMPDEST POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x9D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFC4 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA16 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x10E7 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xABD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF9F PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB02 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x105C PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB45 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1036 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xBD6 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xB7A SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xC6D AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xC65 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC2A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xC12 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xC57 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xCC7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD13 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x10A4 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD56 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10C5 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xBD6 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x3 SLOAD PUSH2 0xD82 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xF5C AND JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE25 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xE38 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xC6D AND JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xE64 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xC6D AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xF01 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFE8 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCC7 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xBD6 JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737342455032303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737342455032303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654245 POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636542455032303A207472616E73 PUSH7 0x657220746F2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737342 GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737342455032303A206275726E20616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65424550 ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A265627A7A723158208A0805E926067B CALLER 0xBB 0xC5 SWAP6 SWAP10 0xD3 DUP14 COINBASE PUSH10 0x4EBF521E292F9946F227 PUSH6 0xDACD1C0B9964 PUSH20 0x6F6C634300051000320000000000000000000000 ",
							"sourceMap": "11034:7743:0:-;;;11348:232;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;9593:17:0;9613:12;-1:-1:-1;;;;;9613:10:0;:12;:::i;:::-;9631:6;:18;;-1:-1:-1;;;;;;9631:18:0;-1:-1:-1;;;;;9631:18:0;;;;;;;9660:43;;9631:18;;-1:-1:-1;9631:18:0;9660:43;;9631:6;;9660:43;-1:-1:-1;11375:20:0;;;;;;;;;;;;;-1:-1:-1;;;11375:20:0;;;;;;;;;:5;;:20;:::i;:::-;-1:-1:-1;11401:16:0;;;;;;;;;;;;;-1:-1:-1;;;11401:16:0;;;;;;;;;:7;;:16;:::i;:::-;-1:-1:-1;11423:9:0;:14;;-1:-1:-1;;11423:14:0;11435:2;11423:14;;;11458:17;11443:12;:32;;;11491:10;11423:9;11481:21;;;11423:14;11481:21;;;;;;;;:36;;;11529:46;;;;;;11491:10;;11423:9;;11529:46;;;;;;;;;;11034:7743;;3661:90;3736:10;3661:90;;:::o;11034:7743::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11034:7743:0;;;-1:-1:-1;11034:7743:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061012c5760003560e01c8063893d20e8116100ad578063a9059cbb11610071578063a9059cbb1461035a578063b09f126614610386578063d28d88521461038e578063dd62ed3e14610396578063f2fde38b146103c45761012c565b8063893d20e8146102dd5780638da5cb5b1461030157806395d89b4114610309578063a0712d6814610311578063a457c2d71461032e5761012c565b806332424aa3116100f457806332424aa31461025c578063395093511461026457806342966c681461029057806370a08231146102ad578063715018a6146102d35761012c565b806306fdde0314610131578063095ea7b3146101ae57806318160ddd146101ee57806323b872dd14610208578063313ce5671461023e575b600080fd5b6101396103ea565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561017357818101518382015260200161015b565b50505050905090810190601f1680156101a05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101da600480360360408110156101c457600080fd5b506001600160a01b038135169060200135610480565b604080519115158252519081900360200190f35b6101f661049d565b60408051918252519081900360200190f35b6101da6004803603606081101561021e57600080fd5b506001600160a01b038135811691602081013590911690604001356104a3565b610246610530565b6040805160ff9092168252519081900360200190f35b610246610539565b6101da6004803603604081101561027a57600080fd5b506001600160a01b038135169060200135610542565b6101da600480360360208110156102a657600080fd5b5035610596565b6101f6600480360360208110156102c357600080fd5b50356001600160a01b03166105b1565b6102db6105cc565b005b6102e5610680565b604080516001600160a01b039092168252519081900360200190f35b6102e561068f565b61013961069e565b6101da6004803603602081101561032757600080fd5b50356106ff565b6101da6004803603604081101561034457600080fd5b506001600160a01b03813516906020013561077c565b6101da6004803603604081101561037057600080fd5b506001600160a01b0381351690602001356107ea565b6101396107fe565b61013961088c565b6101f6600480360360408110156103ac57600080fd5b506001600160a01b03813581169160200135166108e7565b6102db600480360360208110156103da57600080fd5b50356001600160a01b0316610912565b60068054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104765780601f1061044b57610100808354040283529160200191610476565b820191906000526020600020905b81548152906001019060200180831161045957829003601f168201915b5050505050905090565b600061049461048d610988565b848461098c565b50600192915050565b60035490565b60006104b0848484610a78565b610526846104bc610988565b6105218560405180606001604052806028815260200161100e602891396001600160a01b038a166000908152600260205260408120906104fa610988565b6001600160a01b03168152602081019190915260400160002054919063ffffffff610bd616565b61098c565b5060019392505050565b60045460ff1690565b60045460ff1681565b600061049461054f610988565b846105218560026000610560610988565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610c6d16565b60006105a96105a3610988565b83610cce565b506001919050565b6001600160a01b031660009081526001602052604090205490565b6105d4610988565b6000546001600160a01b03908116911614610636576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b600061068a61068f565b905090565b6000546001600160a01b031690565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104765780601f1061044b57610100808354040283529160200191610476565b6000610709610988565b6000546001600160a01b0390811691161461076b576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6105a9610776610988565b83610dca565b6000610494610789610988565b846105218560405180606001604052806025815260200161107f60259139600260006107b3610988565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff610bd616565b60006104946107f7610988565b8484610a78565b6005805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156108845780601f1061085957610100808354040283529160200191610884565b820191906000526020600020905b81548152906001019060200180831161086757829003601f168201915b505050505081565b6006805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156108845780601f1061085957610100808354040283529160200191610884565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b61091a610988565b6000546001600160a01b0390811691161461097c576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b61098581610ebc565b50565b3390565b6001600160a01b0383166109d15760405162461bcd60e51b8152600401808060200182810382526024815260200180610fc46024913960400191505060405180910390fd5b6001600160a01b038216610a165760405162461bcd60e51b81526004018080602001828103825260228152602001806110e76022913960400191505060405180910390fd5b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610abd5760405162461bcd60e51b8152600401808060200182810382526025815260200180610f9f6025913960400191505060405180910390fd5b6001600160a01b038216610b025760405162461bcd60e51b815260040180806020018281038252602381526020018061105c6023913960400191505060405180910390fd5b610b4581604051806060016040528060268152602001611036602691396001600160a01b038616600090815260016020526040902054919063ffffffff610bd616565b6001600160a01b038085166000908152600160205260408082209390935590841681522054610b7a908263ffffffff610c6d16565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610c655760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610c2a578181015183820152602001610c12565b50505050905090810190601f168015610c575780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610cc7576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610d135760405162461bcd60e51b81526004018080602001828103825260218152602001806110a46021913960400191505060405180910390fd5b610d56816040518060600160405280602281526020016110c5602291396001600160a01b038516600090815260016020526040902054919063ffffffff610bd616565b6001600160a01b038316600090815260016020526040902055600354610d82908263ffffffff610f5c16565b6003556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6001600160a01b038216610e25576040805162461bcd60e51b815260206004820152601f60248201527f42455032303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600354610e38908263ffffffff610c6d16565b6003556001600160a01b038216600090815260016020526040902054610e64908263ffffffff610c6d16565b6001600160a01b03831660008181526001602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038116610f015760405162461bcd60e51b8152600401808060200182810382526026815260200180610fe86026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000610cc783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610bd656fe42455032303a207472616e736665722066726f6d20746865207a65726f206164647265737342455032303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737342455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a207472616e7366657220746f20746865207a65726f206164647265737342455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a206275726e2066726f6d20746865207a65726f206164647265737342455032303a206275726e20616d6f756e7420657863656564732062616c616e636542455032303a20617070726f766520746f20746865207a65726f2061646472657373a265627a7a723158208a0805e926067b33bbc59599d38d41694ebf521e292f9946f22765dacd1c0b9964736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0xB09F1266 EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0xD28D8852 EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3C4 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x32E JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x32424AA3 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x32424AA3 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2D3 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x23E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x173 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x15B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1A0 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x480 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1F6 PUSH2 0x49D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1DA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x21E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x4A3 JUMP JUMPDEST PUSH2 0x246 PUSH2 0x530 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x246 PUSH2 0x539 JUMP JUMPDEST PUSH2 0x1DA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x542 JUMP JUMPDEST PUSH2 0x1DA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x596 JUMP JUMPDEST PUSH2 0x1F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5B1 JUMP JUMPDEST PUSH2 0x2DB PUSH2 0x5CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E5 PUSH2 0x680 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2E5 PUSH2 0x68F JUMP JUMPDEST PUSH2 0x139 PUSH2 0x69E JUMP JUMPDEST PUSH2 0x1DA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x6FF JUMP JUMPDEST PUSH2 0x1DA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x77C JUMP JUMPDEST PUSH2 0x1DA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x370 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x7EA JUMP JUMPDEST PUSH2 0x139 PUSH2 0x7FE JUMP JUMPDEST PUSH2 0x139 PUSH2 0x88C JUMP JUMPDEST PUSH2 0x1F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x8E7 JUMP JUMPDEST PUSH2 0x2DB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x912 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x476 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x44B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x476 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x459 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x494 PUSH2 0x48D PUSH2 0x988 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x98C JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B0 DUP5 DUP5 DUP5 PUSH2 0xA78 JUMP JUMPDEST PUSH2 0x526 DUP5 PUSH2 0x4BC PUSH2 0x988 JUMP JUMPDEST PUSH2 0x521 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x100E PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x4FA PUSH2 0x988 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xBD6 AND JUMP JUMPDEST PUSH2 0x98C JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x494 PUSH2 0x54F PUSH2 0x988 JUMP JUMPDEST DUP5 PUSH2 0x521 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x560 PUSH2 0x988 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xC6D AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A9 PUSH2 0x5A3 PUSH2 0x988 JUMP JUMPDEST DUP4 PUSH2 0xCCE JUMP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x5D4 PUSH2 0x988 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x636 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x68A PUSH2 0x68F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x476 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x44B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x476 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x709 PUSH2 0x988 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x76B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x5A9 PUSH2 0x776 PUSH2 0x988 JUMP JUMPDEST DUP4 PUSH2 0xDCA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x494 PUSH2 0x789 PUSH2 0x988 JUMP JUMPDEST DUP5 PUSH2 0x521 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x107F PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0x7B3 PUSH2 0x988 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xBD6 AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x494 PUSH2 0x7F7 PUSH2 0x988 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x884 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x859 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x884 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x867 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x884 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x859 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x884 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x91A PUSH2 0x988 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x97C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x985 DUP2 PUSH2 0xEBC JUMP JUMPDEST POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x9D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFC4 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA16 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x10E7 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xABD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF9F PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB02 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x105C PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB45 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1036 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xBD6 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xB7A SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xC6D AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xC65 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC2A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xC12 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xC57 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xCC7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD13 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x10A4 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD56 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10C5 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xBD6 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x3 SLOAD PUSH2 0xD82 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xF5C AND JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE25 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xE38 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xC6D AND JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xE64 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xC6D AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xF01 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFE8 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCC7 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xBD6 JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737342455032303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737342455032303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654245 POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636542455032303A207472616E73 PUSH7 0x657220746F2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737342 GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737342455032303A206275726E20616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65424550 ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A265627A7A723158208A0805E926067B CALLER 0xBB 0xC5 SWAP6 SWAP10 0xD3 DUP14 COINBASE PUSH10 0x4EBF521E292F9946F227 PUSH6 0xDACD1C0B9964 PUSH20 0x6F6C634300051000320000000000000000000000 ",
							"sourceMap": "11034:7743:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11034:7743:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12024:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;12024:77:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13019:141;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;13019:141:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;12152:85;;;:::i;:::-;;;;;;;;;;;;;;;;13591:288;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;13591:288:0;;;;;;;;;;;;;;;;;:::i;11766:77::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;11273:22;;;:::i;14247:197::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;14247:197:0;;;;;;;;:::i;15535:107::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;15535:107:0;;:::i;12286:104::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12286:104:0;-1:-1:-1;;;;;12286:104:0;;:::i;10359:127::-;;;:::i;:::-;;11635:77;;;:::i;:::-;;;;-1:-1:-1;;;;;11635:77:0;;;;;;;;;;;;;;9776:71;;;:::i;11895:81::-;;;:::i;15338:117::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;15338:117:0;;:::i;14900:248::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;14900:248:0;;;;;;;;:::i;12574:147::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;12574:147:0;;;;;;;;:::i;11299:21::-;;;:::i;11324:19::-;;;:::i;12770:128::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;12770:128:0;;;;;;;;;;:::i;10625:101::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10625:101:0;-1:-1:-1;;;;;10625:101:0;;:::i;12024:77::-;12091:5;12084:12;;;;;;;;-1:-1:-1;;12084:12:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12063:13;;12084:12;;12091:5;;12084:12;;12091:5;12084:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12024:77;:::o;13019:141::-;13087:4;13099:39;13108:12;:10;:12::i;:::-;13122:7;13131:6;13099:8;:39::i;:::-;-1:-1:-1;13151:4:0;13019:141;;;;:::o;12152:85::-;12220:12;;12152:85;:::o;13591:288::-;13682:4;13694:36;13704:6;13712:9;13723:6;13694:9;:36::i;:::-;13736:121;13745:6;13753:12;:10;:12::i;:::-;13767:89;13805:6;13767:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13767:19:0;;;;;;:11;:19;;;;;;13787:12;:10;:12::i;:::-;-1:-1:-1;;;;;13767:33:0;;;;;;;;;;;;-1:-1:-1;13767:33:0;;;:89;;:37;:89;:::i;:::-;13736:8;:121::i;:::-;-1:-1:-1;13870:4:0;13591:288;;;;;:::o;11766:77::-;11829:9;;;;11766:77;:::o;11273:22::-;;;;;;:::o;14247:197::-;14327:4;14339:83;14348:12;:10;:12::i;:::-;14362:7;14371:50;14410:10;14371:11;:25;14383:12;:10;:12::i;:::-;-1:-1:-1;;;;;14371:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;14371:25:0;;;:34;;;;;;;;;;;:50;:38;:50;:::i;15535:107::-;15581:4;15593:27;15599:12;:10;:12::i;:::-;15613:6;15593:5;:27::i;:::-;-1:-1:-1;15633:4:0;15535:107;;;:::o;12286:104::-;-1:-1:-1;;;;;12367:18:0;12345:7;12367:18;;;:9;:18;;;;;;;12286:104::o;10359:127::-;9972:12;:10;:12::i;:::-;9962:6;;-1:-1:-1;;;;;9962:6:0;;;:22;;;9954:67;;;;;-1:-1:-1;;;9954:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10453:1;10437:6;;10416:40;;-1:-1:-1;;;;;10437:6:0;;;;10416:40;;10453:1;;10416:40;10479:1;10462:19;;-1:-1:-1;;;;;;10462:19:0;;;10359:127::o;11635:77::-;11678:7;11700;:5;:7::i;:::-;11693:14;;11635:77;:::o;9776:71::-;9814:7;9836:6;-1:-1:-1;;;;;9836:6:0;9776:71;:::o;11895:81::-;11964:7;11957:14;;;;;;;;-1:-1:-1;;11957:14:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11936:13;;11957:14;;11964:7;;11957:14;;11964:7;11957:14;;;;;;;;;;;;;;;;;;;;;;;;15338:117;15394:4;9972:12;:10;:12::i;:::-;9962:6;;-1:-1:-1;;;;;9962:6:0;;;:22;;;9954:67;;;;;-1:-1:-1;;;9954:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15406:27;15412:12;:10;:12::i;:::-;15426:6;15406:5;:27::i;14900:248::-;14985:4;14997:129;15006:12;:10;:12::i;:::-;15020:7;15029:96;15068:15;15029:96;;;;;;;;;;;;;;;;;:11;:25;15041:12;:10;:12::i;:::-;-1:-1:-1;;;;;15029:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;15029:25:0;;;:34;;;;;;;;;;;:96;;:38;:96;:::i;12574:147::-;12645:4;12657:42;12667:12;:10;:12::i;:::-;12681:9;12692:6;12657:9;:42::i;11299:21::-;;;;;;;;;;;;;;;-1:-1:-1;;11299:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;11324:19::-;;;;;;;;;;;;;;;-1:-1:-1;;11324:19:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12770:128;-1:-1:-1;;;;;12866:18:0;;;12844:7;12866:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;12770:128::o;10625:101::-;9972:12;:10;:12::i;:::-;9962:6;;-1:-1:-1;;;;;9962:6:0;;;:22;;;9954:67;;;;;-1:-1:-1;;;9954:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10693:28;10712:8;10693:18;:28::i;:::-;10625:101;:::o;3661:90::-;3736:10;3661:90;:::o;18078:314::-;-1:-1:-1;;;;;18167:19:0;;18159:68;;;;-1:-1:-1;;;18159:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18241:21:0;;18233:68;;;;-1:-1:-1;;;18233:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18308:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;18355:32;;;;;;;;;;;;;;;;;18078:314;;;:::o;16086:442::-;-1:-1:-1;;;;;16179:20:0;;16171:70;;;;-1:-1:-1;;;16171:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16255:23:0;;16247:71;;;;-1:-1:-1;;;16247:71:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16345;16367:6;16345:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16345:17:0;;;;;;:9;:17;;;;;;;:71;;:21;:71;:::i;:::-;-1:-1:-1;;;;;16325:17:0;;;;;;;:9;:17;;;;;;:91;;;;16445:20;;;;;;;:32;;16470:6;16445:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;16422:20:0;;;;;;;:9;:20;;;;;;;;;:55;;;;16488:35;;;;;;;16422:20;;16488:35;;;;;;;;;;;;;16086:442;;;:::o;5558:173::-;5644:7;5675:12;5667:6;;;;5659:29;;;;-1:-1:-1;;;5659:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5659:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5706:5:0;;;5558:173::o;4760:162::-;4818:7;4845:5;;;4864:6;;;;4856:46;;;;;-1:-1:-1;;;4856:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;4916:1;4760:162;-1:-1:-1;;;4760:162:0:o;17357:324::-;-1:-1:-1;;;;;17428:21:0;;17420:67;;;;-1:-1:-1;;;17420:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17515:68;17538:6;17515:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;17515:18:0;;;;;;:9;:18;;;;;;;:68;;:22;:68;:::i;:::-;-1:-1:-1;;;;;17494:18:0;;;;;;:9;:18;;;;;:89;17604:12;;:24;;17621:6;17604:24;:16;:24;:::i;:::-;17589:12;:39;17639:37;;;;;;;;17665:1;;-1:-1:-1;;;;;17639:37:0;;;;;;;;;;;;17357:324;;:::o;16778:284::-;-1:-1:-1;;;;;16849:21:0;;16841:65;;;;;-1:-1:-1;;;16841:65:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;16928:12;;:24;;16945:6;16928:24;:16;:24;:::i;:::-;16913:12;:39;-1:-1:-1;;;;;16979:18:0;;;;;;:9;:18;;;;;;:30;;17002:6;16979:30;:22;:30;:::i;:::-;-1:-1:-1;;;;;16958:18:0;;;;;;:9;:18;;;;;;;;:51;;;;17020:37;;;;;;;16958:18;;;;17020:37;;;;;;;;;;16778:284;;:::o;10819:211::-;-1:-1:-1;;;;;10888:22:0;;10880:73;;;;-1:-1:-1;;;10880:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10985:6;;;10964:38;;-1:-1:-1;;;;;10964:38:0;;;;10985:6;;;10964:38;;;11008:6;:17;;-1:-1:-1;;;;;;11008:17:0;-1:-1:-1;;;;;11008:17:0;;;;;;;;;;10819:211::o;5166:128::-;5224:7;5246:43;5250:1;5253;5246:43;;;;;;;;;;;;;;;;;:3;:43::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "882600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_decimals()": "1036",
								"_name()": "infinite",
								"_symbol()": "infinite",
								"allowance(address,address)": "1338",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1231",
								"burn(uint256)": "infinite",
								"decimals()": "1125",
								"decreaseAllowance(address,uint256)": "infinite",
								"getOwner()": "1095",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"owner()": "1082",
								"renounceOwnership()": "24315",
								"symbol()": "infinite",
								"totalSupply()": "1066",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 11034,
									"end": 18777,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "MSTORE"
								},
								{
									"begin": 11348,
									"end": 11580,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 9593,
									"end": 9610,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9613,
									"end": 9625,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 9613,
									"end": 9623,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 9613,
									"end": 9625,
									"name": "AND"
								},
								{
									"begin": 9613,
									"end": 9625,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 9613,
									"end": 9625,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 9613,
									"end": 9625,
									"name": "JUMPDEST"
								},
								{
									"begin": 9631,
									"end": 9637,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9631,
									"end": 9649,
									"name": "DUP1"
								},
								{
									"begin": 9631,
									"end": 9649,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 9631,
									"end": 9649,
									"name": "AND"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 9631,
									"end": 9649,
									"name": "DUP4"
								},
								{
									"begin": 9631,
									"end": 9649,
									"name": "AND"
								},
								{
									"begin": 9631,
									"end": 9649,
									"name": "SWAP1"
								},
								{
									"begin": 9631,
									"end": 9649,
									"name": "DUP2"
								},
								{
									"begin": 9631,
									"end": 9649,
									"name": "OR"
								},
								{
									"begin": 9631,
									"end": 9649,
									"name": "DUP3"
								},
								{
									"begin": 9631,
									"end": 9649,
									"name": "SSTORE"
								},
								{
									"begin": 9660,
									"end": 9703,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 9660,
									"end": 9703,
									"name": "MLOAD"
								},
								{
									"begin": 9631,
									"end": 9649,
									"name": "SWAP3"
								},
								{
									"begin": 9631,
									"end": 9649,
									"name": "SWAP4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 9631,
									"end": 9649,
									"name": "SWAP2"
								},
								{
									"begin": 9660,
									"end": 9703,
									"name": "PUSH",
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 9660,
									"end": 9703,
									"name": "SWAP1"
								},
								{
									"begin": 9631,
									"end": 9637,
									"name": "DUP3"
								},
								{
									"begin": 9631,
									"end": 9637,
									"name": "SWAP1"
								},
								{
									"begin": 9660,
									"end": 9703,
									"name": "LOG3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 11375,
									"end": 11395,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11375,
									"end": 11395,
									"name": "DUP1"
								},
								{
									"begin": 11375,
									"end": 11395,
									"name": "MLOAD"
								},
								{
									"begin": 11375,
									"end": 11395,
									"name": "DUP1"
								},
								{
									"begin": 11375,
									"end": 11395,
									"name": "DUP3"
								},
								{
									"begin": 11375,
									"end": 11395,
									"name": "ADD"
								},
								{
									"begin": 11375,
									"end": 11395,
									"name": "SWAP1"
								},
								{
									"begin": 11375,
									"end": 11395,
									"name": "SWAP2"
								},
								{
									"begin": 11375,
									"end": 11395,
									"name": "MSTORE"
								},
								{
									"begin": 11375,
									"end": 11395,
									"name": "PUSH",
									"value": "A"
								},
								{
									"begin": 11375,
									"end": 11395,
									"name": "DUP1"
								},
								{
									"begin": 11375,
									"end": 11395,
									"name": "DUP3"
								},
								{
									"begin": 11375,
									"end": 11395,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1690DA185A5B881554D1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "B2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 11375,
									"end": 11395,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11375,
									"end": 11395,
									"name": "SWAP1"
								},
								{
									"begin": 11375,
									"end": 11395,
									"name": "SWAP3"
								},
								{
									"begin": 11375,
									"end": 11395,
									"name": "ADD"
								},
								{
									"begin": 11375,
									"end": 11395,
									"name": "SWAP2"
								},
								{
									"begin": 11375,
									"end": 11395,
									"name": "DUP3"
								},
								{
									"begin": 11375,
									"end": 11395,
									"name": "MSTORE"
								},
								{
									"begin": 11375,
									"end": 11395,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 11375,
									"end": 11395,
									"name": "SWAP2"
								},
								{
									"begin": 11375,
									"end": 11380,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 11375,
									"end": 11380,
									"name": "SWAP2"
								},
								{
									"begin": 11375,
									"end": 11395,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 11375,
									"end": 11395,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 11375,
									"end": 11395,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 11375,
									"end": 11395,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 11401,
									"end": 11417,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11401,
									"end": 11417,
									"name": "DUP1"
								},
								{
									"begin": 11401,
									"end": 11417,
									"name": "MLOAD"
								},
								{
									"begin": 11401,
									"end": 11417,
									"name": "DUP1"
								},
								{
									"begin": 11401,
									"end": 11417,
									"name": "DUP3"
								},
								{
									"begin": 11401,
									"end": 11417,
									"name": "ADD"
								},
								{
									"begin": 11401,
									"end": 11417,
									"name": "SWAP1"
								},
								{
									"begin": 11401,
									"end": 11417,
									"name": "SWAP2"
								},
								{
									"begin": 11401,
									"end": 11417,
									"name": "MSTORE"
								},
								{
									"begin": 11401,
									"end": 11417,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 11401,
									"end": 11417,
									"name": "DUP1"
								},
								{
									"begin": 11401,
									"end": 11417,
									"name": "DUP3"
								},
								{
									"begin": 11401,
									"end": 11417,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "2AA9A22D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 11401,
									"end": 11417,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11401,
									"end": 11417,
									"name": "SWAP1"
								},
								{
									"begin": 11401,
									"end": 11417,
									"name": "SWAP3"
								},
								{
									"begin": 11401,
									"end": 11417,
									"name": "ADD"
								},
								{
									"begin": 11401,
									"end": 11417,
									"name": "SWAP2"
								},
								{
									"begin": 11401,
									"end": 11417,
									"name": "DUP3"
								},
								{
									"begin": 11401,
									"end": 11417,
									"name": "MSTORE"
								},
								{
									"begin": 11401,
									"end": 11417,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 11401,
									"end": 11417,
									"name": "SWAP2"
								},
								{
									"begin": 11401,
									"end": 11408,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 11401,
									"end": 11408,
									"name": "SWAP2"
								},
								{
									"begin": 11401,
									"end": 11417,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 11401,
									"end": 11417,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 11401,
									"end": 11417,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 11401,
									"end": 11417,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 11423,
									"end": 11432,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 11423,
									"end": 11437,
									"name": "DUP1"
								},
								{
									"begin": 11423,
									"end": 11437,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 11423,
									"end": 11437,
									"name": "AND"
								},
								{
									"begin": 11435,
									"end": 11437,
									"name": "PUSH",
									"value": "12"
								},
								{
									"begin": 11423,
									"end": 11437,
									"name": "OR"
								},
								{
									"begin": 11423,
									"end": 11437,
									"name": "SWAP1"
								},
								{
									"begin": 11423,
									"end": 11437,
									"name": "SSTORE"
								},
								{
									"begin": 11458,
									"end": 11475,
									"name": "PUSH",
									"value": "33B2E3C9FD0803CE8000000"
								},
								{
									"begin": 11443,
									"end": 11455,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 11443,
									"end": 11475,
									"name": "DUP2"
								},
								{
									"begin": 11443,
									"end": 11475,
									"name": "SWAP1"
								},
								{
									"begin": 11443,
									"end": 11475,
									"name": "SSTORE"
								},
								{
									"begin": 11491,
									"end": 11501,
									"name": "CALLER"
								},
								{
									"begin": 11423,
									"end": 11432,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11481,
									"end": 11502,
									"name": "DUP2"
								},
								{
									"begin": 11481,
									"end": 11502,
									"name": "DUP2"
								},
								{
									"begin": 11481,
									"end": 11502,
									"name": "MSTORE"
								},
								{
									"begin": 11423,
									"end": 11437,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11481,
									"end": 11502,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11481,
									"end": 11502,
									"name": "SWAP1"
								},
								{
									"begin": 11481,
									"end": 11502,
									"name": "DUP2"
								},
								{
									"begin": 11481,
									"end": 11502,
									"name": "MSTORE"
								},
								{
									"begin": 11481,
									"end": 11502,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11481,
									"end": 11502,
									"name": "DUP1"
								},
								{
									"begin": 11481,
									"end": 11502,
									"name": "DUP4"
								},
								{
									"begin": 11481,
									"end": 11502,
									"name": "KECCAK256"
								},
								{
									"begin": 11481,
									"end": 11517,
									"name": "DUP6"
								},
								{
									"begin": 11481,
									"end": 11517,
									"name": "SWAP1"
								},
								{
									"begin": 11481,
									"end": 11517,
									"name": "SSTORE"
								},
								{
									"begin": 11529,
									"end": 11575,
									"name": "DUP1"
								},
								{
									"begin": 11529,
									"end": 11575,
									"name": "MLOAD"
								},
								{
									"begin": 11529,
									"end": 11575,
									"name": "SWAP5"
								},
								{
									"begin": 11529,
									"end": 11575,
									"name": "DUP6"
								},
								{
									"begin": 11529,
									"end": 11575,
									"name": "MSTORE"
								},
								{
									"begin": 11529,
									"end": 11575,
									"name": "MLOAD"
								},
								{
									"begin": 11491,
									"end": 11501,
									"name": "SWAP3"
								},
								{
									"begin": 11491,
									"end": 11501,
									"name": "SWAP4"
								},
								{
									"begin": 11423,
									"end": 11432,
									"name": "SWAP2"
								},
								{
									"begin": 11423,
									"end": 11432,
									"name": "SWAP3"
								},
								{
									"begin": 11529,
									"end": 11575,
									"name": "PUSH",
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 11529,
									"end": 11575,
									"name": "SWAP3"
								},
								{
									"begin": 11529,
									"end": 11575,
									"name": "DUP2"
								},
								{
									"begin": 11529,
									"end": 11575,
									"name": "SWAP1"
								},
								{
									"begin": 11529,
									"end": 11575,
									"name": "SUB"
								},
								{
									"begin": 11529,
									"end": 11575,
									"name": "SWAP1"
								},
								{
									"begin": 11529,
									"end": 11575,
									"name": "SWAP2"
								},
								{
									"begin": 11529,
									"end": 11575,
									"name": "ADD"
								},
								{
									"begin": 11529,
									"end": 11575,
									"name": "SWAP1"
								},
								{
									"begin": 11529,
									"end": 11575,
									"name": "LOG3"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "JUMP"
								},
								{
									"begin": 3661,
									"end": 3751,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 3661,
									"end": 3751,
									"name": "JUMPDEST"
								},
								{
									"begin": 3736,
									"end": 3746,
									"name": "CALLER"
								},
								{
									"begin": 3661,
									"end": 3751,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 3661,
									"end": 3751,
									"name": "JUMPDEST"
								},
								{
									"begin": 3661,
									"end": 3751,
									"name": "SWAP1"
								},
								{
									"begin": 3661,
									"end": 3751,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "JUMPDEST"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "DUP3"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "DUP1"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "SLOAD"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "DUP2"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "AND"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "ISZERO"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "MUL"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "SUB"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "AND"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "SWAP1"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "DIV"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "SWAP1"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "MSTORE"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "KECCAK256"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "SWAP1"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "ADD"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "SWAP1"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "DIV"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "DUP2"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "ADD"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "SWAP3"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "DUP3"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "LT"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "JUMPI"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "DUP1"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "MLOAD"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "NOT"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "AND"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "DUP4"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "DUP1"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "ADD"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "OR"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "DUP6"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "SSTORE"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "JUMP"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "JUMPDEST"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "DUP3"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "DUP1"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "ADD"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "ADD"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "DUP6"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "SSTORE"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "DUP3"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "ISZERO"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "JUMPI"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "SWAP2"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "DUP3"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "ADD"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "tag",
									"value": "17"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "JUMPDEST"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "DUP3"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "DUP2"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "GT"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "ISZERO"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "JUMPI"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "DUP3"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "MLOAD"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "DUP3"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "SSTORE"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "SWAP2"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "ADD"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "SWAP2"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "SWAP1"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "ADD"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "SWAP1"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "JUMP"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "tag",
									"value": "18"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "SWAP3"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "SWAP2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "tag",
									"value": "19"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "JUMPDEST"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "POP"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "SWAP1"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "tag",
									"value": "20"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "JUMPDEST"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "SWAP2"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "SWAP1"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "tag",
									"value": "22"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "JUMPDEST"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "DUP1"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "DUP3"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "GT"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "ISZERO"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "JUMPI"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "DUP2"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "SSTORE"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "ADD"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "PUSH [tag]",
									"value": "22"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "JUMP"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "JUMPDEST"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "DUP1"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "CODECOPY"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11034,
									"end": 18777,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158208a0805e926067b33bbc59599d38d41694ebf521e292f9946f22765dacd1c0b9964736f6c63430005100032",
									".code": [
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "MSTORE"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "POP"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "LT"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "JUMPI"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "SHR"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "DUP1"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH",
											"value": "893D20E8"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "GT"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "JUMPI"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "DUP1"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "GT"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "JUMPI"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "DUP1"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "EQ"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "JUMPI"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "DUP1"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH",
											"value": "B09F1266"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "EQ"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "JUMPI"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "DUP1"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH",
											"value": "D28D8852"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "EQ"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "JUMPI"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "DUP1"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "EQ"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "JUMPI"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "DUP1"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "EQ"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "JUMPI"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "JUMP"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "JUMPDEST"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "DUP1"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH",
											"value": "893D20E8"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "EQ"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "JUMPI"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "DUP1"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "EQ"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "JUMPI"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "DUP1"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "EQ"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "JUMPI"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "DUP1"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH",
											"value": "A0712D68"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "EQ"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "JUMPI"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "DUP1"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "EQ"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "JUMPI"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "JUMP"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "JUMPDEST"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "DUP1"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH",
											"value": "32424AA3"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "GT"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "JUMPI"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "DUP1"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH",
											"value": "32424AA3"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "EQ"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "JUMPI"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "DUP1"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "EQ"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "JUMPI"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "DUP1"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH",
											"value": "42966C68"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "EQ"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "JUMPI"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "DUP1"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "EQ"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "JUMPI"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "DUP1"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "EQ"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "JUMPI"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "JUMP"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "JUMPDEST"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "DUP1"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "EQ"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "JUMPI"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "DUP1"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "EQ"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "JUMPI"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "DUP1"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "EQ"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "JUMPI"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "DUP1"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "EQ"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "JUMPI"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "DUP1"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "EQ"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "JUMPI"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "JUMPDEST"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "DUP1"
										},
										{
											"begin": 11034,
											"end": 18777,
											"name": "REVERT"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "JUMPDEST"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "JUMPDEST"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "DUP1"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "MLOAD"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "DUP1"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "DUP3"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "MSTORE"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "DUP4"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "MLOAD"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "DUP2"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "DUP4"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "ADD"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "MSTORE"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "DUP4"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "MLOAD"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "SWAP2"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "SWAP3"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "DUP4"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "SWAP3"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "SWAP1"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "DUP4"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "ADD"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "SWAP2"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "DUP6"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "ADD"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "SWAP1"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "DUP1"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "DUP4"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "DUP4"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "POP"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "POP"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "POP"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "SWAP1"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "POP"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "SWAP1"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "DUP2"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "ADD"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "SWAP1"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "AND"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "DUP1"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "ISZERO"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "JUMPI"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "DUP1"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "DUP3"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "SUB"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "DUP1"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "MLOAD"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "DUP4"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "SUB"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "EXP"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "SUB"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "NOT"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "AND"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "DUP2"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "MSTORE"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "ADD"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "SWAP2"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "POP"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "JUMPDEST"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "POP"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "SWAP3"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "POP"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "POP"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "POP"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "MLOAD"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "DUP1"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "SWAP2"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "SUB"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "SWAP1"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "RETURN"
										},
										{
											"begin": 13019,
											"end": 13160,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 13019,
											"end": 13160,
											"name": "JUMPDEST"
										},
										{
											"begin": 13019,
											"end": 13160,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 13019,
											"end": 13160,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13019,
											"end": 13160,
											"name": "DUP1"
										},
										{
											"begin": 13019,
											"end": 13160,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 13019,
											"end": 13160,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13019,
											"end": 13160,
											"name": "DUP2"
										},
										{
											"begin": 13019,
											"end": 13160,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13019,
											"end": 13160,
											"name": "AND"
										},
										{
											"begin": 13019,
											"end": 13160,
											"name": "SWAP1"
										},
										{
											"begin": 13019,
											"end": 13160,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13019,
											"end": 13160,
											"name": "ADD"
										},
										{
											"begin": 13019,
											"end": 13160,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13019,
											"end": 13160,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 13019,
											"end": 13160,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13019,
											"end": 13160,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 13019,
											"end": 13160,
											"name": "JUMPDEST"
										},
										{
											"begin": 13019,
											"end": 13160,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13019,
											"end": 13160,
											"name": "DUP1"
										},
										{
											"begin": 13019,
											"end": 13160,
											"name": "MLOAD"
										},
										{
											"begin": 13019,
											"end": 13160,
											"name": "SWAP2"
										},
										{
											"begin": 13019,
											"end": 13160,
											"name": "ISZERO"
										},
										{
											"begin": 13019,
											"end": 13160,
											"name": "ISZERO"
										},
										{
											"begin": 13019,
											"end": 13160,
											"name": "DUP3"
										},
										{
											"begin": 13019,
											"end": 13160,
											"name": "MSTORE"
										},
										{
											"begin": 13019,
											"end": 13160,
											"name": "MLOAD"
										},
										{
											"begin": 13019,
											"end": 13160,
											"name": "SWAP1"
										},
										{
											"begin": 13019,
											"end": 13160,
											"name": "DUP2"
										},
										{
											"begin": 13019,
											"end": 13160,
											"name": "SWAP1"
										},
										{
											"begin": 13019,
											"end": 13160,
											"name": "SUB"
										},
										{
											"begin": 13019,
											"end": 13160,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13019,
											"end": 13160,
											"name": "ADD"
										},
										{
											"begin": 13019,
											"end": 13160,
											"name": "SWAP1"
										},
										{
											"begin": 13019,
											"end": 13160,
											"name": "RETURN"
										},
										{
											"begin": 12152,
											"end": 12237,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 12152,
											"end": 12237,
											"name": "JUMPDEST"
										},
										{
											"begin": 12152,
											"end": 12237,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 12152,
											"end": 12237,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 12152,
											"end": 12237,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12152,
											"end": 12237,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 12152,
											"end": 12237,
											"name": "JUMPDEST"
										},
										{
											"begin": 12152,
											"end": 12237,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12152,
											"end": 12237,
											"name": "DUP1"
										},
										{
											"begin": 12152,
											"end": 12237,
											"name": "MLOAD"
										},
										{
											"begin": 12152,
											"end": 12237,
											"name": "SWAP2"
										},
										{
											"begin": 12152,
											"end": 12237,
											"name": "DUP3"
										},
										{
											"begin": 12152,
											"end": 12237,
											"name": "MSTORE"
										},
										{
											"begin": 12152,
											"end": 12237,
											"name": "MLOAD"
										},
										{
											"begin": 12152,
											"end": 12237,
											"name": "SWAP1"
										},
										{
											"begin": 12152,
											"end": 12237,
											"name": "DUP2"
										},
										{
											"begin": 12152,
											"end": 12237,
											"name": "SWAP1"
										},
										{
											"begin": 12152,
											"end": 12237,
											"name": "SUB"
										},
										{
											"begin": 12152,
											"end": 12237,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12152,
											"end": 12237,
											"name": "ADD"
										},
										{
											"begin": 12152,
											"end": 12237,
											"name": "SWAP1"
										},
										{
											"begin": 12152,
											"end": 12237,
											"name": "RETURN"
										},
										{
											"begin": 13591,
											"end": 13879,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 13591,
											"end": 13879,
											"name": "JUMPDEST"
										},
										{
											"begin": 13591,
											"end": 13879,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 13591,
											"end": 13879,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13591,
											"end": 13879,
											"name": "DUP1"
										},
										{
											"begin": 13591,
											"end": 13879,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 13591,
											"end": 13879,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13591,
											"end": 13879,
											"name": "DUP2"
										},
										{
											"begin": 13591,
											"end": 13879,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13591,
											"end": 13879,
											"name": "DUP2"
										},
										{
											"begin": 13591,
											"end": 13879,
											"name": "AND"
										},
										{
											"begin": 13591,
											"end": 13879,
											"name": "SWAP2"
										},
										{
											"begin": 13591,
											"end": 13879,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13591,
											"end": 13879,
											"name": "DUP2"
										},
										{
											"begin": 13591,
											"end": 13879,
											"name": "ADD"
										},
										{
											"begin": 13591,
											"end": 13879,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13591,
											"end": 13879,
											"name": "SWAP1"
										},
										{
											"begin": 13591,
											"end": 13879,
											"name": "SWAP2"
										},
										{
											"begin": 13591,
											"end": 13879,
											"name": "AND"
										},
										{
											"begin": 13591,
											"end": 13879,
											"name": "SWAP1"
										},
										{
											"begin": 13591,
											"end": 13879,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13591,
											"end": 13879,
											"name": "ADD"
										},
										{
											"begin": 13591,
											"end": 13879,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13591,
											"end": 13879,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 13591,
											"end": 13879,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11766,
											"end": 11843,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 11766,
											"end": 11843,
											"name": "JUMPDEST"
										},
										{
											"begin": 11766,
											"end": 11843,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 11766,
											"end": 11843,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 11766,
											"end": 11843,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11766,
											"end": 11843,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 11766,
											"end": 11843,
											"name": "JUMPDEST"
										},
										{
											"begin": 11766,
											"end": 11843,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11766,
											"end": 11843,
											"name": "DUP1"
										},
										{
											"begin": 11766,
											"end": 11843,
											"name": "MLOAD"
										},
										{
											"begin": 11766,
											"end": 11843,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11766,
											"end": 11843,
											"name": "SWAP1"
										},
										{
											"begin": 11766,
											"end": 11843,
											"name": "SWAP3"
										},
										{
											"begin": 11766,
											"end": 11843,
											"name": "AND"
										},
										{
											"begin": 11766,
											"end": 11843,
											"name": "DUP3"
										},
										{
											"begin": 11766,
											"end": 11843,
											"name": "MSTORE"
										},
										{
											"begin": 11766,
											"end": 11843,
											"name": "MLOAD"
										},
										{
											"begin": 11766,
											"end": 11843,
											"name": "SWAP1"
										},
										{
											"begin": 11766,
											"end": 11843,
											"name": "DUP2"
										},
										{
											"begin": 11766,
											"end": 11843,
											"name": "SWAP1"
										},
										{
											"begin": 11766,
											"end": 11843,
											"name": "SUB"
										},
										{
											"begin": 11766,
											"end": 11843,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11766,
											"end": 11843,
											"name": "ADD"
										},
										{
											"begin": 11766,
											"end": 11843,
											"name": "SWAP1"
										},
										{
											"begin": 11766,
											"end": 11843,
											"name": "RETURN"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "JUMPDEST"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14247,
											"end": 14444,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 14247,
											"end": 14444,
											"name": "JUMPDEST"
										},
										{
											"begin": 14247,
											"end": 14444,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 14247,
											"end": 14444,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14247,
											"end": 14444,
											"name": "DUP1"
										},
										{
											"begin": 14247,
											"end": 14444,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14247,
											"end": 14444,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14247,
											"end": 14444,
											"name": "DUP2"
										},
										{
											"begin": 14247,
											"end": 14444,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14247,
											"end": 14444,
											"name": "AND"
										},
										{
											"begin": 14247,
											"end": 14444,
											"name": "SWAP1"
										},
										{
											"begin": 14247,
											"end": 14444,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14247,
											"end": 14444,
											"name": "ADD"
										},
										{
											"begin": 14247,
											"end": 14444,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14247,
											"end": 14444,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 14247,
											"end": 14444,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15535,
											"end": 15642,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 15535,
											"end": 15642,
											"name": "JUMPDEST"
										},
										{
											"begin": 15535,
											"end": 15642,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 15535,
											"end": 15642,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15535,
											"end": 15642,
											"name": "DUP1"
										},
										{
											"begin": 15535,
											"end": 15642,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 15535,
											"end": 15642,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 15535,
											"end": 15642,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15535,
											"end": 15642,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 15535,
											"end": 15642,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12286,
											"end": 12390,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 12286,
											"end": 12390,
											"name": "JUMPDEST"
										},
										{
											"begin": 12286,
											"end": 12390,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 12286,
											"end": 12390,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12286,
											"end": 12390,
											"name": "DUP1"
										},
										{
											"begin": 12286,
											"end": 12390,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12286,
											"end": 12390,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 12286,
											"end": 12390,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12286,
											"end": 12390,
											"name": "AND"
										},
										{
											"begin": 12286,
											"end": 12390,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 12286,
											"end": 12390,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10359,
											"end": 10486,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 10359,
											"end": 10486,
											"name": "JUMPDEST"
										},
										{
											"begin": 10359,
											"end": 10486,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 10359,
											"end": 10486,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 10359,
											"end": 10486,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10359,
											"end": 10486,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 10359,
											"end": 10486,
											"name": "JUMPDEST"
										},
										{
											"begin": 10359,
											"end": 10486,
											"name": "STOP"
										},
										{
											"begin": 11635,
											"end": 11712,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 11635,
											"end": 11712,
											"name": "JUMPDEST"
										},
										{
											"begin": 11635,
											"end": 11712,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 11635,
											"end": 11712,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 11635,
											"end": 11712,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11635,
											"end": 11712,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 11635,
											"end": 11712,
											"name": "JUMPDEST"
										},
										{
											"begin": 11635,
											"end": 11712,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11635,
											"end": 11712,
											"name": "DUP1"
										},
										{
											"begin": 11635,
											"end": 11712,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11635,
											"end": 11712,
											"name": "SWAP1"
										},
										{
											"begin": 11635,
											"end": 11712,
											"name": "SWAP3"
										},
										{
											"begin": 11635,
											"end": 11712,
											"name": "AND"
										},
										{
											"begin": 11635,
											"end": 11712,
											"name": "DUP3"
										},
										{
											"begin": 11635,
											"end": 11712,
											"name": "MSTORE"
										},
										{
											"begin": 11635,
											"end": 11712,
											"name": "MLOAD"
										},
										{
											"begin": 11635,
											"end": 11712,
											"name": "SWAP1"
										},
										{
											"begin": 11635,
											"end": 11712,
											"name": "DUP2"
										},
										{
											"begin": 11635,
											"end": 11712,
											"name": "SWAP1"
										},
										{
											"begin": 11635,
											"end": 11712,
											"name": "SUB"
										},
										{
											"begin": 11635,
											"end": 11712,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11635,
											"end": 11712,
											"name": "ADD"
										},
										{
											"begin": 11635,
											"end": 11712,
											"name": "SWAP1"
										},
										{
											"begin": 11635,
											"end": 11712,
											"name": "RETURN"
										},
										{
											"begin": 9776,
											"end": 9847,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 9776,
											"end": 9847,
											"name": "JUMPDEST"
										},
										{
											"begin": 9776,
											"end": 9847,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 9776,
											"end": 9847,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 9776,
											"end": 9847,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11895,
											"end": 11976,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 11895,
											"end": 11976,
											"name": "JUMPDEST"
										},
										{
											"begin": 11895,
											"end": 11976,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 11895,
											"end": 11976,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 11895,
											"end": 11976,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15338,
											"end": 15455,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 15338,
											"end": 15455,
											"name": "JUMPDEST"
										},
										{
											"begin": 15338,
											"end": 15455,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 15338,
											"end": 15455,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15338,
											"end": 15455,
											"name": "DUP1"
										},
										{
											"begin": 15338,
											"end": 15455,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 15338,
											"end": 15455,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 15338,
											"end": 15455,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15338,
											"end": 15455,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 15338,
											"end": 15455,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14900,
											"end": 15148,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 14900,
											"end": 15148,
											"name": "JUMPDEST"
										},
										{
											"begin": 14900,
											"end": 15148,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 14900,
											"end": 15148,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14900,
											"end": 15148,
											"name": "DUP1"
										},
										{
											"begin": 14900,
											"end": 15148,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14900,
											"end": 15148,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14900,
											"end": 15148,
											"name": "DUP2"
										},
										{
											"begin": 14900,
											"end": 15148,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14900,
											"end": 15148,
											"name": "AND"
										},
										{
											"begin": 14900,
											"end": 15148,
											"name": "SWAP1"
										},
										{
											"begin": 14900,
											"end": 15148,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14900,
											"end": 15148,
											"name": "ADD"
										},
										{
											"begin": 14900,
											"end": 15148,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14900,
											"end": 15148,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 14900,
											"end": 15148,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12574,
											"end": 12721,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 12574,
											"end": 12721,
											"name": "JUMPDEST"
										},
										{
											"begin": 12574,
											"end": 12721,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 12574,
											"end": 12721,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12574,
											"end": 12721,
											"name": "DUP1"
										},
										{
											"begin": 12574,
											"end": 12721,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12574,
											"end": 12721,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12574,
											"end": 12721,
											"name": "DUP2"
										},
										{
											"begin": 12574,
											"end": 12721,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12574,
											"end": 12721,
											"name": "AND"
										},
										{
											"begin": 12574,
											"end": 12721,
											"name": "SWAP1"
										},
										{
											"begin": 12574,
											"end": 12721,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12574,
											"end": 12721,
											"name": "ADD"
										},
										{
											"begin": 12574,
											"end": 12721,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12574,
											"end": 12721,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 12574,
											"end": 12721,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "JUMPDEST"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "JUMPDEST"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12770,
											"end": 12898,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 12770,
											"end": 12898,
											"name": "JUMPDEST"
										},
										{
											"begin": 12770,
											"end": 12898,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 12770,
											"end": 12898,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12770,
											"end": 12898,
											"name": "DUP1"
										},
										{
											"begin": 12770,
											"end": 12898,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12770,
											"end": 12898,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12770,
											"end": 12898,
											"name": "DUP2"
										},
										{
											"begin": 12770,
											"end": 12898,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12770,
											"end": 12898,
											"name": "DUP2"
										},
										{
											"begin": 12770,
											"end": 12898,
											"name": "AND"
										},
										{
											"begin": 12770,
											"end": 12898,
											"name": "SWAP2"
										},
										{
											"begin": 12770,
											"end": 12898,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12770,
											"end": 12898,
											"name": "ADD"
										},
										{
											"begin": 12770,
											"end": 12898,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12770,
											"end": 12898,
											"name": "AND"
										},
										{
											"begin": 12770,
											"end": 12898,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 12770,
											"end": 12898,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10625,
											"end": 10726,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 10625,
											"end": 10726,
											"name": "JUMPDEST"
										},
										{
											"begin": 10625,
											"end": 10726,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 10625,
											"end": 10726,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10625,
											"end": 10726,
											"name": "DUP1"
										},
										{
											"begin": 10625,
											"end": 10726,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 10625,
											"end": 10726,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 10625,
											"end": 10726,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10625,
											"end": 10726,
											"name": "AND"
										},
										{
											"begin": 10625,
											"end": 10726,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 10625,
											"end": 10726,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "JUMPDEST"
										},
										{
											"begin": 12091,
											"end": 12096,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "DUP1"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "SLOAD"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "DUP1"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "MLOAD"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "DUP9"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "AND"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "ISZERO"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "MUL"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "ADD"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "SWAP1"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "SWAP6"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "AND"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "SWAP5"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "SWAP1"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "SWAP5"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "DIV"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "SWAP4"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "DUP5"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "ADD"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "DUP2"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "SWAP1"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "DIV"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "DUP2"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "MUL"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "DUP3"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "ADD"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "DUP2"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "ADD"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "SWAP1"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "SWAP3"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "MSTORE"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "DUP3"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "DUP2"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "MSTORE"
										},
										{
											"begin": 12063,
											"end": 12076,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 12063,
											"end": 12076,
											"name": "SWAP4"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "SWAP1"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "SWAP3"
										},
										{
											"begin": 12091,
											"end": 12096,
											"name": "SWAP1"
										},
										{
											"begin": 12091,
											"end": 12096,
											"name": "SWAP2"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "DUP4"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "ADD"
										},
										{
											"begin": 12091,
											"end": 12096,
											"name": "DUP3"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "DUP3"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "DUP1"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "ISZERO"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "JUMPI"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "DUP1"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "LT"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "JUMPI"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "DUP1"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "DUP4"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "SLOAD"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "DIV"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "MUL"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "DUP4"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "MSTORE"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "SWAP2"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "ADD"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "SWAP2"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "JUMP"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "JUMPDEST"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "DUP3"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "ADD"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "SWAP2"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "SWAP1"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "MSTORE"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "KECCAK256"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "SWAP1"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "JUMPDEST"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "DUP2"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "SLOAD"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "DUP2"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "MSTORE"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "SWAP1"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "ADD"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "SWAP1"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "ADD"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "DUP1"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "DUP4"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "GT"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "JUMPI"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "DUP3"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "SWAP1"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "SUB"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "AND"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "DUP3"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "ADD"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "SWAP2"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "JUMPDEST"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "POP"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "POP"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "POP"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "POP"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "POP"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "SWAP1"
										},
										{
											"begin": 12084,
											"end": 12096,
											"name": "POP"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "SWAP1"
										},
										{
											"begin": 12024,
											"end": 12101,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13019,
											"end": 13160,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 13019,
											"end": 13160,
											"name": "JUMPDEST"
										},
										{
											"begin": 13087,
											"end": 13091,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13099,
											"end": 13138,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 13108,
											"end": 13120,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 13108,
											"end": 13118,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 13108,
											"end": 13120,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13108,
											"end": 13120,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 13108,
											"end": 13120,
											"name": "JUMPDEST"
										},
										{
											"begin": 13122,
											"end": 13129,
											"name": "DUP5"
										},
										{
											"begin": 13131,
											"end": 13137,
											"name": "DUP5"
										},
										{
											"begin": 13099,
											"end": 13107,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 13099,
											"end": 13138,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13099,
											"end": 13138,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 13099,
											"end": 13138,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 13151,
											"end": 13155,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13019,
											"end": 13160,
											"name": "SWAP3"
										},
										{
											"begin": 13019,
											"end": 13160,
											"name": "SWAP2"
										},
										{
											"begin": 13019,
											"end": 13160,
											"name": "POP"
										},
										{
											"begin": 13019,
											"end": 13160,
											"name": "POP"
										},
										{
											"begin": 13019,
											"end": 13160,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12152,
											"end": 12237,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 12152,
											"end": 12237,
											"name": "JUMPDEST"
										},
										{
											"begin": 12220,
											"end": 12232,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 12220,
											"end": 12232,
											"name": "SLOAD"
										},
										{
											"begin": 12152,
											"end": 12237,
											"name": "SWAP1"
										},
										{
											"begin": 12152,
											"end": 12237,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13591,
											"end": 13879,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 13591,
											"end": 13879,
											"name": "JUMPDEST"
										},
										{
											"begin": 13682,
											"end": 13686,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13694,
											"end": 13730,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 13704,
											"end": 13710,
											"name": "DUP5"
										},
										{
											"begin": 13712,
											"end": 13721,
											"name": "DUP5"
										},
										{
											"begin": 13723,
											"end": 13729,
											"name": "DUP5"
										},
										{
											"begin": 13694,
											"end": 13703,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 13694,
											"end": 13730,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13694,
											"end": 13730,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 13694,
											"end": 13730,
											"name": "JUMPDEST"
										},
										{
											"begin": 13736,
											"end": 13857,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 13745,
											"end": 13751,
											"name": "DUP5"
										},
										{
											"begin": 13753,
											"end": 13765,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 13753,
											"end": 13763,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 13753,
											"end": 13765,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13753,
											"end": 13765,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 13753,
											"end": 13765,
											"name": "JUMPDEST"
										},
										{
											"begin": 13767,
											"end": 13856,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 13805,
											"end": 13811,
											"name": "DUP6"
										},
										{
											"begin": 13767,
											"end": 13856,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13767,
											"end": 13856,
											"name": "MLOAD"
										},
										{
											"begin": 13767,
											"end": 13856,
											"name": "DUP1"
										},
										{
											"begin": 13767,
											"end": 13856,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 13767,
											"end": 13856,
											"name": "ADD"
										},
										{
											"begin": 13767,
											"end": 13856,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13767,
											"end": 13856,
											"name": "MSTORE"
										},
										{
											"begin": 13767,
											"end": 13856,
											"name": "DUP1"
										},
										{
											"begin": 13767,
											"end": 13856,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 13767,
											"end": 13856,
											"name": "DUP2"
										},
										{
											"begin": 13767,
											"end": 13856,
											"name": "MSTORE"
										},
										{
											"begin": 13767,
											"end": 13856,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13767,
											"end": 13856,
											"name": "ADD"
										},
										{
											"begin": 13767,
											"end": 13856,
											"name": "PUSH data",
											"value": "4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E"
										},
										{
											"begin": 13767,
											"end": 13856,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 13767,
											"end": 13856,
											"name": "SWAP2"
										},
										{
											"begin": 13767,
											"end": 13856,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13767,
											"end": 13786,
											"name": "DUP11"
										},
										{
											"begin": 13767,
											"end": 13786,
											"name": "AND"
										},
										{
											"begin": 13767,
											"end": 13786,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13767,
											"end": 13786,
											"name": "SWAP1"
										},
										{
											"begin": 13767,
											"end": 13786,
											"name": "DUP2"
										},
										{
											"begin": 13767,
											"end": 13786,
											"name": "MSTORE"
										},
										{
											"begin": 13767,
											"end": 13778,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 13767,
											"end": 13786,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13767,
											"end": 13786,
											"name": "MSTORE"
										},
										{
											"begin": 13767,
											"end": 13786,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13767,
											"end": 13786,
											"name": "DUP2"
										},
										{
											"begin": 13767,
											"end": 13786,
											"name": "KECCAK256"
										},
										{
											"begin": 13767,
											"end": 13786,
											"name": "SWAP1"
										},
										{
											"begin": 13787,
											"end": 13799,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 13787,
											"end": 13797,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 13787,
											"end": 13799,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13787,
											"end": 13799,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 13787,
											"end": 13799,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13767,
											"end": 13800,
											"name": "AND"
										},
										{
											"begin": 13767,
											"end": 13800,
											"name": "DUP2"
										},
										{
											"begin": 13767,
											"end": 13800,
											"name": "MSTORE"
										},
										{
											"begin": 13767,
											"end": 13800,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13767,
											"end": 13800,
											"name": "DUP2"
										},
										{
											"begin": 13767,
											"end": 13800,
											"name": "ADD"
										},
										{
											"begin": 13767,
											"end": 13800,
											"name": "SWAP2"
										},
										{
											"begin": 13767,
											"end": 13800,
											"name": "SWAP1"
										},
										{
											"begin": 13767,
											"end": 13800,
											"name": "SWAP2"
										},
										{
											"begin": 13767,
											"end": 13800,
											"name": "MSTORE"
										},
										{
											"begin": 13767,
											"end": 13800,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13767,
											"end": 13800,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13767,
											"end": 13800,
											"name": "KECCAK256"
										},
										{
											"begin": 13767,
											"end": 13800,
											"name": "SLOAD"
										},
										{
											"begin": 13767,
											"end": 13800,
											"name": "SWAP2"
										},
										{
											"begin": 13767,
											"end": 13856,
											"name": "SWAP1"
										},
										{
											"begin": 13767,
											"end": 13856,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 13767,
											"end": 13804,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 13767,
											"end": 13856,
											"name": "AND"
										},
										{
											"begin": 13767,
											"end": 13856,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13767,
											"end": 13856,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 13767,
											"end": 13856,
											"name": "JUMPDEST"
										},
										{
											"begin": 13736,
											"end": 13744,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 13736,
											"end": 13857,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13736,
											"end": 13857,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 13736,
											"end": 13857,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 13870,
											"end": 13874,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13591,
											"end": 13879,
											"name": "SWAP4"
										},
										{
											"begin": 13591,
											"end": 13879,
											"name": "SWAP3"
										},
										{
											"begin": 13591,
											"end": 13879,
											"name": "POP"
										},
										{
											"begin": 13591,
											"end": 13879,
											"name": "POP"
										},
										{
											"begin": 13591,
											"end": 13879,
											"name": "POP"
										},
										{
											"begin": 13591,
											"end": 13879,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11766,
											"end": 11843,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 11766,
											"end": 11843,
											"name": "JUMPDEST"
										},
										{
											"begin": 11829,
											"end": 11838,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11829,
											"end": 11838,
											"name": "SLOAD"
										},
										{
											"begin": 11829,
											"end": 11838,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11829,
											"end": 11838,
											"name": "AND"
										},
										{
											"begin": 11766,
											"end": 11843,
											"name": "SWAP1"
										},
										{
											"begin": 11766,
											"end": 11843,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "JUMPDEST"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "SLOAD"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "AND"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "DUP2"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14247,
											"end": 14444,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 14247,
											"end": 14444,
											"name": "JUMPDEST"
										},
										{
											"begin": 14327,
											"end": 14331,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14339,
											"end": 14422,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 14348,
											"end": 14360,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 14348,
											"end": 14358,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 14348,
											"end": 14360,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14348,
											"end": 14360,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 14348,
											"end": 14360,
											"name": "JUMPDEST"
										},
										{
											"begin": 14362,
											"end": 14369,
											"name": "DUP5"
										},
										{
											"begin": 14371,
											"end": 14421,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 14410,
											"end": 14420,
											"name": "DUP6"
										},
										{
											"begin": 14371,
											"end": 14382,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 14371,
											"end": 14396,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14383,
											"end": 14395,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 14383,
											"end": 14393,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 14383,
											"end": 14395,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14383,
											"end": 14395,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 14383,
											"end": 14395,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14371,
											"end": 14396,
											"name": "SWAP1"
										},
										{
											"begin": 14371,
											"end": 14396,
											"name": "DUP2"
										},
										{
											"begin": 14371,
											"end": 14396,
											"name": "AND"
										},
										{
											"begin": 14371,
											"end": 14396,
											"name": "DUP3"
										},
										{
											"begin": 14371,
											"end": 14396,
											"name": "MSTORE"
										},
										{
											"begin": 14371,
											"end": 14396,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14371,
											"end": 14396,
											"name": "DUP1"
										},
										{
											"begin": 14371,
											"end": 14396,
											"name": "DUP4"
										},
										{
											"begin": 14371,
											"end": 14396,
											"name": "ADD"
										},
										{
											"begin": 14371,
											"end": 14396,
											"name": "SWAP4"
										},
										{
											"begin": 14371,
											"end": 14396,
											"name": "SWAP1"
										},
										{
											"begin": 14371,
											"end": 14396,
											"name": "SWAP4"
										},
										{
											"begin": 14371,
											"end": 14396,
											"name": "MSTORE"
										},
										{
											"begin": 14371,
											"end": 14396,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14371,
											"end": 14396,
											"name": "SWAP2"
										},
										{
											"begin": 14371,
											"end": 14396,
											"name": "DUP3"
										},
										{
											"begin": 14371,
											"end": 14396,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14371,
											"end": 14396,
											"name": "SWAP1"
										},
										{
											"begin": 14371,
											"end": 14396,
											"name": "DUP2"
										},
										{
											"begin": 14371,
											"end": 14396,
											"name": "KECCAK256"
										},
										{
											"begin": 14371,
											"end": 14405,
											"name": "SWAP2"
										},
										{
											"begin": 14371,
											"end": 14405,
											"name": "DUP13"
										},
										{
											"begin": 14371,
											"end": 14405,
											"name": "AND"
										},
										{
											"begin": 14371,
											"end": 14405,
											"name": "DUP2"
										},
										{
											"begin": 14371,
											"end": 14405,
											"name": "MSTORE"
										},
										{
											"begin": 14371,
											"end": 14405,
											"name": "SWAP3"
										},
										{
											"begin": 14371,
											"end": 14405,
											"name": "MSTORE"
										},
										{
											"begin": 14371,
											"end": 14405,
											"name": "SWAP1"
										},
										{
											"begin": 14371,
											"end": 14405,
											"name": "KECCAK256"
										},
										{
											"begin": 14371,
											"end": 14405,
											"name": "SLOAD"
										},
										{
											"begin": 14371,
											"end": 14405,
											"name": "SWAP1"
										},
										{
											"begin": 14371,
											"end": 14421,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14371,
											"end": 14409,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 14371,
											"end": 14421,
											"name": "AND"
										},
										{
											"begin": 14371,
											"end": 14421,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15535,
											"end": 15642,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 15535,
											"end": 15642,
											"name": "JUMPDEST"
										},
										{
											"begin": 15581,
											"end": 15585,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15593,
											"end": 15620,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 15599,
											"end": 15611,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 15599,
											"end": 15609,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 15599,
											"end": 15611,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15599,
											"end": 15611,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 15599,
											"end": 15611,
											"name": "JUMPDEST"
										},
										{
											"begin": 15613,
											"end": 15619,
											"name": "DUP4"
										},
										{
											"begin": 15593,
											"end": 15598,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 15593,
											"end": 15620,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15593,
											"end": 15620,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 15593,
											"end": 15620,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 15633,
											"end": 15637,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15535,
											"end": 15642,
											"name": "SWAP2"
										},
										{
											"begin": 15535,
											"end": 15642,
											"name": "SWAP1"
										},
										{
											"begin": 15535,
											"end": 15642,
											"name": "POP"
										},
										{
											"begin": 15535,
											"end": 15642,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12286,
											"end": 12390,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 12286,
											"end": 12390,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12367,
											"end": 12385,
											"name": "AND"
										},
										{
											"begin": 12345,
											"end": 12352,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12367,
											"end": 12385,
											"name": "SWAP1"
										},
										{
											"begin": 12367,
											"end": 12385,
											"name": "DUP2"
										},
										{
											"begin": 12367,
											"end": 12385,
											"name": "MSTORE"
										},
										{
											"begin": 12367,
											"end": 12376,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12367,
											"end": 12385,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12367,
											"end": 12385,
											"name": "MSTORE"
										},
										{
											"begin": 12367,
											"end": 12385,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12367,
											"end": 12385,
											"name": "SWAP1"
										},
										{
											"begin": 12367,
											"end": 12385,
											"name": "KECCAK256"
										},
										{
											"begin": 12367,
											"end": 12385,
											"name": "SLOAD"
										},
										{
											"begin": 12367,
											"end": 12385,
											"name": "SWAP1"
										},
										{
											"begin": 12286,
											"end": 12390,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10359,
											"end": 10486,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 10359,
											"end": 10486,
											"name": "JUMPDEST"
										},
										{
											"begin": 9972,
											"end": 9984,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 9972,
											"end": 9982,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 9972,
											"end": 9984,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9972,
											"end": 9984,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 9972,
											"end": 9984,
											"name": "JUMPDEST"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "SWAP1"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "DUP2"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "AND"
										},
										{
											"begin": 9962,
											"end": 9984,
											"name": "SWAP2"
										},
										{
											"begin": 9962,
											"end": 9984,
											"name": "AND"
										},
										{
											"begin": 9962,
											"end": 9984,
											"name": "EQ"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "JUMPI"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "DUP1"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "DUP2"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "MSTORE"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "DUP3"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "ADD"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "DUP2"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "SWAP1"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "MSTORE"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "DUP3"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "ADD"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "MSTORE"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "DUP3"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "ADD"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "MSTORE"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "SWAP1"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "MLOAD"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "SWAP1"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "DUP2"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "SWAP1"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "SUB"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "ADD"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "SWAP1"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "REVERT"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "JUMPDEST"
										},
										{
											"begin": 10453,
											"end": 10454,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10437,
											"end": 10443,
											"name": "DUP1"
										},
										{
											"begin": 10437,
											"end": 10443,
											"name": "SLOAD"
										},
										{
											"begin": 10416,
											"end": 10456,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10416,
											"end": 10456,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10437,
											"end": 10443,
											"name": "SWAP1"
										},
										{
											"begin": 10437,
											"end": 10443,
											"name": "SWAP2"
										},
										{
											"begin": 10437,
											"end": 10443,
											"name": "AND"
										},
										{
											"begin": 10437,
											"end": 10443,
											"name": "SWAP1"
										},
										{
											"begin": 10416,
											"end": 10456,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 10416,
											"end": 10456,
											"name": "SWAP1"
										},
										{
											"begin": 10453,
											"end": 10454,
											"name": "DUP4"
										},
										{
											"begin": 10453,
											"end": 10454,
											"name": "SWAP1"
										},
										{
											"begin": 10416,
											"end": 10456,
											"name": "LOG3"
										},
										{
											"begin": 10479,
											"end": 10480,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10462,
											"end": 10481,
											"name": "DUP1"
										},
										{
											"begin": 10462,
											"end": 10481,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 10462,
											"end": 10481,
											"name": "AND"
										},
										{
											"begin": 10462,
											"end": 10481,
											"name": "SWAP1"
										},
										{
											"begin": 10462,
											"end": 10481,
											"name": "SSTORE"
										},
										{
											"begin": 10359,
											"end": 10486,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11635,
											"end": 11712,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 11635,
											"end": 11712,
											"name": "JUMPDEST"
										},
										{
											"begin": 11678,
											"end": 11685,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11700,
											"end": 11707,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 11700,
											"end": 11705,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 11700,
											"end": 11707,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11700,
											"end": 11707,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 11700,
											"end": 11707,
											"name": "JUMPDEST"
										},
										{
											"begin": 11693,
											"end": 11707,
											"name": "SWAP1"
										},
										{
											"begin": 11693,
											"end": 11707,
											"name": "POP"
										},
										{
											"begin": 11635,
											"end": 11712,
											"name": "SWAP1"
										},
										{
											"begin": 11635,
											"end": 11712,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9776,
											"end": 9847,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 9776,
											"end": 9847,
											"name": "JUMPDEST"
										},
										{
											"begin": 9814,
											"end": 9821,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9842,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9836,
											"end": 9842,
											"name": "AND"
										},
										{
											"begin": 9776,
											"end": 9847,
											"name": "SWAP1"
										},
										{
											"begin": 9776,
											"end": 9847,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11895,
											"end": 11976,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 11895,
											"end": 11976,
											"name": "JUMPDEST"
										},
										{
											"begin": 11964,
											"end": 11971,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "DUP1"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "SLOAD"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "DUP1"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "MLOAD"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "DUP9"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "AND"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "ISZERO"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "MUL"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "ADD"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "SWAP1"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "SWAP6"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "AND"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "SWAP5"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "SWAP1"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "SWAP5"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "DIV"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "SWAP4"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "DUP5"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "ADD"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "DUP2"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "SWAP1"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "DIV"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "DUP2"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "MUL"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "DUP3"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "ADD"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "DUP2"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "ADD"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "SWAP1"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "SWAP3"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "MSTORE"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "DUP3"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "DUP2"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "MSTORE"
										},
										{
											"begin": 11936,
											"end": 11949,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 11936,
											"end": 11949,
											"name": "SWAP4"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "SWAP1"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "SWAP3"
										},
										{
											"begin": 11964,
											"end": 11971,
											"name": "SWAP1"
										},
										{
											"begin": 11964,
											"end": 11971,
											"name": "SWAP2"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "DUP4"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "ADD"
										},
										{
											"begin": 11964,
											"end": 11971,
											"name": "DUP3"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "DUP3"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "DUP1"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "ISZERO"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "JUMPI"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "DUP1"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "LT"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "JUMPI"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "DUP1"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "DUP4"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "SLOAD"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "DIV"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "MUL"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "DUP4"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "MSTORE"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "SWAP2"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "ADD"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "SWAP2"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 11957,
											"end": 11971,
											"name": "JUMP"
										},
										{
											"begin": 15338,
											"end": 15455,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 15338,
											"end": 15455,
											"name": "JUMPDEST"
										},
										{
											"begin": 15394,
											"end": 15398,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9972,
											"end": 9984,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 9972,
											"end": 9982,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 9972,
											"end": 9984,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9972,
											"end": 9984,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 9972,
											"end": 9984,
											"name": "JUMPDEST"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "SWAP1"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "DUP2"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "AND"
										},
										{
											"begin": 9962,
											"end": 9984,
											"name": "SWAP2"
										},
										{
											"begin": 9962,
											"end": 9984,
											"name": "AND"
										},
										{
											"begin": 9962,
											"end": 9984,
											"name": "EQ"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "JUMPI"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "DUP1"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "DUP2"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "MSTORE"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "DUP3"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "ADD"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "DUP2"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "SWAP1"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "MSTORE"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "DUP3"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "ADD"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "MSTORE"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "DUP3"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "ADD"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "MSTORE"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "SWAP1"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "MLOAD"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "SWAP1"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "DUP2"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "SWAP1"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "SUB"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "ADD"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "SWAP1"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "REVERT"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "JUMPDEST"
										},
										{
											"begin": 15406,
											"end": 15433,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 15412,
											"end": 15424,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 15412,
											"end": 15422,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 15412,
											"end": 15424,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15412,
											"end": 15424,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 15412,
											"end": 15424,
											"name": "JUMPDEST"
										},
										{
											"begin": 15426,
											"end": 15432,
											"name": "DUP4"
										},
										{
											"begin": 15406,
											"end": 15411,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 15406,
											"end": 15433,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14900,
											"end": 15148,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 14900,
											"end": 15148,
											"name": "JUMPDEST"
										},
										{
											"begin": 14985,
											"end": 14989,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14997,
											"end": 15126,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 15006,
											"end": 15018,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 15006,
											"end": 15016,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 15006,
											"end": 15018,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15006,
											"end": 15018,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 15006,
											"end": 15018,
											"name": "JUMPDEST"
										},
										{
											"begin": 15020,
											"end": 15027,
											"name": "DUP5"
										},
										{
											"begin": 15029,
											"end": 15125,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 15068,
											"end": 15083,
											"name": "DUP6"
										},
										{
											"begin": 15029,
											"end": 15125,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15029,
											"end": 15125,
											"name": "MLOAD"
										},
										{
											"begin": 15029,
											"end": 15125,
											"name": "DUP1"
										},
										{
											"begin": 15029,
											"end": 15125,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 15029,
											"end": 15125,
											"name": "ADD"
										},
										{
											"begin": 15029,
											"end": 15125,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15029,
											"end": 15125,
											"name": "MSTORE"
										},
										{
											"begin": 15029,
											"end": 15125,
											"name": "DUP1"
										},
										{
											"begin": 15029,
											"end": 15125,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 15029,
											"end": 15125,
											"name": "DUP2"
										},
										{
											"begin": 15029,
											"end": 15125,
											"name": "MSTORE"
										},
										{
											"begin": 15029,
											"end": 15125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15029,
											"end": 15125,
											"name": "ADD"
										},
										{
											"begin": 15029,
											"end": 15125,
											"name": "PUSH data",
											"value": "B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22"
										},
										{
											"begin": 15029,
											"end": 15125,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 15029,
											"end": 15125,
											"name": "SWAP2"
										},
										{
											"begin": 15029,
											"end": 15125,
											"name": "CODECOPY"
										},
										{
											"begin": 15029,
											"end": 15040,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 15029,
											"end": 15054,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15041,
											"end": 15053,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 15041,
											"end": 15051,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 15041,
											"end": 15053,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15041,
											"end": 15053,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 15041,
											"end": 15053,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 15029,
											"end": 15054,
											"name": "SWAP1"
										},
										{
											"begin": 15029,
											"end": 15054,
											"name": "DUP2"
										},
										{
											"begin": 15029,
											"end": 15054,
											"name": "AND"
										},
										{
											"begin": 15029,
											"end": 15054,
											"name": "DUP3"
										},
										{
											"begin": 15029,
											"end": 15054,
											"name": "MSTORE"
										},
										{
											"begin": 15029,
											"end": 15054,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15029,
											"end": 15054,
											"name": "DUP1"
										},
										{
											"begin": 15029,
											"end": 15054,
											"name": "DUP4"
										},
										{
											"begin": 15029,
											"end": 15054,
											"name": "ADD"
										},
										{
											"begin": 15029,
											"end": 15054,
											"name": "SWAP4"
										},
										{
											"begin": 15029,
											"end": 15054,
											"name": "SWAP1"
										},
										{
											"begin": 15029,
											"end": 15054,
											"name": "SWAP4"
										},
										{
											"begin": 15029,
											"end": 15054,
											"name": "MSTORE"
										},
										{
											"begin": 15029,
											"end": 15054,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15029,
											"end": 15054,
											"name": "SWAP2"
										},
										{
											"begin": 15029,
											"end": 15054,
											"name": "DUP3"
										},
										{
											"begin": 15029,
											"end": 15054,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15029,
											"end": 15054,
											"name": "SWAP1"
										},
										{
											"begin": 15029,
											"end": 15054,
											"name": "DUP2"
										},
										{
											"begin": 15029,
											"end": 15054,
											"name": "KECCAK256"
										},
										{
											"begin": 15029,
											"end": 15063,
											"name": "SWAP2"
										},
										{
											"begin": 15029,
											"end": 15063,
											"name": "DUP14"
										},
										{
											"begin": 15029,
											"end": 15063,
											"name": "AND"
										},
										{
											"begin": 15029,
											"end": 15063,
											"name": "DUP2"
										},
										{
											"begin": 15029,
											"end": 15063,
											"name": "MSTORE"
										},
										{
											"begin": 15029,
											"end": 15063,
											"name": "SWAP3"
										},
										{
											"begin": 15029,
											"end": 15063,
											"name": "MSTORE"
										},
										{
											"begin": 15029,
											"end": 15063,
											"name": "SWAP1"
										},
										{
											"begin": 15029,
											"end": 15063,
											"name": "KECCAK256"
										},
										{
											"begin": 15029,
											"end": 15063,
											"name": "SLOAD"
										},
										{
											"begin": 15029,
											"end": 15063,
											"name": "SWAP2"
										},
										{
											"begin": 15029,
											"end": 15125,
											"name": "SWAP1"
										},
										{
											"begin": 15029,
											"end": 15125,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 15029,
											"end": 15067,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 15029,
											"end": 15125,
											"name": "AND"
										},
										{
											"begin": 15029,
											"end": 15125,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12574,
											"end": 12721,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 12574,
											"end": 12721,
											"name": "JUMPDEST"
										},
										{
											"begin": 12645,
											"end": 12649,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12657,
											"end": 12699,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 12667,
											"end": 12679,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 12667,
											"end": 12677,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 12667,
											"end": 12679,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12667,
											"end": 12679,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 12667,
											"end": 12679,
											"name": "JUMPDEST"
										},
										{
											"begin": 12681,
											"end": 12690,
											"name": "DUP5"
										},
										{
											"begin": 12692,
											"end": 12698,
											"name": "DUP5"
										},
										{
											"begin": 12657,
											"end": 12666,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 12657,
											"end": 12699,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "JUMPDEST"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SLOAD"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "MLOAD"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP6"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "AND"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "ISZERO"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "MUL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "ADD"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SWAP1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SWAP5"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "AND"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SWAP4"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SWAP1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SWAP4"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DIV"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP2"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "ADD"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP5"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SWAP1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DIV"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP5"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "MUL"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP3"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "ADD"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP5"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "ADD"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SWAP1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SWAP3"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "MSTORE"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP2"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP2"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "MSTORE"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SWAP3"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SWAP2"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP4"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "ADD"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP3"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP3"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "ISZERO"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "JUMPI"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "LT"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "JUMPI"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP4"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SLOAD"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DIV"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "MUL"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP4"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "MSTORE"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SWAP2"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "ADD"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SWAP2"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "JUMP"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "JUMPDEST"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP3"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "ADD"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SWAP2"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SWAP1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "MSTORE"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "KECCAK256"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SWAP1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "tag",
											"value": "150"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "JUMPDEST"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP2"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SLOAD"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP2"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "MSTORE"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SWAP1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "ADD"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SWAP1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "ADD"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP4"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "GT"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "JUMPI"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP3"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SWAP1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SUB"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "AND"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP3"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "ADD"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SWAP2"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "JUMPDEST"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "POP"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "POP"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "POP"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "POP"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "POP"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP2"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "JUMPDEST"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP1"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SLOAD"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP1"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "MLOAD"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP6"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "AND"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "ISZERO"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "MUL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "ADD"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SWAP1"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SWAP5"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "AND"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SWAP4"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SWAP1"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SWAP4"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DIV"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP2"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "ADD"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP5"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SWAP1"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DIV"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP5"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "MUL"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP3"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "ADD"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP5"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "ADD"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SWAP1"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SWAP3"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "MSTORE"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP2"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP2"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "MSTORE"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SWAP3"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SWAP2"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP4"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "ADD"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP3"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP3"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP1"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "ISZERO"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "JUMPI"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP1"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "LT"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "JUMPI"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP1"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP4"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SLOAD"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DIV"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "MUL"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP4"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "MSTORE"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SWAP2"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "ADD"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SWAP2"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "JUMP"
										},
										{
											"begin": 12770,
											"end": 12898,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 12770,
											"end": 12898,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12866,
											"end": 12884,
											"name": "SWAP2"
										},
										{
											"begin": 12866,
											"end": 12884,
											"name": "DUP3"
										},
										{
											"begin": 12866,
											"end": 12884,
											"name": "AND"
										},
										{
											"begin": 12844,
											"end": 12851,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12866,
											"end": 12884,
											"name": "SWAP1"
										},
										{
											"begin": 12866,
											"end": 12884,
											"name": "DUP2"
										},
										{
											"begin": 12866,
											"end": 12884,
											"name": "MSTORE"
										},
										{
											"begin": 12866,
											"end": 12877,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 12866,
											"end": 12884,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12866,
											"end": 12884,
											"name": "SWAP1"
										},
										{
											"begin": 12866,
											"end": 12884,
											"name": "DUP2"
										},
										{
											"begin": 12866,
											"end": 12884,
											"name": "MSTORE"
										},
										{
											"begin": 12866,
											"end": 12884,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12866,
											"end": 12884,
											"name": "DUP1"
										},
										{
											"begin": 12866,
											"end": 12884,
											"name": "DUP4"
										},
										{
											"begin": 12866,
											"end": 12884,
											"name": "KECCAK256"
										},
										{
											"begin": 12866,
											"end": 12893,
											"name": "SWAP4"
										},
										{
											"begin": 12866,
											"end": 12893,
											"name": "SWAP1"
										},
										{
											"begin": 12866,
											"end": 12893,
											"name": "SWAP5"
										},
										{
											"begin": 12866,
											"end": 12893,
											"name": "AND"
										},
										{
											"begin": 12866,
											"end": 12893,
											"name": "DUP3"
										},
										{
											"begin": 12866,
											"end": 12893,
											"name": "MSTORE"
										},
										{
											"begin": 12866,
											"end": 12893,
											"name": "SWAP2"
										},
										{
											"begin": 12866,
											"end": 12893,
											"name": "SWAP1"
										},
										{
											"begin": 12866,
											"end": 12893,
											"name": "SWAP2"
										},
										{
											"begin": 12866,
											"end": 12893,
											"name": "MSTORE"
										},
										{
											"begin": 12866,
											"end": 12893,
											"name": "KECCAK256"
										},
										{
											"begin": 12866,
											"end": 12893,
											"name": "SLOAD"
										},
										{
											"begin": 12866,
											"end": 12893,
											"name": "SWAP1"
										},
										{
											"begin": 12770,
											"end": 12898,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10625,
											"end": 10726,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 10625,
											"end": 10726,
											"name": "JUMPDEST"
										},
										{
											"begin": 9972,
											"end": 9984,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 9972,
											"end": 9982,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 9972,
											"end": 9984,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9972,
											"end": 9984,
											"name": "tag",
											"value": "156"
										},
										{
											"begin": 9972,
											"end": 9984,
											"name": "JUMPDEST"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "SWAP1"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "DUP2"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "AND"
										},
										{
											"begin": 9962,
											"end": 9984,
											"name": "SWAP2"
										},
										{
											"begin": 9962,
											"end": 9984,
											"name": "AND"
										},
										{
											"begin": 9962,
											"end": 9984,
											"name": "EQ"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH [tag]",
											"value": "157"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "JUMPI"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "DUP1"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "DUP2"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "MSTORE"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "DUP3"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "ADD"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "DUP2"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "SWAP1"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "MSTORE"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "DUP3"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "ADD"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "MSTORE"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "DUP3"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "ADD"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "MSTORE"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "SWAP1"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "MLOAD"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "SWAP1"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "DUP2"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "SWAP1"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "SUB"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "ADD"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "SWAP1"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "REVERT"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "tag",
											"value": "157"
										},
										{
											"begin": 9954,
											"end": 10021,
											"name": "JUMPDEST"
										},
										{
											"begin": 10693,
											"end": 10721,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 10712,
											"end": 10720,
											"name": "DUP2"
										},
										{
											"begin": 10693,
											"end": 10711,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 10693,
											"end": 10721,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10693,
											"end": 10721,
											"name": "tag",
											"value": "159"
										},
										{
											"begin": 10693,
											"end": 10721,
											"name": "JUMPDEST"
										},
										{
											"begin": 10625,
											"end": 10726,
											"name": "POP"
										},
										{
											"begin": 10625,
											"end": 10726,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3661,
											"end": 3751,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 3661,
											"end": 3751,
											"name": "JUMPDEST"
										},
										{
											"begin": 3736,
											"end": 3746,
											"name": "CALLER"
										},
										{
											"begin": 3661,
											"end": 3751,
											"name": "SWAP1"
										},
										{
											"begin": 3661,
											"end": 3751,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 18078,
											"end": 18392,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 18078,
											"end": 18392,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18167,
											"end": 18186,
											"name": "DUP4"
										},
										{
											"begin": 18167,
											"end": 18186,
											"name": "AND"
										},
										{
											"begin": 18159,
											"end": 18227,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 18159,
											"end": 18227,
											"name": "JUMPI"
										},
										{
											"begin": 18159,
											"end": 18227,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18159,
											"end": 18227,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 18159,
											"end": 18227,
											"name": "DUP2"
										},
										{
											"begin": 18159,
											"end": 18227,
											"name": "MSTORE"
										},
										{
											"begin": 18159,
											"end": 18227,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18159,
											"end": 18227,
											"name": "ADD"
										},
										{
											"begin": 18159,
											"end": 18227,
											"name": "DUP1"
										},
										{
											"begin": 18159,
											"end": 18227,
											"name": "DUP1"
										},
										{
											"begin": 18159,
											"end": 18227,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18159,
											"end": 18227,
											"name": "ADD"
										},
										{
											"begin": 18159,
											"end": 18227,
											"name": "DUP3"
										},
										{
											"begin": 18159,
											"end": 18227,
											"name": "DUP2"
										},
										{
											"begin": 18159,
											"end": 18227,
											"name": "SUB"
										},
										{
											"begin": 18159,
											"end": 18227,
											"name": "DUP3"
										},
										{
											"begin": 18159,
											"end": 18227,
											"name": "MSTORE"
										},
										{
											"begin": 18159,
											"end": 18227,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 18159,
											"end": 18227,
											"name": "DUP2"
										},
										{
											"begin": 18159,
											"end": 18227,
											"name": "MSTORE"
										},
										{
											"begin": 18159,
											"end": 18227,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18159,
											"end": 18227,
											"name": "ADD"
										},
										{
											"begin": 18159,
											"end": 18227,
											"name": "DUP1"
										},
										{
											"begin": 18159,
											"end": 18227,
											"name": "PUSH data",
											"value": "1441CFBEF485DE93BEDECC35B3D10FA2992DB382C4C9C583A6E423A140ABE4A4"
										},
										{
											"begin": 18159,
											"end": 18227,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 18159,
											"end": 18227,
											"name": "SWAP2"
										},
										{
											"begin": 18159,
											"end": 18227,
											"name": "CODECOPY"
										},
										{
											"begin": 18159,
											"end": 18227,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18159,
											"end": 18227,
											"name": "ADD"
										},
										{
											"begin": 18159,
											"end": 18227,
											"name": "SWAP2"
										},
										{
											"begin": 18159,
											"end": 18227,
											"name": "POP"
										},
										{
											"begin": 18159,
											"end": 18227,
											"name": "POP"
										},
										{
											"begin": 18159,
											"end": 18227,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18159,
											"end": 18227,
											"name": "MLOAD"
										},
										{
											"begin": 18159,
											"end": 18227,
											"name": "DUP1"
										},
										{
											"begin": 18159,
											"end": 18227,
											"name": "SWAP2"
										},
										{
											"begin": 18159,
											"end": 18227,
											"name": "SUB"
										},
										{
											"begin": 18159,
											"end": 18227,
											"name": "SWAP1"
										},
										{
											"begin": 18159,
											"end": 18227,
											"name": "REVERT"
										},
										{
											"begin": 18159,
											"end": 18227,
											"name": "tag",
											"value": "163"
										},
										{
											"begin": 18159,
											"end": 18227,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18241,
											"end": 18262,
											"name": "DUP3"
										},
										{
											"begin": 18241,
											"end": 18262,
											"name": "AND"
										},
										{
											"begin": 18233,
											"end": 18301,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 18233,
											"end": 18301,
											"name": "JUMPI"
										},
										{
											"begin": 18233,
											"end": 18301,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18233,
											"end": 18301,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 18233,
											"end": 18301,
											"name": "DUP2"
										},
										{
											"begin": 18233,
											"end": 18301,
											"name": "MSTORE"
										},
										{
											"begin": 18233,
											"end": 18301,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18233,
											"end": 18301,
											"name": "ADD"
										},
										{
											"begin": 18233,
											"end": 18301,
											"name": "DUP1"
										},
										{
											"begin": 18233,
											"end": 18301,
											"name": "DUP1"
										},
										{
											"begin": 18233,
											"end": 18301,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18233,
											"end": 18301,
											"name": "ADD"
										},
										{
											"begin": 18233,
											"end": 18301,
											"name": "DUP3"
										},
										{
											"begin": 18233,
											"end": 18301,
											"name": "DUP2"
										},
										{
											"begin": 18233,
											"end": 18301,
											"name": "SUB"
										},
										{
											"begin": 18233,
											"end": 18301,
											"name": "DUP3"
										},
										{
											"begin": 18233,
											"end": 18301,
											"name": "MSTORE"
										},
										{
											"begin": 18233,
											"end": 18301,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 18233,
											"end": 18301,
											"name": "DUP2"
										},
										{
											"begin": 18233,
											"end": 18301,
											"name": "MSTORE"
										},
										{
											"begin": 18233,
											"end": 18301,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18233,
											"end": 18301,
											"name": "ADD"
										},
										{
											"begin": 18233,
											"end": 18301,
											"name": "DUP1"
										},
										{
											"begin": 18233,
											"end": 18301,
											"name": "PUSH data",
											"value": "F10E7571E18B354270DEE950932FB6A745EFC79414B2B2556185A4ED6A1AF0D5"
										},
										{
											"begin": 18233,
											"end": 18301,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 18233,
											"end": 18301,
											"name": "SWAP2"
										},
										{
											"begin": 18233,
											"end": 18301,
											"name": "CODECOPY"
										},
										{
											"begin": 18233,
											"end": 18301,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18233,
											"end": 18301,
											"name": "ADD"
										},
										{
											"begin": 18233,
											"end": 18301,
											"name": "SWAP2"
										},
										{
											"begin": 18233,
											"end": 18301,
											"name": "POP"
										},
										{
											"begin": 18233,
											"end": 18301,
											"name": "POP"
										},
										{
											"begin": 18233,
											"end": 18301,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18233,
											"end": 18301,
											"name": "MLOAD"
										},
										{
											"begin": 18233,
											"end": 18301,
											"name": "DUP1"
										},
										{
											"begin": 18233,
											"end": 18301,
											"name": "SWAP2"
										},
										{
											"begin": 18233,
											"end": 18301,
											"name": "SUB"
										},
										{
											"begin": 18233,
											"end": 18301,
											"name": "SWAP1"
										},
										{
											"begin": 18233,
											"end": 18301,
											"name": "REVERT"
										},
										{
											"begin": 18233,
											"end": 18301,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 18233,
											"end": 18301,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18308,
											"end": 18326,
											"name": "DUP1"
										},
										{
											"begin": 18308,
											"end": 18326,
											"name": "DUP5"
										},
										{
											"begin": 18308,
											"end": 18326,
											"name": "AND"
										},
										{
											"begin": 18308,
											"end": 18326,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18308,
											"end": 18326,
											"name": "DUP2"
										},
										{
											"begin": 18308,
											"end": 18326,
											"name": "DUP2"
										},
										{
											"begin": 18308,
											"end": 18326,
											"name": "MSTORE"
										},
										{
											"begin": 18308,
											"end": 18319,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 18308,
											"end": 18326,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18308,
											"end": 18326,
											"name": "SWAP1"
										},
										{
											"begin": 18308,
											"end": 18326,
											"name": "DUP2"
										},
										{
											"begin": 18308,
											"end": 18326,
											"name": "MSTORE"
										},
										{
											"begin": 18308,
											"end": 18326,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18308,
											"end": 18326,
											"name": "DUP1"
										},
										{
											"begin": 18308,
											"end": 18326,
											"name": "DUP4"
										},
										{
											"begin": 18308,
											"end": 18326,
											"name": "KECCAK256"
										},
										{
											"begin": 18308,
											"end": 18335,
											"name": "SWAP5"
										},
										{
											"begin": 18308,
											"end": 18335,
											"name": "DUP8"
										},
										{
											"begin": 18308,
											"end": 18335,
											"name": "AND"
										},
										{
											"begin": 18308,
											"end": 18335,
											"name": "DUP1"
										},
										{
											"begin": 18308,
											"end": 18335,
											"name": "DUP5"
										},
										{
											"begin": 18308,
											"end": 18335,
											"name": "MSTORE"
										},
										{
											"begin": 18308,
											"end": 18335,
											"name": "SWAP5"
										},
										{
											"begin": 18308,
											"end": 18335,
											"name": "DUP3"
										},
										{
											"begin": 18308,
											"end": 18335,
											"name": "MSTORE"
										},
										{
											"begin": 18308,
											"end": 18335,
											"name": "SWAP2"
										},
										{
											"begin": 18308,
											"end": 18335,
											"name": "DUP3"
										},
										{
											"begin": 18308,
											"end": 18335,
											"name": "SWAP1"
										},
										{
											"begin": 18308,
											"end": 18335,
											"name": "KECCAK256"
										},
										{
											"begin": 18308,
											"end": 18344,
											"name": "DUP6"
										},
										{
											"begin": 18308,
											"end": 18344,
											"name": "SWAP1"
										},
										{
											"begin": 18308,
											"end": 18344,
											"name": "SSTORE"
										},
										{
											"begin": 18355,
											"end": 18387,
											"name": "DUP2"
										},
										{
											"begin": 18355,
											"end": 18387,
											"name": "MLOAD"
										},
										{
											"begin": 18355,
											"end": 18387,
											"name": "DUP6"
										},
										{
											"begin": 18355,
											"end": 18387,
											"name": "DUP2"
										},
										{
											"begin": 18355,
											"end": 18387,
											"name": "MSTORE"
										},
										{
											"begin": 18355,
											"end": 18387,
											"name": "SWAP2"
										},
										{
											"begin": 18355,
											"end": 18387,
											"name": "MLOAD"
										},
										{
											"begin": 18355,
											"end": 18387,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 18355,
											"end": 18387,
											"name": "SWAP3"
										},
										{
											"begin": 18355,
											"end": 18387,
											"name": "DUP2"
										},
										{
											"begin": 18355,
											"end": 18387,
											"name": "SWAP1"
										},
										{
											"begin": 18355,
											"end": 18387,
											"name": "SUB"
										},
										{
											"begin": 18355,
											"end": 18387,
											"name": "SWAP1"
										},
										{
											"begin": 18355,
											"end": 18387,
											"name": "SWAP2"
										},
										{
											"begin": 18355,
											"end": 18387,
											"name": "ADD"
										},
										{
											"begin": 18355,
											"end": 18387,
											"name": "SWAP1"
										},
										{
											"begin": 18355,
											"end": 18387,
											"name": "LOG3"
										},
										{
											"begin": 18078,
											"end": 18392,
											"name": "POP"
										},
										{
											"begin": 18078,
											"end": 18392,
											"name": "POP"
										},
										{
											"begin": 18078,
											"end": 18392,
											"name": "POP"
										},
										{
											"begin": 18078,
											"end": 18392,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16086,
											"end": 16528,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 16086,
											"end": 16528,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16179,
											"end": 16199,
											"name": "DUP4"
										},
										{
											"begin": 16179,
											"end": 16199,
											"name": "AND"
										},
										{
											"begin": 16171,
											"end": 16241,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 16171,
											"end": 16241,
											"name": "JUMPI"
										},
										{
											"begin": 16171,
											"end": 16241,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16171,
											"end": 16241,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 16171,
											"end": 16241,
											"name": "DUP2"
										},
										{
											"begin": 16171,
											"end": 16241,
											"name": "MSTORE"
										},
										{
											"begin": 16171,
											"end": 16241,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16171,
											"end": 16241,
											"name": "ADD"
										},
										{
											"begin": 16171,
											"end": 16241,
											"name": "DUP1"
										},
										{
											"begin": 16171,
											"end": 16241,
											"name": "DUP1"
										},
										{
											"begin": 16171,
											"end": 16241,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16171,
											"end": 16241,
											"name": "ADD"
										},
										{
											"begin": 16171,
											"end": 16241,
											"name": "DUP3"
										},
										{
											"begin": 16171,
											"end": 16241,
											"name": "DUP2"
										},
										{
											"begin": 16171,
											"end": 16241,
											"name": "SUB"
										},
										{
											"begin": 16171,
											"end": 16241,
											"name": "DUP3"
										},
										{
											"begin": 16171,
											"end": 16241,
											"name": "MSTORE"
										},
										{
											"begin": 16171,
											"end": 16241,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 16171,
											"end": 16241,
											"name": "DUP2"
										},
										{
											"begin": 16171,
											"end": 16241,
											"name": "MSTORE"
										},
										{
											"begin": 16171,
											"end": 16241,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16171,
											"end": 16241,
											"name": "ADD"
										},
										{
											"begin": 16171,
											"end": 16241,
											"name": "DUP1"
										},
										{
											"begin": 16171,
											"end": 16241,
											"name": "PUSH data",
											"value": "D26CF302D50B28DE74BE656B11D67092B32131E5712D1BCF08C4E976DACDA57"
										},
										{
											"begin": 16171,
											"end": 16241,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 16171,
											"end": 16241,
											"name": "SWAP2"
										},
										{
											"begin": 16171,
											"end": 16241,
											"name": "CODECOPY"
										},
										{
											"begin": 16171,
											"end": 16241,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16171,
											"end": 16241,
											"name": "ADD"
										},
										{
											"begin": 16171,
											"end": 16241,
											"name": "SWAP2"
										},
										{
											"begin": 16171,
											"end": 16241,
											"name": "POP"
										},
										{
											"begin": 16171,
											"end": 16241,
											"name": "POP"
										},
										{
											"begin": 16171,
											"end": 16241,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16171,
											"end": 16241,
											"name": "MLOAD"
										},
										{
											"begin": 16171,
											"end": 16241,
											"name": "DUP1"
										},
										{
											"begin": 16171,
											"end": 16241,
											"name": "SWAP2"
										},
										{
											"begin": 16171,
											"end": 16241,
											"name": "SUB"
										},
										{
											"begin": 16171,
											"end": 16241,
											"name": "SWAP1"
										},
										{
											"begin": 16171,
											"end": 16241,
											"name": "REVERT"
										},
										{
											"begin": 16171,
											"end": 16241,
											"name": "tag",
											"value": "166"
										},
										{
											"begin": 16171,
											"end": 16241,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16255,
											"end": 16278,
											"name": "DUP3"
										},
										{
											"begin": 16255,
											"end": 16278,
											"name": "AND"
										},
										{
											"begin": 16247,
											"end": 16318,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 16247,
											"end": 16318,
											"name": "JUMPI"
										},
										{
											"begin": 16247,
											"end": 16318,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16247,
											"end": 16318,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 16247,
											"end": 16318,
											"name": "DUP2"
										},
										{
											"begin": 16247,
											"end": 16318,
											"name": "MSTORE"
										},
										{
											"begin": 16247,
											"end": 16318,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16247,
											"end": 16318,
											"name": "ADD"
										},
										{
											"begin": 16247,
											"end": 16318,
											"name": "DUP1"
										},
										{
											"begin": 16247,
											"end": 16318,
											"name": "DUP1"
										},
										{
											"begin": 16247,
											"end": 16318,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16247,
											"end": 16318,
											"name": "ADD"
										},
										{
											"begin": 16247,
											"end": 16318,
											"name": "DUP3"
										},
										{
											"begin": 16247,
											"end": 16318,
											"name": "DUP2"
										},
										{
											"begin": 16247,
											"end": 16318,
											"name": "SUB"
										},
										{
											"begin": 16247,
											"end": 16318,
											"name": "DUP3"
										},
										{
											"begin": 16247,
											"end": 16318,
											"name": "MSTORE"
										},
										{
											"begin": 16247,
											"end": 16318,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 16247,
											"end": 16318,
											"name": "DUP2"
										},
										{
											"begin": 16247,
											"end": 16318,
											"name": "MSTORE"
										},
										{
											"begin": 16247,
											"end": 16318,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16247,
											"end": 16318,
											"name": "ADD"
										},
										{
											"begin": 16247,
											"end": 16318,
											"name": "DUP1"
										},
										{
											"begin": 16247,
											"end": 16318,
											"name": "PUSH data",
											"value": "ADE9EFCB59E42E439FFE61509B352B1AF56D64CCB68D80B039B7B69578F371D2"
										},
										{
											"begin": 16247,
											"end": 16318,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 16247,
											"end": 16318,
											"name": "SWAP2"
										},
										{
											"begin": 16247,
											"end": 16318,
											"name": "CODECOPY"
										},
										{
											"begin": 16247,
											"end": 16318,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16247,
											"end": 16318,
											"name": "ADD"
										},
										{
											"begin": 16247,
											"end": 16318,
											"name": "SWAP2"
										},
										{
											"begin": 16247,
											"end": 16318,
											"name": "POP"
										},
										{
											"begin": 16247,
											"end": 16318,
											"name": "POP"
										},
										{
											"begin": 16247,
											"end": 16318,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16247,
											"end": 16318,
											"name": "MLOAD"
										},
										{
											"begin": 16247,
											"end": 16318,
											"name": "DUP1"
										},
										{
											"begin": 16247,
											"end": 16318,
											"name": "SWAP2"
										},
										{
											"begin": 16247,
											"end": 16318,
											"name": "SUB"
										},
										{
											"begin": 16247,
											"end": 16318,
											"name": "SWAP1"
										},
										{
											"begin": 16247,
											"end": 16318,
											"name": "REVERT"
										},
										{
											"begin": 16247,
											"end": 16318,
											"name": "tag",
											"value": "167"
										},
										{
											"begin": 16247,
											"end": 16318,
											"name": "JUMPDEST"
										},
										{
											"begin": 16345,
											"end": 16416,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 16367,
											"end": 16373,
											"name": "DUP2"
										},
										{
											"begin": 16345,
											"end": 16416,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16345,
											"end": 16416,
											"name": "MLOAD"
										},
										{
											"begin": 16345,
											"end": 16416,
											"name": "DUP1"
										},
										{
											"begin": 16345,
											"end": 16416,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 16345,
											"end": 16416,
											"name": "ADD"
										},
										{
											"begin": 16345,
											"end": 16416,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16345,
											"end": 16416,
											"name": "MSTORE"
										},
										{
											"begin": 16345,
											"end": 16416,
											"name": "DUP1"
										},
										{
											"begin": 16345,
											"end": 16416,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 16345,
											"end": 16416,
											"name": "DUP2"
										},
										{
											"begin": 16345,
											"end": 16416,
											"name": "MSTORE"
										},
										{
											"begin": 16345,
											"end": 16416,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16345,
											"end": 16416,
											"name": "ADD"
										},
										{
											"begin": 16345,
											"end": 16416,
											"name": "PUSH data",
											"value": "A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73"
										},
										{
											"begin": 16345,
											"end": 16416,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 16345,
											"end": 16416,
											"name": "SWAP2"
										},
										{
											"begin": 16345,
											"end": 16416,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16345,
											"end": 16362,
											"name": "DUP7"
										},
										{
											"begin": 16345,
											"end": 16362,
											"name": "AND"
										},
										{
											"begin": 16345,
											"end": 16362,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16345,
											"end": 16362,
											"name": "SWAP1"
										},
										{
											"begin": 16345,
											"end": 16362,
											"name": "DUP2"
										},
										{
											"begin": 16345,
											"end": 16362,
											"name": "MSTORE"
										},
										{
											"begin": 16345,
											"end": 16354,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16345,
											"end": 16362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16345,
											"end": 16362,
											"name": "MSTORE"
										},
										{
											"begin": 16345,
											"end": 16362,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16345,
											"end": 16362,
											"name": "SWAP1"
										},
										{
											"begin": 16345,
											"end": 16362,
											"name": "KECCAK256"
										},
										{
											"begin": 16345,
											"end": 16362,
											"name": "SLOAD"
										},
										{
											"begin": 16345,
											"end": 16362,
											"name": "SWAP2"
										},
										{
											"begin": 16345,
											"end": 16416,
											"name": "SWAP1"
										},
										{
											"begin": 16345,
											"end": 16416,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16345,
											"end": 16366,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 16345,
											"end": 16416,
											"name": "AND"
										},
										{
											"begin": 16345,
											"end": 16416,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16345,
											"end": 16416,
											"name": "tag",
											"value": "168"
										},
										{
											"begin": 16345,
											"end": 16416,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16325,
											"end": 16342,
											"name": "DUP1"
										},
										{
											"begin": 16325,
											"end": 16342,
											"name": "DUP6"
										},
										{
											"begin": 16325,
											"end": 16342,
											"name": "AND"
										},
										{
											"begin": 16325,
											"end": 16342,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16325,
											"end": 16342,
											"name": "SWAP1"
										},
										{
											"begin": 16325,
											"end": 16342,
											"name": "DUP2"
										},
										{
											"begin": 16325,
											"end": 16342,
											"name": "MSTORE"
										},
										{
											"begin": 16325,
											"end": 16334,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16325,
											"end": 16342,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16325,
											"end": 16342,
											"name": "MSTORE"
										},
										{
											"begin": 16325,
											"end": 16342,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16325,
											"end": 16342,
											"name": "DUP1"
										},
										{
											"begin": 16325,
											"end": 16342,
											"name": "DUP3"
										},
										{
											"begin": 16325,
											"end": 16342,
											"name": "KECCAK256"
										},
										{
											"begin": 16325,
											"end": 16416,
											"name": "SWAP4"
										},
										{
											"begin": 16325,
											"end": 16416,
											"name": "SWAP1"
										},
										{
											"begin": 16325,
											"end": 16416,
											"name": "SWAP4"
										},
										{
											"begin": 16325,
											"end": 16416,
											"name": "SSTORE"
										},
										{
											"begin": 16445,
											"end": 16465,
											"name": "SWAP1"
										},
										{
											"begin": 16445,
											"end": 16465,
											"name": "DUP5"
										},
										{
											"begin": 16445,
											"end": 16465,
											"name": "AND"
										},
										{
											"begin": 16445,
											"end": 16465,
											"name": "DUP2"
										},
										{
											"begin": 16445,
											"end": 16465,
											"name": "MSTORE"
										},
										{
											"begin": 16445,
											"end": 16465,
											"name": "KECCAK256"
										},
										{
											"begin": 16445,
											"end": 16465,
											"name": "SLOAD"
										},
										{
											"begin": 16445,
											"end": 16477,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 16445,
											"end": 16477,
											"name": "SWAP1"
										},
										{
											"begin": 16470,
											"end": 16476,
											"name": "DUP3"
										},
										{
											"begin": 16445,
											"end": 16477,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16445,
											"end": 16469,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 16445,
											"end": 16477,
											"name": "AND"
										},
										{
											"begin": 16445,
											"end": 16477,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16445,
											"end": 16477,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 16445,
											"end": 16477,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16422,
											"end": 16442,
											"name": "DUP1"
										},
										{
											"begin": 16422,
											"end": 16442,
											"name": "DUP5"
										},
										{
											"begin": 16422,
											"end": 16442,
											"name": "AND"
										},
										{
											"begin": 16422,
											"end": 16442,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16422,
											"end": 16442,
											"name": "DUP2"
										},
										{
											"begin": 16422,
											"end": 16442,
											"name": "DUP2"
										},
										{
											"begin": 16422,
											"end": 16442,
											"name": "MSTORE"
										},
										{
											"begin": 16422,
											"end": 16431,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16422,
											"end": 16442,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16422,
											"end": 16442,
											"name": "SWAP1"
										},
										{
											"begin": 16422,
											"end": 16442,
											"name": "DUP2"
										},
										{
											"begin": 16422,
											"end": 16442,
											"name": "MSTORE"
										},
										{
											"begin": 16422,
											"end": 16442,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16422,
											"end": 16442,
											"name": "SWAP2"
										},
										{
											"begin": 16422,
											"end": 16442,
											"name": "DUP3"
										},
										{
											"begin": 16422,
											"end": 16442,
											"name": "SWAP1"
										},
										{
											"begin": 16422,
											"end": 16442,
											"name": "KECCAK256"
										},
										{
											"begin": 16422,
											"end": 16477,
											"name": "SWAP5"
										},
										{
											"begin": 16422,
											"end": 16477,
											"name": "SWAP1"
										},
										{
											"begin": 16422,
											"end": 16477,
											"name": "SWAP5"
										},
										{
											"begin": 16422,
											"end": 16477,
											"name": "SSTORE"
										},
										{
											"begin": 16488,
											"end": 16523,
											"name": "DUP1"
										},
										{
											"begin": 16488,
											"end": 16523,
											"name": "MLOAD"
										},
										{
											"begin": 16488,
											"end": 16523,
											"name": "DUP6"
										},
										{
											"begin": 16488,
											"end": 16523,
											"name": "DUP2"
										},
										{
											"begin": 16488,
											"end": 16523,
											"name": "MSTORE"
										},
										{
											"begin": 16488,
											"end": 16523,
											"name": "SWAP1"
										},
										{
											"begin": 16488,
											"end": 16523,
											"name": "MLOAD"
										},
										{
											"begin": 16422,
											"end": 16442,
											"name": "SWAP2"
										},
										{
											"begin": 16422,
											"end": 16442,
											"name": "SWAP4"
										},
										{
											"begin": 16488,
											"end": 16523,
											"name": "SWAP3"
										},
										{
											"begin": 16488,
											"end": 16523,
											"name": "DUP8"
										},
										{
											"begin": 16488,
											"end": 16523,
											"name": "AND"
										},
										{
											"begin": 16488,
											"end": 16523,
											"name": "SWAP3"
										},
										{
											"begin": 16488,
											"end": 16523,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 16488,
											"end": 16523,
											"name": "SWAP3"
										},
										{
											"begin": 16488,
											"end": 16523,
											"name": "SWAP2"
										},
										{
											"begin": 16488,
											"end": 16523,
											"name": "DUP3"
										},
										{
											"begin": 16488,
											"end": 16523,
											"name": "SWAP1"
										},
										{
											"begin": 16488,
											"end": 16523,
											"name": "SUB"
										},
										{
											"begin": 16488,
											"end": 16523,
											"name": "ADD"
										},
										{
											"begin": 16488,
											"end": 16523,
											"name": "SWAP1"
										},
										{
											"begin": 16488,
											"end": 16523,
											"name": "LOG3"
										},
										{
											"begin": 16086,
											"end": 16528,
											"name": "POP"
										},
										{
											"begin": 16086,
											"end": 16528,
											"name": "POP"
										},
										{
											"begin": 16086,
											"end": 16528,
											"name": "POP"
										},
										{
											"begin": 16086,
											"end": 16528,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5558,
											"end": 5731,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 5558,
											"end": 5731,
											"name": "JUMPDEST"
										},
										{
											"begin": 5644,
											"end": 5651,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5675,
											"end": 5687,
											"name": "DUP2"
										},
										{
											"begin": 5667,
											"end": 5673,
											"name": "DUP5"
										},
										{
											"begin": 5667,
											"end": 5673,
											"name": "DUP5"
										},
										{
											"begin": 5667,
											"end": 5673,
											"name": "GT"
										},
										{
											"begin": 5667,
											"end": 5673,
											"name": "ISZERO"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "PUSH [tag]",
											"value": "171"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "JUMPI"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "DUP2"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "MSTORE"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "ADD"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "DUP1"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "DUP1"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "ADD"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "DUP3"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "DUP2"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "SUB"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "DUP3"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "MSTORE"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "DUP4"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "DUP2"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "DUP2"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "MLOAD"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "DUP2"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "MSTORE"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "ADD"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "SWAP2"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "POP"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "DUP1"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "MLOAD"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "SWAP1"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "ADD"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "SWAP1"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "DUP1"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "DUP4"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "172"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "174"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "POP"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "POP"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "POP"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "SWAP1"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "POP"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "SWAP1"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "DUP2"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "ADD"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "SWAP1"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "AND"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "DUP1"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "ISZERO"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "JUMPI"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "DUP1"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "DUP3"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "SUB"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "DUP1"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "MLOAD"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "DUP4"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "SUB"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "EXP"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "SUB"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "NOT"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "AND"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "DUP2"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "MSTORE"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "ADD"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "SWAP2"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "POP"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "tag",
											"value": "175"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "JUMPDEST"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "POP"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "SWAP3"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "POP"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "POP"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "POP"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "MLOAD"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "DUP1"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "SWAP2"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "SUB"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "SWAP1"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "REVERT"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "tag",
											"value": "171"
										},
										{
											"begin": 5659,
											"end": 5688,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5706,
											"end": 5711,
											"name": "SWAP1"
										},
										{
											"begin": 5706,
											"end": 5711,
											"name": "SUB"
										},
										{
											"begin": 5706,
											"end": 5711,
											"name": "SWAP1"
										},
										{
											"begin": 5558,
											"end": 5731,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4760,
											"end": 4922,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 4760,
											"end": 4922,
											"name": "JUMPDEST"
										},
										{
											"begin": 4818,
											"end": 4825,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4845,
											"end": 4850,
											"name": "DUP3"
										},
										{
											"begin": 4845,
											"end": 4850,
											"name": "DUP3"
										},
										{
											"begin": 4845,
											"end": 4850,
											"name": "ADD"
										},
										{
											"begin": 4864,
											"end": 4870,
											"name": "DUP4"
										},
										{
											"begin": 4864,
											"end": 4870,
											"name": "DUP2"
										},
										{
											"begin": 4864,
											"end": 4870,
											"name": "LT"
										},
										{
											"begin": 4864,
											"end": 4870,
											"name": "ISZERO"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "JUMPI"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "DUP1"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "DUP2"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "MSTORE"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "DUP3"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "ADD"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "MSTORE"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "DUP3"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "ADD"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "MSTORE"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "DUP3"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "ADD"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "MSTORE"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "SWAP1"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "MLOAD"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "SWAP1"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "DUP2"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "SWAP1"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "SUB"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "ADD"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "SWAP1"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "REVERT"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "tag",
											"value": "177"
										},
										{
											"begin": 4856,
											"end": 4902,
											"name": "JUMPDEST"
										},
										{
											"begin": 4916,
											"end": 4917,
											"name": "SWAP4"
										},
										{
											"begin": 4760,
											"end": 4922,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4760,
											"end": 4922,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17357,
											"end": 17681,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 17357,
											"end": 17681,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 17428,
											"end": 17449,
											"name": "DUP3"
										},
										{
											"begin": 17428,
											"end": 17449,
											"name": "AND"
										},
										{
											"begin": 17420,
											"end": 17487,
											"name": "PUSH [tag]",
											"value": "179"
										},
										{
											"begin": 17420,
											"end": 17487,
											"name": "JUMPI"
										},
										{
											"begin": 17420,
											"end": 17487,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17420,
											"end": 17487,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 17420,
											"end": 17487,
											"name": "DUP2"
										},
										{
											"begin": 17420,
											"end": 17487,
											"name": "MSTORE"
										},
										{
											"begin": 17420,
											"end": 17487,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17420,
											"end": 17487,
											"name": "ADD"
										},
										{
											"begin": 17420,
											"end": 17487,
											"name": "DUP1"
										},
										{
											"begin": 17420,
											"end": 17487,
											"name": "DUP1"
										},
										{
											"begin": 17420,
											"end": 17487,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17420,
											"end": 17487,
											"name": "ADD"
										},
										{
											"begin": 17420,
											"end": 17487,
											"name": "DUP3"
										},
										{
											"begin": 17420,
											"end": 17487,
											"name": "DUP2"
										},
										{
											"begin": 17420,
											"end": 17487,
											"name": "SUB"
										},
										{
											"begin": 17420,
											"end": 17487,
											"name": "DUP3"
										},
										{
											"begin": 17420,
											"end": 17487,
											"name": "MSTORE"
										},
										{
											"begin": 17420,
											"end": 17487,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 17420,
											"end": 17487,
											"name": "DUP2"
										},
										{
											"begin": 17420,
											"end": 17487,
											"name": "MSTORE"
										},
										{
											"begin": 17420,
											"end": 17487,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17420,
											"end": 17487,
											"name": "ADD"
										},
										{
											"begin": 17420,
											"end": 17487,
											"name": "DUP1"
										},
										{
											"begin": 17420,
											"end": 17487,
											"name": "PUSH data",
											"value": "B81EDBF10508D9B81724F18FF8F3D8BFBA9790734CE1F1C54DFE1030B4914855"
										},
										{
											"begin": 17420,
											"end": 17487,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 17420,
											"end": 17487,
											"name": "SWAP2"
										},
										{
											"begin": 17420,
											"end": 17487,
											"name": "CODECOPY"
										},
										{
											"begin": 17420,
											"end": 17487,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17420,
											"end": 17487,
											"name": "ADD"
										},
										{
											"begin": 17420,
											"end": 17487,
											"name": "SWAP2"
										},
										{
											"begin": 17420,
											"end": 17487,
											"name": "POP"
										},
										{
											"begin": 17420,
											"end": 17487,
											"name": "POP"
										},
										{
											"begin": 17420,
											"end": 17487,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17420,
											"end": 17487,
											"name": "MLOAD"
										},
										{
											"begin": 17420,
											"end": 17487,
											"name": "DUP1"
										},
										{
											"begin": 17420,
											"end": 17487,
											"name": "SWAP2"
										},
										{
											"begin": 17420,
											"end": 17487,
											"name": "SUB"
										},
										{
											"begin": 17420,
											"end": 17487,
											"name": "SWAP1"
										},
										{
											"begin": 17420,
											"end": 17487,
											"name": "REVERT"
										},
										{
											"begin": 17420,
											"end": 17487,
											"name": "tag",
											"value": "179"
										},
										{
											"begin": 17420,
											"end": 17487,
											"name": "JUMPDEST"
										},
										{
											"begin": 17515,
											"end": 17583,
											"name": "PUSH [tag]",
											"value": "180"
										},
										{
											"begin": 17538,
											"end": 17544,
											"name": "DUP2"
										},
										{
											"begin": 17515,
											"end": 17583,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17515,
											"end": 17583,
											"name": "MLOAD"
										},
										{
											"begin": 17515,
											"end": 17583,
											"name": "DUP1"
										},
										{
											"begin": 17515,
											"end": 17583,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 17515,
											"end": 17583,
											"name": "ADD"
										},
										{
											"begin": 17515,
											"end": 17583,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17515,
											"end": 17583,
											"name": "MSTORE"
										},
										{
											"begin": 17515,
											"end": 17583,
											"name": "DUP1"
										},
										{
											"begin": 17515,
											"end": 17583,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 17515,
											"end": 17583,
											"name": "DUP2"
										},
										{
											"begin": 17515,
											"end": 17583,
											"name": "MSTORE"
										},
										{
											"begin": 17515,
											"end": 17583,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17515,
											"end": 17583,
											"name": "ADD"
										},
										{
											"begin": 17515,
											"end": 17583,
											"name": "PUSH data",
											"value": "DEAA84B30175FD0578812C46240362B7914652A35E6707AD7E1556891E4AE032"
										},
										{
											"begin": 17515,
											"end": 17583,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 17515,
											"end": 17583,
											"name": "SWAP2"
										},
										{
											"begin": 17515,
											"end": 17583,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 17515,
											"end": 17533,
											"name": "DUP6"
										},
										{
											"begin": 17515,
											"end": 17533,
											"name": "AND"
										},
										{
											"begin": 17515,
											"end": 17533,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17515,
											"end": 17533,
											"name": "SWAP1"
										},
										{
											"begin": 17515,
											"end": 17533,
											"name": "DUP2"
										},
										{
											"begin": 17515,
											"end": 17533,
											"name": "MSTORE"
										},
										{
											"begin": 17515,
											"end": 17524,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 17515,
											"end": 17533,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17515,
											"end": 17533,
											"name": "MSTORE"
										},
										{
											"begin": 17515,
											"end": 17533,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17515,
											"end": 17533,
											"name": "SWAP1"
										},
										{
											"begin": 17515,
											"end": 17533,
											"name": "KECCAK256"
										},
										{
											"begin": 17515,
											"end": 17533,
											"name": "SLOAD"
										},
										{
											"begin": 17515,
											"end": 17533,
											"name": "SWAP2"
										},
										{
											"begin": 17515,
											"end": 17583,
											"name": "SWAP1"
										},
										{
											"begin": 17515,
											"end": 17583,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 17515,
											"end": 17537,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 17515,
											"end": 17583,
											"name": "AND"
										},
										{
											"begin": 17515,
											"end": 17583,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17515,
											"end": 17583,
											"name": "tag",
											"value": "180"
										},
										{
											"begin": 17515,
											"end": 17583,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 17494,
											"end": 17512,
											"name": "DUP4"
										},
										{
											"begin": 17494,
											"end": 17512,
											"name": "AND"
										},
										{
											"begin": 17494,
											"end": 17512,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17494,
											"end": 17512,
											"name": "SWAP1"
										},
										{
											"begin": 17494,
											"end": 17512,
											"name": "DUP2"
										},
										{
											"begin": 17494,
											"end": 17512,
											"name": "MSTORE"
										},
										{
											"begin": 17494,
											"end": 17503,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 17494,
											"end": 17512,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17494,
											"end": 17512,
											"name": "MSTORE"
										},
										{
											"begin": 17494,
											"end": 17512,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17494,
											"end": 17512,
											"name": "SWAP1"
										},
										{
											"begin": 17494,
											"end": 17512,
											"name": "KECCAK256"
										},
										{
											"begin": 17494,
											"end": 17583,
											"name": "SSTORE"
										},
										{
											"begin": 17604,
											"end": 17616,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 17604,
											"end": 17616,
											"name": "SLOAD"
										},
										{
											"begin": 17604,
											"end": 17628,
											"name": "PUSH [tag]",
											"value": "181"
										},
										{
											"begin": 17604,
											"end": 17628,
											"name": "SWAP1"
										},
										{
											"begin": 17621,
											"end": 17627,
											"name": "DUP3"
										},
										{
											"begin": 17604,
											"end": 17628,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 17604,
											"end": 17620,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 17604,
											"end": 17628,
											"name": "AND"
										},
										{
											"begin": 17604,
											"end": 17628,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17604,
											"end": 17628,
											"name": "tag",
											"value": "181"
										},
										{
											"begin": 17604,
											"end": 17628,
											"name": "JUMPDEST"
										},
										{
											"begin": 17589,
											"end": 17601,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 17589,
											"end": 17628,
											"name": "SSTORE"
										},
										{
											"begin": 17639,
											"end": 17676,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17639,
											"end": 17676,
											"name": "DUP1"
										},
										{
											"begin": 17639,
											"end": 17676,
											"name": "MLOAD"
										},
										{
											"begin": 17639,
											"end": 17676,
											"name": "DUP3"
										},
										{
											"begin": 17639,
											"end": 17676,
											"name": "DUP2"
										},
										{
											"begin": 17639,
											"end": 17676,
											"name": "MSTORE"
										},
										{
											"begin": 17639,
											"end": 17676,
											"name": "SWAP1"
										},
										{
											"begin": 17639,
											"end": 17676,
											"name": "MLOAD"
										},
										{
											"begin": 17665,
											"end": 17666,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17665,
											"end": 17666,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 17639,
											"end": 17676,
											"name": "DUP6"
										},
										{
											"begin": 17639,
											"end": 17676,
											"name": "AND"
										},
										{
											"begin": 17639,
											"end": 17676,
											"name": "SWAP2"
										},
										{
											"begin": 17639,
											"end": 17676,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 17639,
											"end": 17676,
											"name": "SWAP2"
										},
										{
											"begin": 17639,
											"end": 17676,
											"name": "DUP2"
										},
										{
											"begin": 17639,
											"end": 17676,
											"name": "SWAP1"
										},
										{
											"begin": 17639,
											"end": 17676,
											"name": "SUB"
										},
										{
											"begin": 17639,
											"end": 17676,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17639,
											"end": 17676,
											"name": "ADD"
										},
										{
											"begin": 17639,
											"end": 17676,
											"name": "SWAP1"
										},
										{
											"begin": 17639,
											"end": 17676,
											"name": "LOG3"
										},
										{
											"begin": 17357,
											"end": 17681,
											"name": "POP"
										},
										{
											"begin": 17357,
											"end": 17681,
											"name": "POP"
										},
										{
											"begin": 17357,
											"end": 17681,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16778,
											"end": 17062,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 16778,
											"end": 17062,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16849,
											"end": 16870,
											"name": "DUP3"
										},
										{
											"begin": 16849,
											"end": 16870,
											"name": "AND"
										},
										{
											"begin": 16841,
											"end": 16906,
											"name": "PUSH [tag]",
											"value": "184"
										},
										{
											"begin": 16841,
											"end": 16906,
											"name": "JUMPI"
										},
										{
											"begin": 16841,
											"end": 16906,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16841,
											"end": 16906,
											"name": "DUP1"
										},
										{
											"begin": 16841,
											"end": 16906,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 16841,
											"end": 16906,
											"name": "DUP2"
										},
										{
											"begin": 16841,
											"end": 16906,
											"name": "MSTORE"
										},
										{
											"begin": 16841,
											"end": 16906,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16841,
											"end": 16906,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16841,
											"end": 16906,
											"name": "DUP3"
										},
										{
											"begin": 16841,
											"end": 16906,
											"name": "ADD"
										},
										{
											"begin": 16841,
											"end": 16906,
											"name": "MSTORE"
										},
										{
											"begin": 16841,
											"end": 16906,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 16841,
											"end": 16906,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 16841,
											"end": 16906,
											"name": "DUP3"
										},
										{
											"begin": 16841,
											"end": 16906,
											"name": "ADD"
										},
										{
											"begin": 16841,
											"end": 16906,
											"name": "MSTORE"
										},
										{
											"begin": 16841,
											"end": 16906,
											"name": "PUSH",
											"value": "42455032303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 16841,
											"end": 16906,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 16841,
											"end": 16906,
											"name": "DUP3"
										},
										{
											"begin": 16841,
											"end": 16906,
											"name": "ADD"
										},
										{
											"begin": 16841,
											"end": 16906,
											"name": "MSTORE"
										},
										{
											"begin": 16841,
											"end": 16906,
											"name": "SWAP1"
										},
										{
											"begin": 16841,
											"end": 16906,
											"name": "MLOAD"
										},
										{
											"begin": 16841,
											"end": 16906,
											"name": "SWAP1"
										},
										{
											"begin": 16841,
											"end": 16906,
											"name": "DUP2"
										},
										{
											"begin": 16841,
											"end": 16906,
											"name": "SWAP1"
										},
										{
											"begin": 16841,
											"end": 16906,
											"name": "SUB"
										},
										{
											"begin": 16841,
											"end": 16906,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 16841,
											"end": 16906,
											"name": "ADD"
										},
										{
											"begin": 16841,
											"end": 16906,
											"name": "SWAP1"
										},
										{
											"begin": 16841,
											"end": 16906,
											"name": "REVERT"
										},
										{
											"begin": 16841,
											"end": 16906,
											"name": "tag",
											"value": "184"
										},
										{
											"begin": 16841,
											"end": 16906,
											"name": "JUMPDEST"
										},
										{
											"begin": 16928,
											"end": 16940,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 16928,
											"end": 16940,
											"name": "SLOAD"
										},
										{
											"begin": 16928,
											"end": 16952,
											"name": "PUSH [tag]",
											"value": "185"
										},
										{
											"begin": 16928,
											"end": 16952,
											"name": "SWAP1"
										},
										{
											"begin": 16945,
											"end": 16951,
											"name": "DUP3"
										},
										{
											"begin": 16928,
											"end": 16952,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16928,
											"end": 16944,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 16928,
											"end": 16952,
											"name": "AND"
										},
										{
											"begin": 16928,
											"end": 16952,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16928,
											"end": 16952,
											"name": "tag",
											"value": "185"
										},
										{
											"begin": 16928,
											"end": 16952,
											"name": "JUMPDEST"
										},
										{
											"begin": 16913,
											"end": 16925,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 16913,
											"end": 16952,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16979,
											"end": 16997,
											"name": "DUP3"
										},
										{
											"begin": 16979,
											"end": 16997,
											"name": "AND"
										},
										{
											"begin": 16979,
											"end": 16997,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16979,
											"end": 16997,
											"name": "SWAP1"
										},
										{
											"begin": 16979,
											"end": 16997,
											"name": "DUP2"
										},
										{
											"begin": 16979,
											"end": 16997,
											"name": "MSTORE"
										},
										{
											"begin": 16979,
											"end": 16988,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16979,
											"end": 16997,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16979,
											"end": 16997,
											"name": "MSTORE"
										},
										{
											"begin": 16979,
											"end": 16997,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16979,
											"end": 16997,
											"name": "SWAP1"
										},
										{
											"begin": 16979,
											"end": 16997,
											"name": "KECCAK256"
										},
										{
											"begin": 16979,
											"end": 16997,
											"name": "SLOAD"
										},
										{
											"begin": 16979,
											"end": 17009,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 16979,
											"end": 17009,
											"name": "SWAP1"
										},
										{
											"begin": 17002,
											"end": 17008,
											"name": "DUP3"
										},
										{
											"begin": 16979,
											"end": 17009,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16979,
											"end": 17001,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 16979,
											"end": 17009,
											"name": "AND"
										},
										{
											"begin": 16979,
											"end": 17009,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16979,
											"end": 17009,
											"name": "tag",
											"value": "186"
										},
										{
											"begin": 16979,
											"end": 17009,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16958,
											"end": 16976,
											"name": "DUP4"
										},
										{
											"begin": 16958,
											"end": 16976,
											"name": "AND"
										},
										{
											"begin": 16958,
											"end": 16976,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16958,
											"end": 16976,
											"name": "DUP2"
										},
										{
											"begin": 16958,
											"end": 16976,
											"name": "DUP2"
										},
										{
											"begin": 16958,
											"end": 16976,
											"name": "MSTORE"
										},
										{
											"begin": 16958,
											"end": 16967,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16958,
											"end": 16976,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16958,
											"end": 16976,
											"name": "SWAP1"
										},
										{
											"begin": 16958,
											"end": 16976,
											"name": "DUP2"
										},
										{
											"begin": 16958,
											"end": 16976,
											"name": "MSTORE"
										},
										{
											"begin": 16958,
											"end": 16976,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16958,
											"end": 16976,
											"name": "DUP1"
										},
										{
											"begin": 16958,
											"end": 16976,
											"name": "DUP4"
										},
										{
											"begin": 16958,
											"end": 16976,
											"name": "KECCAK256"
										},
										{
											"begin": 16958,
											"end": 17009,
											"name": "SWAP5"
										},
										{
											"begin": 16958,
											"end": 17009,
											"name": "SWAP1"
										},
										{
											"begin": 16958,
											"end": 17009,
											"name": "SWAP5"
										},
										{
											"begin": 16958,
											"end": 17009,
											"name": "SSTORE"
										},
										{
											"begin": 17020,
											"end": 17057,
											"name": "DUP4"
										},
										{
											"begin": 17020,
											"end": 17057,
											"name": "MLOAD"
										},
										{
											"begin": 17020,
											"end": 17057,
											"name": "DUP6"
										},
										{
											"begin": 17020,
											"end": 17057,
											"name": "DUP2"
										},
										{
											"begin": 17020,
											"end": 17057,
											"name": "MSTORE"
										},
										{
											"begin": 17020,
											"end": 17057,
											"name": "SWAP4"
										},
										{
											"begin": 17020,
											"end": 17057,
											"name": "MLOAD"
										},
										{
											"begin": 16958,
											"end": 16976,
											"name": "SWAP3"
										},
										{
											"begin": 16958,
											"end": 16976,
											"name": "SWAP4"
										},
										{
											"begin": 16958,
											"end": 16976,
											"name": "SWAP2"
										},
										{
											"begin": 16958,
											"end": 16976,
											"name": "SWAP3"
										},
										{
											"begin": 17020,
											"end": 17057,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 17020,
											"end": 17057,
											"name": "SWAP3"
										},
										{
											"begin": 17020,
											"end": 17057,
											"name": "DUP2"
										},
										{
											"begin": 17020,
											"end": 17057,
											"name": "SWAP1"
										},
										{
											"begin": 17020,
											"end": 17057,
											"name": "SUB"
										},
										{
											"begin": 17020,
											"end": 17057,
											"name": "SWAP1"
										},
										{
											"begin": 17020,
											"end": 17057,
											"name": "SWAP2"
										},
										{
											"begin": 17020,
											"end": 17057,
											"name": "ADD"
										},
										{
											"begin": 17020,
											"end": 17057,
											"name": "SWAP1"
										},
										{
											"begin": 17020,
											"end": 17057,
											"name": "LOG3"
										},
										{
											"begin": 16778,
											"end": 17062,
											"name": "POP"
										},
										{
											"begin": 16778,
											"end": 17062,
											"name": "POP"
										},
										{
											"begin": 16778,
											"end": 17062,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10819,
											"end": 11030,
											"name": "tag",
											"value": "160"
										},
										{
											"begin": 10819,
											"end": 11030,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10888,
											"end": 10910,
											"name": "DUP2"
										},
										{
											"begin": 10888,
											"end": 10910,
											"name": "AND"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "JUMPI"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "DUP2"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "MSTORE"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "ADD"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "DUP1"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "DUP1"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "ADD"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "DUP3"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "DUP2"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "SUB"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "DUP3"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "MSTORE"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "DUP2"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "MSTORE"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "ADD"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "DUP1"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "PUSH data",
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "SWAP2"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "CODECOPY"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "ADD"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "SWAP2"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "POP"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "POP"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "MLOAD"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "DUP1"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "SWAP2"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "SUB"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "SWAP1"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "REVERT"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "tag",
											"value": "188"
										},
										{
											"begin": 10880,
											"end": 10953,
											"name": "JUMPDEST"
										},
										{
											"begin": 10985,
											"end": 10991,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10985,
											"end": 10991,
											"name": "DUP1"
										},
										{
											"begin": 10985,
											"end": 10991,
											"name": "SLOAD"
										},
										{
											"begin": 10964,
											"end": 11002,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10964,
											"end": 11002,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10964,
											"end": 11002,
											"name": "DUP1"
										},
										{
											"begin": 10964,
											"end": 11002,
											"name": "DUP6"
										},
										{
											"begin": 10964,
											"end": 11002,
											"name": "AND"
										},
										{
											"begin": 10964,
											"end": 11002,
											"name": "SWAP4"
										},
										{
											"begin": 10985,
											"end": 10991,
											"name": "SWAP3"
										},
										{
											"begin": 10985,
											"end": 10991,
											"name": "AND"
										},
										{
											"begin": 10985,
											"end": 10991,
											"name": "SWAP2"
										},
										{
											"begin": 10964,
											"end": 11002,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 10964,
											"end": 11002,
											"name": "SWAP2"
										},
										{
											"begin": 10964,
											"end": 11002,
											"name": "LOG3"
										},
										{
											"begin": 11008,
											"end": 11014,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11008,
											"end": 11025,
											"name": "DUP1"
										},
										{
											"begin": 11008,
											"end": 11025,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 11008,
											"end": 11025,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11008,
											"end": 11025,
											"name": "SWAP3"
										},
										{
											"begin": 11008,
											"end": 11025,
											"name": "SWAP1"
										},
										{
											"begin": 11008,
											"end": 11025,
											"name": "SWAP3"
										},
										{
											"begin": 11008,
											"end": 11025,
											"name": "AND"
										},
										{
											"begin": 11008,
											"end": 11025,
											"name": "SWAP2"
										},
										{
											"begin": 11008,
											"end": 11025,
											"name": "SWAP1"
										},
										{
											"begin": 11008,
											"end": 11025,
											"name": "SWAP2"
										},
										{
											"begin": 11008,
											"end": 11025,
											"name": "OR"
										},
										{
											"begin": 11008,
											"end": 11025,
											"name": "SWAP1"
										},
										{
											"begin": 11008,
											"end": 11025,
											"name": "SSTORE"
										},
										{
											"begin": 10819,
											"end": 11030,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5166,
											"end": 5294,
											"name": "tag",
											"value": "182"
										},
										{
											"begin": 5166,
											"end": 5294,
											"name": "JUMPDEST"
										},
										{
											"begin": 5224,
											"end": 5231,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5246,
											"end": 5289,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 5250,
											"end": 5251,
											"name": "DUP4"
										},
										{
											"begin": 5253,
											"end": 5254,
											"name": "DUP4"
										},
										{
											"begin": 5246,
											"end": 5289,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5246,
											"end": 5289,
											"name": "MLOAD"
										},
										{
											"begin": 5246,
											"end": 5289,
											"name": "DUP1"
										},
										{
											"begin": 5246,
											"end": 5289,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5246,
											"end": 5289,
											"name": "ADD"
										},
										{
											"begin": 5246,
											"end": 5289,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5246,
											"end": 5289,
											"name": "MSTORE"
										},
										{
											"begin": 5246,
											"end": 5289,
											"name": "DUP1"
										},
										{
											"begin": 5246,
											"end": 5289,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 5246,
											"end": 5289,
											"name": "DUP2"
										},
										{
											"begin": 5246,
											"end": 5289,
											"name": "MSTORE"
										},
										{
											"begin": 5246,
											"end": 5289,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5246,
											"end": 5289,
											"name": "ADD"
										},
										{
											"begin": 5246,
											"end": 5289,
											"name": "PUSH",
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 5246,
											"end": 5289,
											"name": "DUP2"
										},
										{
											"begin": 5246,
											"end": 5289,
											"name": "MSTORE"
										},
										{
											"begin": 5246,
											"end": 5289,
											"name": "POP"
										},
										{
											"begin": 5246,
											"end": 5249,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 5246,
											"end": 5289,
											"name": "JUMP",
											"value": "[in]"
										}
									],
									".data": {
										"1441CFBEF485DE93BEDECC35B3D10FA2992DB382C4C9C583A6E423A140ABE4A4": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"ADE9EFCB59E42E439FFE61509B352B1AF56D64CCB68D80B039B7B69578F371D2": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
										"B81EDBF10508D9B81724F18FF8F3D8BFBA9790734CE1F1C54DFE1030B4914855": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
										"D26CF302D50B28DE74BE656B11D67092B32131E5712D1BCF08C4E976DACDA57": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"DEAA84B30175FD0578812C46240362B7914652A35E6707AD7E1556891E4AE032": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
										"F10E7571E18B354270DEE950932FB6A745EFC79414B2B2556185A4ED6A1AF0D5": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"_decimals()": "32424aa3",
							"_name()": "d28d8852",
							"_symbol()": "b09f1266",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getOwner()": "893d20e8",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"_decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {BEP20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {BEP20-approve}.   * Requirements:   * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {BEP20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burn `amount` tokens and decreasing the total supply.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.   * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.   * Emits an {Approval} event indicating the updated allowance.   * Requirements:   * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.   * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.   * Emits an {Approval} event indicating the updated allowance.   * Requirements:   * - `spender` cannot be the zero address.\"},\"mint(uint256)\":{\"details\":\"Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply.   * Requirements   * - `msg.sender` must be the token owner\"},\"name()\":{\"details\":\"Returns the token name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"See {BEP20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {BEP20-transfer}.   * Requirements:   * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {BEP20-transferFrom}.   * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20};   * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"DexSwap/USDT.sol\":\"BEP20USDT\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DexSwap/USDT.sol\":{\"keccak256\":\"0x7248baf995596381df188619f2e9ef448990be6cbfa5065c5bdd96d5f078e1be\",\"urls\":[\"bzz-raw://f8fea12298b01d290699e1e313ba6d5d2bb60bea7f9c5c5c2beecaad17858502\",\"dweb:/ipfs/QmdPLwuyeBp8o5m3NK46r6XiBPxF8BcsXFWk31Ta3dya4p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 302,
								"contract": "DexSwap/USDT.sol:BEP20USDT",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 417,
								"contract": "DexSwap/USDT.sol:BEP20USDT",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 423,
								"contract": "DexSwap/USDT.sol:BEP20USDT",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 425,
								"contract": "DexSwap/USDT.sol:BEP20USDT",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 427,
								"contract": "DexSwap/USDT.sol:BEP20USDT",
								"label": "_decimals",
								"offset": 0,
								"slot": "4",
								"type": "t_uint8"
							},
							{
								"astId": 429,
								"contract": "DexSwap/USDT.sol:BEP20USDT",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 431,
								"contract": "DexSwap/USDT.sol:BEP20USDT",
								"label": "_name",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Context": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"DexSwap/USDT.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DexSwap/USDT.sol\":{\"keccak256\":\"0x7248baf995596381df188619f2e9ef448990be6cbfa5065c5bdd96d5f078e1be\",\"urls\":[\"bzz-raw://f8fea12298b01d290699e1e313ba6d5d2bb60bea7f9c5c5c2beecaad17858502\",\"dweb:/ipfs/QmdPLwuyeBp8o5m3NK46r6XiBPxF8BcsXFWk31Ta3dya4p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.   * This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.   * Returns a boolean value indicating whether the operation succeeded.   * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729   * Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`.   * Returns a boolean value indicating whether the operation succeeded.   * Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.   * Returns a boolean value indicating whether the operation succeeded.   * Emits a {Transfer} event."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.   * This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.   * Returns a boolean value indicating whether the operation succeeded.   * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729   * Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.   * Returns a boolean value indicating whether the operation succeeded.   * Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.   * Returns a boolean value indicating whether the operation succeeded.   * Emits a {Transfer} event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"DexSwap/USDT.sol\":\"IBEP20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DexSwap/USDT.sol\":{\"keccak256\":\"0x7248baf995596381df188619f2e9ef448990be6cbfa5065c5bdd96d5f078e1be\",\"urls\":[\"bzz-raw://f8fea12298b01d290699e1e313ba6d5d2bb60bea7f9c5c5c2beecaad17858502\",\"dweb:/ipfs/QmdPLwuyeBp8o5m3NK46r6XiBPxF8BcsXFWk31Ta3dya4p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. * By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. * By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"DexSwap/USDT.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DexSwap/USDT.sol\":{\"keccak256\":\"0x7248baf995596381df188619f2e9ef448990be6cbfa5065c5bdd96d5f078e1be\",\"urls\":[\"bzz-raw://f8fea12298b01d290699e1e313ba6d5d2bb60bea7f9c5c5c2beecaad17858502\",\"dweb:/ipfs/QmdPLwuyeBp8o5m3NK46r6XiBPxF8BcsXFWk31Ta3dya4p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 302,
								"contract": "DexSwap/USDT.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"DexSwap/USDT.sol\":4535:8829  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"DexSwap/USDT.sol\":4535:8829  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a7231582080843f2e11671dd5d86f41d5ff027ed97b811460e094ed0a27427f85c1ebd2c664736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a7231582080843f2e11671dd5d86f41d5ff027ed97b811460e094ed0a27427f85c1ebd2c664736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 DUP1 DUP5 EXTCODEHASH 0x2E GT PUSH8 0x1DD5D86F41D5FF02 PUSH31 0xD97B811460E094ED0A27427F85C1EBD2C664736F6C63430005100032000000 ",
							"sourceMap": "4535:4294:0:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a7231582080843f2e11671dd5d86f41d5ff027ed97b811460e094ed0a27427f85c1ebd2c664736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 DUP1 DUP5 EXTCODEHASH 0x2E GT PUSH8 0x1DD5D86F41D5FF02 PUSH31 0xD97B811460E094ED0A27427F85C1EBD2C664736F6C63430005100032000000 ",
							"sourceMap": "4535:4294:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4535,
									"end": 8829,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4535,
									"end": 8829,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582080843f2e11671dd5d86f41d5ff027ed97b811460e094ed0a27427f85c1ebd2c664736f6c63430005100032",
									".code": [
										{
											"begin": 4535,
											"end": 8829,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 4535,
											"end": 8829,
											"name": "ADDRESS"
										},
										{
											"begin": 4535,
											"end": 8829,
											"name": "EQ"
										},
										{
											"begin": 4535,
											"end": 8829,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 4535,
											"end": 8829,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4535,
											"end": 8829,
											"name": "MSTORE"
										},
										{
											"begin": 4535,
											"end": 8829,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4535,
											"end": 8829,
											"name": "DUP1"
										},
										{
											"begin": 4535,
											"end": 8829,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"DexSwap/USDT.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DexSwap/USDT.sol\":{\"keccak256\":\"0x7248baf995596381df188619f2e9ef448990be6cbfa5065c5bdd96d5f078e1be\",\"urls\":[\"bzz-raw://f8fea12298b01d290699e1e313ba6d5d2bb60bea7f9c5c5c2beecaad17858502\",\"dweb:/ipfs/QmdPLwuyeBp8o5m3NK46r6XiBPxF8BcsXFWk31Ta3dya4p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"DexSwap/USDT.sol": {
				"ast": {
					"absolutePath": "DexSwap/USDT.sol",
					"exportedSymbols": {
						"BEP20USDT": [
							919
						],
						"Context": [
							113
						],
						"IBEP20": [
							88
						],
						"Ownable": [
							404
						],
						"SafeMath": [
							298
						]
					},
					"id": 920,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "66:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 88,
							"linearizedBaseContracts": [
								88
							],
							"name": "IBEP20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens in existence.",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "197:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "223:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "222:9:0"
									},
									"scope": 88,
									"src": "177:55:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token decimals.",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "329:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 8,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "329:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "328:7:0"
									},
									"scope": 88,
									"src": "286:50:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token symbol.",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "403:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "429:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 13,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "429:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "428:15:0"
									},
									"scope": 88,
									"src": "388:56:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token name.",
									"id": 21,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "505:2:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "531:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 18,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "531:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "530:15:0"
									},
									"scope": 88,
									"src": "492:54:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the bep token owner.",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "618:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "644:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "644:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "643:9:0"
									},
									"scope": 88,
									"src": "601:52:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens owned by `account`.",
									"id": 33,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "747:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "747:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "746:17:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "787:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "787:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "786:9:0"
									},
									"scope": 88,
									"src": "728:68:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from the caller's account to `recipient`.\n   * Returns a boolean value indicating whether the operation succeeded.\n   * Emits a {Transfer} event.",
									"id": 42,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1018:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1037:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1037:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1017:35:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1071:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 39,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1071:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1070:6:0"
									},
									"scope": 88,
									"src": "1000:77:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the remaining number of tokens that `spender` will be\nallowed to spend on behalf of `owner` through {transferFrom}. This is\nzero by default.\n   * This value changes when {approve} or {transferFrom} are called.",
									"id": 51,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1355:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1371:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1371:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1354:33:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1411:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1411:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1410:9:0"
									},
									"scope": 88,
									"src": "1336:84:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   * Returns a boolean value indicating whether the operation succeeded.\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   * Emits an {Approval} event.",
									"id": 60,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2060:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2077:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2077:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2059:33:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2111:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 57,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2111:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2110:6:0"
									},
									"scope": 88,
									"src": "2043:74:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from `sender` to `recipient` using the\nallowance mechanism. `amount` is then deducted from the caller's\nallowance.\n   * Returns a boolean value indicating whether the operation succeeded.\n   * Emits a {Transfer} event.",
									"id": 71,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2426:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2442:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2442:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2461:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2425:51:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2495:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 68,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2495:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2494:6:0"
									},
									"scope": 88,
									"src": "2404:97:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when `value` tokens are moved from one account (`from`) to\nanother (`to`).\n   * Note that `value` may be zero.",
									"id": 79,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2671:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2671:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2693:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2713:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2670:57:0"
									},
									"src": "2656:72:0"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when the allowance of a `spender` for an `owner` is set by\na call to {approve}. `value` is the new allowance.",
									"id": 87,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2892:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2915:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2915:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2940:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2891:63:0"
									},
									"src": "2877:78:0"
								}
							],
							"scope": 920,
							"src": "91:2866:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 113,
							"linearizedBaseContracts": [
								113
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "3654:3:0",
										"statements": []
									},
									"documentation": null,
									"id": 92,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3642:2:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3654:0:0"
									},
									"scope": 113,
									"src": "3630:27:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "3723:28:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 97,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 934,
														"src": "3736:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "3736:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 96,
												"id": 99,
												"nodeType": "Return",
												"src": "3729:17:0"
											}
										]
									},
									"documentation": null,
									"id": 101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3680:2:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "3706:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3706:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3705:17:0"
									},
									"scope": 113,
									"src": "3661:90:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "3812:155:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 106,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 950,
													"src": "3818:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$113",
														"typeString": "contract Context"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "3818:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 108,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 934,
														"src": "3954:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "3954:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 105,
												"id": 110,
												"nodeType": "Return",
												"src": "3947:15:0"
											}
										]
									},
									"documentation": null,
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3772:2:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "3798:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 103,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3798:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3797:14:0"
									},
									"scope": 113,
									"src": "3755:212:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 920,
							"src": "3459:510:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.",
							"fullyImplemented": true,
							"id": 298,
							"linearizedBaseContracts": [
								298
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 137,
										"nodeType": "Block",
										"src": "4827:95:0",
										"statements": [
											{
												"assignments": [
													123
												],
												"declarations": [
													{
														"constant": false,
														"id": 123,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 137,
														"src": "4833:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 122,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4833:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 127,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 124,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "4845:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 125,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 117,
														"src": "4849:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4845:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4833:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 129,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "4864:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 130,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "4869:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4864:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4872:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "4856:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4856:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "4856:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 135,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 123,
													"src": "4916:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 121,
												"id": 136,
												"nodeType": "Return",
												"src": "4909:8:0"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n   * Counterpart to Solidity's `+` operator.\n   * Requirements:\n- Addition cannot overflow.",
									"id": 138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4773:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4773:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4784:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4784:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4772:22:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4818:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4818:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4817:9:0"
									},
									"scope": 298,
									"src": "4760:162:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "5233:61:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 148,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "5250:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 149,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "5253:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 147,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															154,
															181
														],
														"referencedDeclaration": 181,
														"src": "5246:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5246:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 146,
												"id": 152,
												"nodeType": "Return",
												"src": "5239:50:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n   * Counterpart to Solidity's `-` operator.\n   * Requirements:\n- Subtraction cannot overflow.",
									"id": 154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5179:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5179:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5190:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5190:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5178:22:0"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5224:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5224:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5223:9:0"
									},
									"scope": 298,
									"src": "5166:128:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "5653:78:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 166,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "5667:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 167,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "5672:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5667:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 169,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "5675:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 165,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "5659:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5659:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "5659:29:0"
											},
											{
												"assignments": [
													173
												],
												"declarations": [
													{
														"constant": false,
														"id": 173,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 180,
														"src": "5694:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 172,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5694:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 177,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 174,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "5706:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 175,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "5710:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5706:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5694:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 178,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 173,
													"src": "5725:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 164,
												"id": 179,
												"nodeType": "Return",
												"src": "5718:8:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n   * Counterpart to Solidity's `-` operator.\n   * Requirements:\n- Subtraction cannot overflow.",
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5571:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5571:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5582:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5582:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5593:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 159,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5593:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5570:50:0"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5644:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5644:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5643:9:0"
									},
									"scope": 298,
									"src": "5558:173:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "6018:352:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 190,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "6234:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6239:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6234:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 196,
												"nodeType": "IfStatement",
												"src": "6230:35:0",
												"trueBody": {
													"id": 195,
													"nodeType": "Block",
													"src": "6242:23:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6257:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 189,
															"id": 194,
															"nodeType": "Return",
															"src": "6250:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 214,
														"src": "6271:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 197,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6271:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 199,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "6283:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 200,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "6287:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6283:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6271:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 204,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 198,
																	"src": "6302:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 205,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "6306:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6302:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 207,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "6311:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6302:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6314:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 203,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "6294:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6294:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "6294:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 212,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 198,
													"src": "6364:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 189,
												"id": 213,
												"nodeType": "Return",
												"src": "6357:8:0"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n   * Counterpart to Solidity's `*` operator.\n   * Requirements:\n- Multiplication cannot overflow.",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "5964:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5964:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "5975:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5975:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5963:22:0"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "6009:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6009:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6008:9:0"
									},
									"scope": 298,
									"src": "5951:419:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "6868:57:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 225,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "6885:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 226,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "6888:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6891:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 224,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															231,
															258
														],
														"referencedDeclaration": 258,
														"src": "6881:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6881:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 223,
												"id": 229,
												"nodeType": "Return",
												"src": "6874:46:0"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "6814:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6814:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "6825:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6825:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6813:22:0"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "6859:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6859:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6858:9:0"
									},
									"scope": 298,
									"src": "6801:124:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "7471:221:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 243,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "7547:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7551:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7547:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 246,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "7554:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 242,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "7539:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7539:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 248,
												"nodeType": "ExpressionStatement",
												"src": "7539:28:0"
											},
											{
												"assignments": [
													250
												],
												"declarations": [
													{
														"constant": false,
														"id": 250,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 257,
														"src": "7573:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 249,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7573:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 254,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 251,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "7585:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 252,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 235,
														"src": "7589:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7585:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7573:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 255,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 250,
													"src": "7686:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 241,
												"id": 256,
												"nodeType": "Return",
												"src": "7679:8:0"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts with custom message on\ndivision by zero. The result is rounded towards zero.\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7389:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7389:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7400:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7400:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7411:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 236,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7411:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7388:50:0"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7462:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7462:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7461:9:0"
									},
									"scope": 298,
									"src": "7376:316:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 273,
										"nodeType": "Block",
										"src": "8179:55:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 268,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "8196:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 269,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "8199:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8202:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 267,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															274,
															297
														],
														"referencedDeclaration": 297,
														"src": "8192:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8192:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 266,
												"id": 272,
												"nodeType": "Return",
												"src": "8185:44:0"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8125:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8125:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8136:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8136:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8124:22:0"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8170:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8170:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8169:9:0"
									},
									"scope": 298,
									"src": "8112:122:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "8769:58:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 286,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "8783:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8788:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8783:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 289,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "8791:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 285,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "8775:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8775:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "8775:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 292,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "8817:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 293,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "8821:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8817:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 284,
												"id": 295,
												"nodeType": "Return",
												"src": "8810:12:0"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts with custom message when dividing by zero.\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8687:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8698:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8698:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8709:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 279,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8709:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8686:50:0"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8760:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8760:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8759:9:0"
									},
									"scope": 298,
									"src": "8674:153:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 920,
							"src": "4535:4294:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 299,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 113,
										"src": "9346:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$113",
											"typeString": "contract Context"
										}
									},
									"id": 300,
									"nodeType": "InheritanceSpecifier",
									"src": "9346:7:0"
								}
							],
							"contractDependencies": [
								113
							],
							"contractKind": "contract",
							"documentation": "@dev Contract module which provides a basic access control mechanism, where\nthere is an account (an owner) that can be granted exclusive access to\nspecific functions.\n * By default, the owner account will be the one that deploys the contract. This\ncan later be changed with {transferOwnership}.\n * This module is used through inheritance. It will make available the modifier\n`onlyOwner`, which can be applied to your functions to restrict their use to\nthe owner.",
							"fullyImplemented": true,
							"id": 404,
							"linearizedBaseContracts": [
								404,
								113
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 302,
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 404,
									"src": "9358:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 301,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "9358:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 308,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"indexed": true,
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "9412:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9412:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"indexed": true,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "9443:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9443:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9411:57:0"
									},
									"src": "9385:84:0"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "9587:121:0",
										"statements": [
											{
												"assignments": [
													312
												],
												"declarations": [
													{
														"constant": false,
														"id": 312,
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"scope": 327,
														"src": "9593:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 311,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9593:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 315,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 313,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "9613:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9613:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9593:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 316,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "9631:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 317,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "9640:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9631:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "9631:18:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9689:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9681:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9681:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 324,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "9693:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 320,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "9660:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9660:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 326,
												"nodeType": "EmitStatement",
												"src": "9655:48:0"
											}
										]
									},
									"documentation": "@dev Initializes the contract setting the deployer as the initial owner.",
									"id": 328,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9575:2:0"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9587:0:0"
									},
									"scope": 404,
									"src": "9563:145:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "9823:24:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 333,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 302,
													"src": "9836:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 332,
												"id": 334,
												"nodeType": "Return",
												"src": "9829:13:0"
											}
										]
									},
									"documentation": "@dev Returns the address of the current owner.",
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9790:2:0"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "9814:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9814:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9813:9:0"
									},
									"scope": 404,
									"src": "9776:71:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "9948:85:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 339,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "9962:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 340,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 101,
																	"src": "9972:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9972:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9962:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9986:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 338,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "9954:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9954:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 345,
												"nodeType": "ExpressionStatement",
												"src": "9954:67:0"
											},
											{
												"id": 346,
												"nodeType": "PlaceholderStatement",
												"src": "10027:1:0"
											}
										]
									},
									"documentation": "@dev Throws if called by any account other than the owner.",
									"id": 348,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9945:2:0"
									},
									"src": "9927:106:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "10405:81:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 354,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "10437:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10453:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10445:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10445:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 353,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "10416:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10416:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 359,
												"nodeType": "EmitStatement",
												"src": "10411:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 360,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "10462:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10479:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10471:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10471:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "10462:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 365,
												"nodeType": "ExpressionStatement",
												"src": "10462:19:0"
											}
										]
									},
									"documentation": "@dev Leaves the contract without owner. It will not be possible to call\n`onlyOwner` functions anymore. Can only be called by the current owner.\n   * NOTE: Renouncing ownership will leave the contract without an owner,\nthereby removing any functionality that is only available to the owner.",
									"id": 367,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 351,
											"modifierName": {
												"argumentTypes": null,
												"id": 350,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 348,
												"src": "10395:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10395:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10385:2:0"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10405:0:0"
									},
									"scope": 404,
									"src": "10359:127:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 378,
										"nodeType": "Block",
										"src": "10687:39:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 375,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "10712:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 374,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "10693:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10693:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "10693:28:0"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).\nCan only be called by the current owner.",
									"id": 379,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 372,
											"modifierName": {
												"argumentTypes": null,
												"id": 371,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 348,
												"src": "10677:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10677:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "10652:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10651:18:0"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10687:0:0"
									},
									"scope": 404,
									"src": "10625:101:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "10874:156:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 385,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "10888:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10908:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10900:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10900:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "10888:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10912:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 384,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "10880:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10880:73:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "ExpressionStatement",
												"src": "10880:73:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 394,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "10985:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 395,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "10993:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 393,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "10964:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10964:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 397,
												"nodeType": "EmitStatement",
												"src": "10959:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 398,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "11008:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 399,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "11017:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11008:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "11008:17:0"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).",
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "10847:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10847:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10846:18:0"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10874:0:0"
									},
									"scope": 404,
									"src": "10819:211:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 920,
							"src": "9326:1706:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 405,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 113,
										"src": "11056:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$113",
											"typeString": "contract Context"
										}
									},
									"id": 406,
									"nodeType": "InheritanceSpecifier",
									"src": "11056:7:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 407,
										"name": "IBEP20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 88,
										"src": "11065:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$88",
											"typeString": "contract IBEP20"
										}
									},
									"id": 408,
									"nodeType": "InheritanceSpecifier",
									"src": "11065:6:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 409,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 404,
										"src": "11073:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$404",
											"typeString": "contract Ownable"
										}
									},
									"id": 410,
									"nodeType": "InheritanceSpecifier",
									"src": "11073:7:0"
								}
							],
							"contractDependencies": [
								88,
								113,
								404
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 919,
							"linearizedBaseContracts": [
								919,
								404,
								88,
								113
							],
							"name": "BEP20USDT",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 413,
									"libraryName": {
										"contractScope": null,
										"id": 411,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 298,
										"src": "11091:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$298",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "11085:27:0",
									"typeName": {
										"id": 412,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11104:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 417,
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 919,
									"src": "11116:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 416,
										"keyType": {
											"id": 414,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11125:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11116:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 415,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "11136:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 423,
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 919,
									"src": "11167:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 422,
										"keyType": {
											"id": 418,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11176:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11167:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 421,
											"keyType": {
												"id": 419,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "11196:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "11187:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 420,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "11207:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 425,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 919,
									"src": "11241:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 424,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11241:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 427,
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 919,
									"src": "11273:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 426,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "11273:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 429,
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 919,
									"src": "11299:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 428,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "11299:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 431,
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 919,
									"src": "11324:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 430,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "11324:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "11369:211:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 434,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "11375:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "5a436861696e20555344",
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11383:12:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_d4008e8b7a04fccd4f6b5b28d0eb1ecb133e1ed46353de6746dc1c3563c84148",
															"typeString": "literal_string \"ZChain USD\""
														},
														"value": "ZChain USD"
													},
													"src": "11375:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 437,
												"nodeType": "ExpressionStatement",
												"src": "11375:20:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 438,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "11401:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "5553445a",
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11411:6:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_eb62b0f6741469808a6a06ddb9d9e13bfb841c306d4a790d59dda96cd4373c10",
															"typeString": "literal_string \"USDZ\""
														},
														"value": "USDZ"
													},
													"src": "11401:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "11401:16:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 442,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "11423:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3138",
														"id": 443,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11435:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "11423:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "11423:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 446,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "11443:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000000000000"
														},
														"id": 451,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "31303030303030303030",
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11458:10:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000_by_1",
																"typeString": "int_const 1000000000"
															},
															"value": "1000000000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "3130",
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11469:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3138",
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11473:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "11469:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "11458:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000000000000"
														}
													},
													"src": "11443:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 453,
												"nodeType": "ExpressionStatement",
												"src": "11443:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 454,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "11481:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 457,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 455,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 934,
																"src": "11491:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "11491:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11481:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 458,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "11505:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11481:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 460,
												"nodeType": "ExpressionStatement",
												"src": "11481:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11546:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 462,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11538:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11538:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 465,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 934,
																"src": "11550:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "11550:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 467,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "11562:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 461,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "11529:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11529:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 469,
												"nodeType": "EmitStatement",
												"src": "11524:51:0"
											}
										]
									},
									"documentation": null,
									"id": 471,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11359:2:0"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11369:0:0"
									},
									"scope": 919,
									"src": "11348:232:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "11687:25:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 476,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "11700:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11700:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 475,
												"id": 478,
												"nodeType": "Return",
												"src": "11693:14:0"
											}
										]
									},
									"documentation": "@dev Returns the bep token owner.",
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11652:2:0"
									},
									"returnParameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "11678:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11678:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11677:9:0"
									},
									"scope": 919,
									"src": "11635:77:0",
									"stateMutability": "view",
									"superFunction": 26,
									"visibility": "external"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "11816:27:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 485,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 427,
													"src": "11829:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 484,
												"id": 486,
												"nodeType": "Return",
												"src": "11822:16:0"
											}
										]
									},
									"documentation": "@dev Returns the token decimals.",
									"id": 488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11783:2:0"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "11809:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 482,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "11809:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11808:7:0"
									},
									"scope": 919,
									"src": "11766:77:0",
									"stateMutability": "view",
									"superFunction": 11,
									"visibility": "external"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "11951:25:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 493,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 429,
													"src": "11964:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 492,
												"id": 494,
												"nodeType": "Return",
												"src": "11957:14:0"
											}
										]
									},
									"documentation": "@dev Returns the token symbol.",
									"id": 496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11910:2:0"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "11936:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 490,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11936:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11935:15:0"
									},
									"scope": 919,
									"src": "11895:81:0",
									"stateMutability": "view",
									"superFunction": 16,
									"visibility": "external"
								},
								{
									"body": {
										"id": 503,
										"nodeType": "Block",
										"src": "12078:23:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 501,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 431,
													"src": "12091:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 500,
												"id": 502,
												"nodeType": "Return",
												"src": "12084:12:0"
											}
										]
									},
									"documentation": "@dev Returns the token name.",
									"id": 504,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12037:2:0"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "12063:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 498,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12063:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12062:15:0"
									},
									"scope": 919,
									"src": "12024:77:0",
									"stateMutability": "view",
									"superFunction": 21,
									"visibility": "external"
								},
								{
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "12207:30:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 509,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 425,
													"src": "12220:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 508,
												"id": 510,
												"nodeType": "Return",
												"src": "12213:19:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-totalSupply}.",
									"id": 512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12172:2:0"
									},
									"returnParameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "12198:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12198:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12197:9:0"
									},
									"scope": 919,
									"src": "12152:85:0",
									"stateMutability": "view",
									"superFunction": 6,
									"visibility": "external"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "12354:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 519,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "12367:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 521,
													"indexExpression": {
														"argumentTypes": null,
														"id": 520,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "12377:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12367:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 518,
												"id": 522,
												"nodeType": "Return",
												"src": "12360:25:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-balanceOf}.",
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "12305:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12305:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12304:17:0"
									},
									"returnParameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "12345:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12345:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12344:9:0"
									},
									"scope": 919,
									"src": "12286:104:0",
									"stateMutability": "view",
									"superFunction": 33,
									"visibility": "external"
								},
								{
									"body": {
										"id": 542,
										"nodeType": "Block",
										"src": "12651:70:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 534,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "12667:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12667:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 536,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "12681:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 537,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "12692:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 533,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "12657:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12657:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 539,
												"nodeType": "ExpressionStatement",
												"src": "12657:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12712:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 532,
												"id": 541,
												"nodeType": "Return",
												"src": "12705:11:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-transfer}.\n   * Requirements:\n   * - `recipient` cannot be the zero address.\n- the caller must have a balance of at least `amount`.",
									"id": 543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "12592:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12592:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "12611:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12611:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12591:35:0"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "12645:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 530,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12645:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12644:6:0"
									},
									"scope": 919,
									"src": "12574:147:0",
									"stateMutability": "nonpayable",
									"superFunction": 42,
									"visibility": "external"
								},
								{
									"body": {
										"id": 558,
										"nodeType": "Block",
										"src": "12853:45:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 552,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "12866:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 554,
														"indexExpression": {
															"argumentTypes": null,
															"id": 553,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "12878:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12866:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 556,
													"indexExpression": {
														"argumentTypes": null,
														"id": 555,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "12885:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12866:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 551,
												"id": 557,
												"nodeType": "Return",
												"src": "12859:34:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-allowance}.",
									"id": 559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "12789:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12789:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "12804:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12804:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12788:32:0"
									},
									"returnParameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "12844:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12844:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12843:9:0"
									},
									"scope": 919,
									"src": "12770:128:0",
									"stateMutability": "view",
									"superFunction": 51,
									"visibility": "external"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "13093:67:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 569,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "13108:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13108:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 571,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "13122:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 572,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "13131:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 568,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "13099:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13099:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 574,
												"nodeType": "ExpressionStatement",
												"src": "13099:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13151:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 567,
												"id": 576,
												"nodeType": "Return",
												"src": "13144:11:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-approve}.\n   * Requirements:\n   * - `spender` cannot be the zero address.",
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "13036:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13036:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "13053:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13053:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13035:33:0"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "13087:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 565,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13087:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13086:6:0"
									},
									"scope": 919,
									"src": "13019:141:0",
									"stateMutability": "nonpayable",
									"superFunction": 60,
									"visibility": "external"
								},
								{
									"body": {
										"id": 613,
										"nodeType": "Block",
										"src": "13688:191:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 590,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "13704:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 591,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "13712:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 592,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "13723:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 589,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "13694:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13694:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 594,
												"nodeType": "ExpressionStatement",
												"src": "13694:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 596,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "13745:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 597,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "13753:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13753:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 606,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 584,
																	"src": "13805:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13813:42:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	},
																	"value": "BEP20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 599,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "13767:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 601,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 600,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 580,
																			"src": "13779:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "13767:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 604,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 602,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 101,
																			"src": "13787:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13787:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "13767:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "13767:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13767:89:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 595,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "13736:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13736:121:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 610,
												"nodeType": "ExpressionStatement",
												"src": "13736:121:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13870:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 588,
												"id": 612,
												"nodeType": "Return",
												"src": "13863:11:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-transferFrom}.\n   * Emits an {Approval} event indicating the updated allowance. This is not\nrequired by the EIP. See the note at the beginning of {BEP20};\n   * Requirements:\n- `sender` and `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.\n- the caller must have allowance for `sender`'s tokens of at least\n`amount`.",
									"id": 614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "13613:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13613:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "13629:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13629:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "13648:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13648:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13612:51:0"
									},
									"returnParameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "13682:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 586,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13682:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13681:6:0"
									},
									"scope": 919,
									"src": "13591:288:0",
									"stateMutability": "nonpayable",
									"superFunction": 71,
									"visibility": "external"
								},
								{
									"body": {
										"id": 640,
										"nodeType": "Block",
										"src": "14333:111:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 624,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "14348:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14348:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 626,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "14362:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 634,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 618,
																	"src": "14410:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 627,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "14371:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 630,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 628,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 101,
																				"src": "14383:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 629,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14383:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14371:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 632,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 631,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 616,
																		"src": "14397:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14371:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 633,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 138,
																"src": "14371:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14371:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 623,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "14339:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14339:83:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "14339:83:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 638,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14435:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 622,
												"id": 639,
												"nodeType": "Return",
												"src": "14428:11:0"
											}
										]
									},
									"documentation": "@dev Atomically increases the allowance granted to `spender` by the caller.\n   * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {BEP20-approve}.\n   * Emits an {Approval} event indicating the updated allowance.\n   * Requirements:\n   * - `spender` cannot be the zero address.",
									"id": 641,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "14274:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14274:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "14291:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14291:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14273:37:0"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "14327:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 620,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14327:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14326:6:0"
									},
									"scope": 919,
									"src": "14247:197:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 668,
										"nodeType": "Block",
										"src": "14991:157:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 651,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "15006:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15006:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 653,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "15020:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 661,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 645,
																	"src": "15068:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15085:39:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	},
																	"value": "BEP20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 654,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "15029:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 657,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 655,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 101,
																				"src": "15041:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 656,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15041:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "15029:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 659,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 658,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 643,
																		"src": "15055:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "15029:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 660,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "15029:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15029:96:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 650,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "14997:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14997:129:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 665,
												"nodeType": "ExpressionStatement",
												"src": "14997:129:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15139:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 649,
												"id": 667,
												"nodeType": "Return",
												"src": "15132:11:0"
											}
										]
									},
									"documentation": "@dev Atomically decreases the allowance granted to `spender` by the caller.\n   * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {BEP20-approve}.\n   * Emits an {Approval} event indicating the updated allowance.\n   * Requirements:\n   * - `spender` cannot be the zero address.\n- `spender` must have allowance for the caller of at least\n`subtractedValue`.",
									"id": 669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "14927:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14927:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "14944:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14944:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14926:42:0"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "14985:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 647,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14985:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14984:6:0"
									},
									"scope": 919,
									"src": "14900:248:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 686,
										"nodeType": "Block",
										"src": "15400:55:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 679,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "15412:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15412:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 681,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "15426:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 678,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "15406:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15406:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 683,
												"nodeType": "ExpressionStatement",
												"src": "15406:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15446:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 677,
												"id": 685,
												"nodeType": "Return",
												"src": "15439:11:0"
											}
										]
									},
									"documentation": "@dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\nthe total supply.\n   * Requirements\n   * - `msg.sender` must be the token owner",
									"id": 687,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 674,
											"modifierName": {
												"argumentTypes": null,
												"id": 673,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 348,
												"src": "15375:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "15375:9:0"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "15352:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15352:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15351:16:0"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "15394:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 675,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15394:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15393:6:0"
									},
									"scope": 919,
									"src": "15338:117:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "15587:55:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 695,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "15599:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15599:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 697,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "15613:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 694,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 847,
														"src": "15593:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15593:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 699,
												"nodeType": "ExpressionStatement",
												"src": "15593:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15633:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 693,
												"id": 701,
												"nodeType": "Return",
												"src": "15626:11:0"
											}
										]
									},
									"documentation": "@dev Burn `amount` tokens and decreasing the total supply.",
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "15549:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15549:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15548:16:0"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "15581:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 691,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15581:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15580:6:0"
									},
									"scope": 919,
									"src": "15535:107:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "16165:363:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 713,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 705,
																"src": "16179:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 715,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16197:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16189:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 716,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16189:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "16179:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 718,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16201:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															},
															"value": "BEP20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															}
														],
														"id": 712,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "16171:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16171:70:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 720,
												"nodeType": "ExpressionStatement",
												"src": "16171:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 722,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 707,
																"src": "16255:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16276:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 723,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16268:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16268:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "16255:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 727,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16280:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															},
															"value": "BEP20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															}
														],
														"id": 721,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "16247:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16247:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 729,
												"nodeType": "ExpressionStatement",
												"src": "16247:71:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 730,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "16325:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 732,
														"indexExpression": {
															"argumentTypes": null,
															"id": 731,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "16335:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16325:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 737,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 709,
																"src": "16367:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 738,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16375:40:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																},
																"value": "BEP20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 733,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "16345:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 735,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 734,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 705,
																	"src": "16355:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16345:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 181,
															"src": "16345:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 739,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16345:71:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16325:91:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 741,
												"nodeType": "ExpressionStatement",
												"src": "16325:91:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 742,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "16422:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 744,
														"indexExpression": {
															"argumentTypes": null,
															"id": 743,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "16432:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16422:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 749,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 709,
																"src": "16470:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 745,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "16445:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 747,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 746,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 707,
																	"src": "16455:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16445:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 138,
															"src": "16445:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 750,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16445:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16422:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 752,
												"nodeType": "ExpressionStatement",
												"src": "16422:55:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 754,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "16497:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 755,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "16505:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 756,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "16516:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 753,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "16488:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16488:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 758,
												"nodeType": "EmitStatement",
												"src": "16483:40:0"
											}
										]
									},
									"documentation": "@dev Moves tokens `amount` from `sender` to `recipient`.\n   * This is internal function is equivalent to {transfer}, and can be used to\ne.g. implement automatic token fees, slashing mechanisms, etc.\n   * Emits a {Transfer} event.\n   * Requirements:\n   * - `sender` cannot be the zero address.\n- `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.",
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "16105:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16105:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "16121:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16121:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "16140:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16140:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16104:51:0"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16165:0:0"
									},
									"scope": 919,
									"src": "16086:442:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "16835:227:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 768,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 762,
																"src": "16849:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 770,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16868:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16860:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16860:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "16849:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16872:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															},
															"value": "BEP20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															}
														],
														"id": 767,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "16841:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16841:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 775,
												"nodeType": "ExpressionStatement",
												"src": "16841:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 776,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "16913:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 779,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 764,
																"src": "16945:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 777,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "16928:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 138,
															"src": "16928:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 780,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16928:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16913:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 782,
												"nodeType": "ExpressionStatement",
												"src": "16913:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 783,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "16958:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 785,
														"indexExpression": {
															"argumentTypes": null,
															"id": 784,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "16968:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16958:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 790,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 764,
																"src": "17002:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 786,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "16979:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 788,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 787,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "16989:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16979:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 138,
															"src": "16979:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 791,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16979:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16958:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 793,
												"nodeType": "ExpressionStatement",
												"src": "16958:51:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17037:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17029:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17029:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 798,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "17041:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 799,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 764,
															"src": "17050:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 794,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "17020:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17020:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 801,
												"nodeType": "EmitStatement",
												"src": "17015:42:0"
											}
										]
									},
									"documentation": "@dev Creates `amount` tokens and assigns them to `account`, increasing\nthe total supply.\n   * Emits a {Transfer} event with `from` set to the zero address.\n   * Requirements\n   * - `to` cannot be the zero address.",
									"id": 803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "16793:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16793:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "16810:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16810:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16792:33:0"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16835:0:0"
									},
									"scope": 919,
									"src": "16778:284:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 846,
										"nodeType": "Block",
										"src": "17414:267:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 811,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 805,
																"src": "17428:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17447:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17439:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 814,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17439:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "17428:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17451:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															},
															"value": "BEP20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															}
														],
														"id": 810,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "17420:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17420:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 818,
												"nodeType": "ExpressionStatement",
												"src": "17420:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 819,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "17494:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 821,
														"indexExpression": {
															"argumentTypes": null,
															"id": 820,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "17504:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17494:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 826,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 807,
																"src": "17538:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17546:36:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																},
																"value": "BEP20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 822,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "17515:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 824,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 823,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 805,
																	"src": "17525:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17515:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 825,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 181,
															"src": "17515:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 828,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17515:68:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17494:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 830,
												"nodeType": "ExpressionStatement",
												"src": "17494:89:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 831,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "17589:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 834,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 807,
																"src": "17621:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 832,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "17604:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 154,
															"src": "17604:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 835,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17604:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17589:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 837,
												"nodeType": "ExpressionStatement",
												"src": "17589:39:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 839,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "17648:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17665:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 840,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17657:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17657:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 843,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "17669:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 838,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "17639:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17639:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 845,
												"nodeType": "EmitStatement",
												"src": "17634:42:0"
											}
										]
									},
									"documentation": "@dev Destroys `amount` tokens from `account`, reducing the\ntotal supply.\n   * Emits a {Transfer} event with `to` set to the zero address.\n   * Requirements\n   * - `account` cannot be the zero address.\n- `account` must have at least `amount` tokens.",
									"id": 847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "17372:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17372:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "17389:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17389:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17371:33:0"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17414:0:0"
									},
									"scope": 919,
									"src": "17357:324:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 888,
										"nodeType": "Block",
										"src": "18153:239:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 857,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 849,
																"src": "18167:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 859,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18184:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18176:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 860,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18176:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "18167:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18188:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															},
															"value": "BEP20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															}
														],
														"id": 856,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "18159:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18159:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 864,
												"nodeType": "ExpressionStatement",
												"src": "18159:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 866,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 851,
																"src": "18241:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18260:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18252:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18252:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "18241:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18264:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															},
															"value": "BEP20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															}
														],
														"id": 865,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "18233:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18233:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 873,
												"nodeType": "ExpressionStatement",
												"src": "18233:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 874,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "18308:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 877,
															"indexExpression": {
																"argumentTypes": null,
																"id": 875,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 849,
																"src": "18320:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18308:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 878,
														"indexExpression": {
															"argumentTypes": null,
															"id": 876,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "18327:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18308:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 879,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "18338:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18308:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 881,
												"nodeType": "ExpressionStatement",
												"src": "18308:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 883,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "18364:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 884,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "18371:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 885,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "18380:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 882,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "18355:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18355:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 887,
												"nodeType": "EmitStatement",
												"src": "18350:37:0"
											}
										]
									},
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n   * This is internal function is equivalent to `approve`, and can be used to\ne.g. set automatic allowances for certain subsystems, etc.\n   * Emits an {Approval} event.\n   * Requirements:\n   * - `owner` cannot be the zero address.\n- `spender` cannot be the zero address.",
									"id": 889,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "18096:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18096:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "18111:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 850,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18111:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "18128:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18128:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18095:48:0"
									},
									"returnParameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18153:0:0"
									},
									"scope": 919,
									"src": "18078:314:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 917,
										"nodeType": "Block",
										"src": "18617:158:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 897,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "18629:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 898,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "18638:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 896,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 847,
														"src": "18623:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18623:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 900,
												"nodeType": "ExpressionStatement",
												"src": "18623:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 902,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "18660:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 903,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "18669:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 904,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18669:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 912,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 893,
																	"src": "18722:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18730:38:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	},
																	"value": "BEP20: burn amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 905,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "18683:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 907,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 906,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 891,
																			"src": "18695:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "18683:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 910,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 908,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 101,
																			"src": "18704:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 909,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18704:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "18683:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 911,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "18683:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18683:86:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 901,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "18651:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18651:119:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 916,
												"nodeType": "ExpressionStatement",
												"src": "18651:119:0"
											}
										]
									},
									"documentation": "@dev Destroys `amount` tokens from `account`.`amount` is then deducted\nfrom the caller's allowance.\n   * See {_burn} and {_approve}.",
									"id": 918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "18575:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18575:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "18592:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18592:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18574:33:0"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18617:0:0"
									},
									"scope": 919,
									"src": "18556:219:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 920,
							"src": "11034:7743:0"
						}
					],
					"src": "66:18711:0"
				},
				"id": 0
			}
		}
	}
}