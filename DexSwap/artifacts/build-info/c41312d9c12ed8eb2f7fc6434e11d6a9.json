{
	"id": "c41312d9c12ed8eb2f7fc6434e11d6a9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.16",
	"solcLongVersion": "0.5.16+commit.9c3226ce",
	"input": {
		"language": "Solidity",
		"sources": {
			"DexSwap/DexPair.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity =0.5.16;\n\nimport './interfaces/IPancakePair.sol';\nimport './PancakeERC20.sol';\nimport './libraries/Math.sol';\nimport './libraries/UQ112x112.sol';\nimport './interfaces/IERC20.sol';\nimport './interfaces/IPancakeFactory.sol';\nimport './interfaces/IPancakeCallee.sol';\n\ncontract DexPair is IPancakePair, PancakeERC20 {\n    using SafeMath  for uint;\n    using UQ112x112 for uint224;\n\n    uint public constant MINIMUM_LIQUIDITY = 10**3;\n    bytes4 private constant SELECTOR = bytes4(keccak256(bytes('transfer(address,uint256)')));\n\n    address public factory;\n    address public token0;\n    address public token1;\n\n    uint112 private reserve0;           // uses single storage slot, accessible via getReserves\n    uint112 private reserve1;           // uses single storage slot, accessible via getReserves\n    uint32  private blockTimestampLast; // uses single storage slot, accessible via getReserves\n\n    uint public price0CumulativeLast;\n    uint public price1CumulativeLast;\n    uint public kLast; // reserve0 * reserve1, as of immediately after the most recent liquidity event\n\n    uint private unlocked = 1;\n    modifier lock() {\n        require(unlocked == 1, 'Pancake: LOCKED');\n        unlocked = 0;\n        _;\n        unlocked = 1;\n    }\n\n    function getReserves() public view returns (uint112 _reserve0, uint112 _reserve1, uint32 _blockTimestampLast) {\n        _reserve0 = reserve0;\n        _reserve1 = reserve1;\n        _blockTimestampLast = blockTimestampLast;\n    }\n\n    function _safeTransfer(address token, address to, uint value) private {\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(SELECTOR, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'Pancake: TRANSFER_FAILED');\n    }\n\n    event Mint(address indexed sender, uint amount0, uint amount1);\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\n    event Swap(\n        address indexed sender,\n        uint amount0In,\n        uint amount1In,\n        uint amount0Out,\n        uint amount1Out,\n        address indexed to\n    );\n    event Sync(uint112 reserve0, uint112 reserve1);\n\n    constructor() public {\n        factory = msg.sender;\n    }\n\n    // called once by the factory at time of deployment\n    function initialize(address _token0, address _token1) external {\n        require(msg.sender == factory, 'Pancake: FORBIDDEN'); // sufficient check\n        token0 = _token0;\n        token1 = _token1;\n    }\n\n    // update reserves and, on the first call per block, price accumulators\n    function _update(uint balance0, uint balance1, uint112 _reserve0, uint112 _reserve1) private {\n        require(balance0 <= uint112(-1) && balance1 <= uint112(-1), 'Pancake: OVERFLOW');\n        uint32 blockTimestamp = uint32(block.timestamp % 2**32);\n        uint32 timeElapsed = blockTimestamp - blockTimestampLast; // overflow is desired\n        if (timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0) {\n            // * never overflows, and + overflow is desired\n            price0CumulativeLast += uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) * timeElapsed;\n            price1CumulativeLast += uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) * timeElapsed;\n        }\n        reserve0 = uint112(balance0);\n        reserve1 = uint112(balance1);\n        blockTimestampLast = blockTimestamp;\n        emit Sync(reserve0, reserve1);\n    }\n\n    // if fee is on, mint liquidity equivalent to 8/25 of the growth in sqrt(k)\n    function _mintFee(uint112 _reserve0, uint112 _reserve1) private returns (bool feeOn) {\n        address feeTo = IPancakeFactory(factory).feeTo();\n        feeOn = feeTo != address(0);\n        uint _kLast = kLast; // gas savings\n        if (feeOn) {\n            if (_kLast != 0) {\n                uint rootK = Math.sqrt(uint(_reserve0).mul(_reserve1));\n                uint rootKLast = Math.sqrt(_kLast);\n                if (rootK > rootKLast) {\n                    uint numerator = totalSupply.mul(rootK.sub(rootKLast)).mul(8);\n                    uint denominator = rootK.mul(17).add(rootKLast.mul(8));\n                    uint liquidity = numerator / denominator;\n                    if (liquidity > 0) _mint(feeTo, liquidity);\n                }\n            }\n        } else if (_kLast != 0) {\n            kLast = 0;\n        }\n    }\n\n    // this low-level function should be called from a contract which performs important safety checks\n    function mint(address to) external lock returns (uint liquidity) {\n        (uint112 _reserve0, uint112 _reserve1,) = getReserves(); // gas savings\n        uint balance0 = IERC20(token0).balanceOf(address(this));\n        uint balance1 = IERC20(token1).balanceOf(address(this));\n        uint amount0 = balance0.sub(_reserve0);\n        uint amount1 = balance1.sub(_reserve1);\n\n        bool feeOn = _mintFee(_reserve0, _reserve1);\n        uint _totalSupply = totalSupply; // gas savings, must be defined here since totalSupply can update in _mintFee\n        if (_totalSupply == 0) {\n            liquidity = Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY);\n           _mint(address(0), MINIMUM_LIQUIDITY); // permanently lock the first MINIMUM_LIQUIDITY tokens\n        } else {\n            liquidity = Math.min(amount0.mul(_totalSupply) / _reserve0, amount1.mul(_totalSupply) / _reserve1);\n        }\n        require(liquidity > 0, 'Pancake: INSUFFICIENT_LIQUIDITY_MINTED');\n        _mint(to, liquidity);\n\n        _update(balance0, balance1, _reserve0, _reserve1);\n        if (feeOn) kLast = uint(reserve0).mul(reserve1); // reserve0 and reserve1 are up-to-date\n        emit Mint(msg.sender, amount0, amount1);\n    }\n\n    // this low-level function should be called from a contract which performs important safety checks\n    function burn(address to) external lock returns (uint amount0, uint amount1) {\n        (uint112 _reserve0, uint112 _reserve1,) = getReserves(); // gas savings\n        address _token0 = token0;                                // gas savings\n        address _token1 = token1;                                // gas savings\n        uint balance0 = IERC20(_token0).balanceOf(address(this));\n        uint balance1 = IERC20(_token1).balanceOf(address(this));\n        uint liquidity = balanceOf[address(this)];\n\n        bool feeOn = _mintFee(_reserve0, _reserve1);\n        uint _totalSupply = totalSupply; // gas savings, must be defined here since totalSupply can update in _mintFee\n        amount0 = liquidity.mul(balance0) / _totalSupply; // using balances ensures pro-rata distribution\n        amount1 = liquidity.mul(balance1) / _totalSupply; // using balances ensures pro-rata distribution\n        require(amount0 > 0 && amount1 > 0, 'Pancake: INSUFFICIENT_LIQUIDITY_BURNED');\n        _burn(address(this), liquidity);\n        _safeTransfer(_token0, to, amount0);\n        _safeTransfer(_token1, to, amount1);\n        balance0 = IERC20(_token0).balanceOf(address(this));\n        balance1 = IERC20(_token1).balanceOf(address(this));\n\n        _update(balance0, balance1, _reserve0, _reserve1);\n        if (feeOn) kLast = uint(reserve0).mul(reserve1); // reserve0 and reserve1 are up-to-date\n        emit Burn(msg.sender, amount0, amount1, to);\n    }\n\n    // this low-level function should be called from a contract which performs important safety checks\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external lock {\n        require(amount0Out > 0 || amount1Out > 0, 'Pancake: INSUFFICIENT_OUTPUT_AMOUNT');\n        (uint112 _reserve0, uint112 _reserve1,) = getReserves(); // gas savings\n        require(amount0Out < _reserve0 && amount1Out < _reserve1, 'Pancake: INSUFFICIENT_LIQUIDITY');\n\n        uint balance0;\n        uint balance1;\n        { // scope for _token{0,1}, avoids stack too deep errors\n        address _token0 = token0;\n        address _token1 = token1;\n        require(to != _token0 && to != _token1, 'Pancake: INVALID_TO');\n        if (amount0Out > 0) _safeTransfer(_token0, to, amount0Out); // optimistically transfer tokens\n        if (amount1Out > 0) _safeTransfer(_token1, to, amount1Out); // optimistically transfer tokens\n        if (data.length > 0) IPancakeCallee(to).pancakeCall(msg.sender, amount0Out, amount1Out, data);\n        balance0 = IERC20(_token0).balanceOf(address(this));\n        balance1 = IERC20(_token1).balanceOf(address(this));\n        }\n        uint amount0In = balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0;\n        uint amount1In = balance1 > _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0;\n        require(amount0In > 0 || amount1In > 0, 'Pancake: INSUFFICIENT_INPUT_AMOUNT');\n        { // scope for reserve{0,1}Adjusted, avoids stack too deep errors\n        uint balance0Adjusted = (balance0.mul(10000).sub(amount0In.mul(25)));\n        uint balance1Adjusted = (balance1.mul(10000).sub(amount1In.mul(25)));\n        require(balance0Adjusted.mul(balance1Adjusted) >= uint(_reserve0).mul(_reserve1).mul(10000**2), 'Pancake: K');\n        }\n\n        _update(balance0, balance1, _reserve0, _reserve1);\n        emit Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to);\n    }\n\n    // force balances to match reserves\n    function skim(address to) external lock {\n        address _token0 = token0; // gas savings\n        address _token1 = token1; // gas savings\n        _safeTransfer(_token0, to, IERC20(_token0).balanceOf(address(this)).sub(reserve0));\n        _safeTransfer(_token1, to, IERC20(_token1).balanceOf(address(this)).sub(reserve1));\n    }\n\n    // force reserves to match balances\n    function sync() external lock {\n        _update(IERC20(token0).balanceOf(address(this)), IERC20(token1).balanceOf(address(this)), reserve0, reserve1);\n    }\n}\n"
			},
			"DexSwap/interfaces/IPancakeCallee.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.5.0;\n\ninterface IPancakeCallee {\n    function pancakeCall(\n        address sender,\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"DexSwap/interfaces/IPancakeFactory.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.5.0;\n\ninterface IPancakeFactory {\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint256);\n\n    function feeTo() external view returns (address);\n\n    function feeToSetter() external view returns (address);\n\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\n\n    function allPairs(uint256) external view returns (address pair);\n\n    function allPairsLength() external view returns (uint256);\n\n    function createPair(address tokenA, address tokenB) external returns (address pair);\n\n    function setFeeTo(address) external;\n\n    function setFeeToSetter(address) external;\n\n    function INIT_CODE_PAIR_HASH() external view returns (bytes32);\n}\n"
			},
			"DexSwap/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.5.0;\n\ninterface IERC20 {\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address owner) external view returns (uint256);\n\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 value) external returns (bool);\n\n    function transfer(address to, uint256 value) external returns (bool);\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 value\n    ) external returns (bool);\n}\n"
			},
			"DexSwap/libraries/UQ112x112.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity =0.5.16;\n\n// a library for handling binary fixed point numbers (https://en.wikipedia.org/wiki/Q_(number_format))\n\n// range: [0, 2**112 - 1]\n// resolution: 1 / 2**112\n\nlibrary UQ112x112 {\n    uint224 constant Q112 = 2**112;\n\n    // encode a uint112 as a UQ112x112\n    function encode(uint112 y) internal pure returns (uint224 z) {\n        z = uint224(y) * Q112; // never overflows\n    }\n\n    // divide a UQ112x112 by a uint112, returning a UQ112x112\n    function uqdiv(uint224 x, uint112 y) internal pure returns (uint224 z) {\n        z = x / uint224(y);\n    }\n}\n"
			},
			"DexSwap/libraries/Math.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity =0.5.16;\n\n// a library for performing various math operations\n\nlibrary Math {\n    function min(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        z = x < y ? x : y;\n    }\n\n    // babylonian method (https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method)\n    function sqrt(uint256 y) internal pure returns (uint256 z) {\n        if (y > 3) {\n            z = y;\n            uint256 x = y / 2 + 1;\n            while (x < z) {\n                z = x;\n                x = (y / x + x) / 2;\n            }\n        } else if (y != 0) {\n            z = 1;\n        }\n    }\n}\n"
			},
			"DexSwap/PancakeERC20.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity =0.5.16;\n\nimport \"./interfaces/IPancakeERC20.sol\";\nimport \"./libraries/SafeMath.sol\";\n\ncontract PancakeERC20 is IPancakeERC20 {\n    using SafeMath for uint256;\n\n    string public constant name = \"DexSwap LPs\";\n    string public constant symbol = \"DexSwap-LP\";\n    uint8 public constant decimals = 18;\n    uint256 public totalSupply;\n    mapping(address => uint256) public balanceOf;\n    mapping(address => mapping(address => uint256)) public allowance;\n\n    bytes32 public DOMAIN_SEPARATOR;\n    // keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n    bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;\n    mapping(address => uint256) public nonces;\n\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    constructor() public {\n        uint256 chainId;\n        assembly {\n            chainId := chainid\n        }\n        DOMAIN_SEPARATOR = keccak256(\n            abi.encode(\n                keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"),\n                keccak256(bytes(name)),\n                keccak256(bytes(\"1\")),\n                chainId,\n                address(this)\n            )\n        );\n    }\n\n    function _mint(address to, uint256 value) internal {\n        totalSupply = totalSupply.add(value);\n        balanceOf[to] = balanceOf[to].add(value);\n        emit Transfer(address(0), to, value);\n    }\n\n    function _burn(address from, uint256 value) internal {\n        balanceOf[from] = balanceOf[from].sub(value);\n        totalSupply = totalSupply.sub(value);\n        emit Transfer(from, address(0), value);\n    }\n\n    function _approve(\n        address owner,\n        address spender,\n        uint256 value\n    ) private {\n        allowance[owner][spender] = value;\n        emit Approval(owner, spender, value);\n    }\n\n    function _transfer(\n        address from,\n        address to,\n        uint256 value\n    ) private {\n        balanceOf[from] = balanceOf[from].sub(value);\n        balanceOf[to] = balanceOf[to].add(value);\n        emit Transfer(from, to, value);\n    }\n\n    function approve(address spender, uint256 value) external returns (bool) {\n        _approve(msg.sender, spender, value);\n        return true;\n    }\n\n    function transfer(address to, uint256 value) external returns (bool) {\n        _transfer(msg.sender, to, value);\n        return true;\n    }\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 value\n    ) external returns (bool) {\n        if (allowance[from][msg.sender] != uint256(-1)) {\n            allowance[from][msg.sender] = allowance[from][msg.sender].sub(value);\n        }\n        _transfer(from, to, value);\n        return true;\n    }\n\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external {\n        require(deadline >= block.timestamp, \"Pancake: EXPIRED\");\n        bytes32 digest = keccak256(\n            abi.encodePacked(\n                \"\\x19\\x01\",\n                DOMAIN_SEPARATOR,\n                keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline))\n            )\n        );\n        address recoveredAddress = ecrecover(digest, v, r, s);\n        require(recoveredAddress != address(0) && recoveredAddress == owner, \"Pancake: INVALID_SIGNATURE\");\n        _approve(owner, spender, value);\n    }\n}\n"
			},
			"DexSwap/interfaces/IPancakePair.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.5.0;\n\ninterface IPancakePair {\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    function name() external pure returns (string memory);\n\n    function symbol() external pure returns (string memory);\n\n    function decimals() external pure returns (uint8);\n\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address owner) external view returns (uint256);\n\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 value) external returns (bool);\n\n    function transfer(address to, uint256 value) external returns (bool);\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 value\n    ) external returns (bool);\n\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n\n    function nonces(address owner) external view returns (uint256);\n\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    event Mint(address indexed sender, uint256 amount0, uint256 amount1);\n    event Burn(address indexed sender, uint256 amount0, uint256 amount1, address indexed to);\n    event Swap(\n        address indexed sender,\n        uint256 amount0In,\n        uint256 amount1In,\n        uint256 amount0Out,\n        uint256 amount1Out,\n        address indexed to\n    );\n    event Sync(uint112 reserve0, uint112 reserve1);\n\n    function MINIMUM_LIQUIDITY() external pure returns (uint256);\n\n    function factory() external view returns (address);\n\n    function token0() external view returns (address);\n\n    function token1() external view returns (address);\n\n    function getReserves()\n        external\n        view\n        returns (\n            uint112 reserve0,\n            uint112 reserve1,\n            uint32 blockTimestampLast\n        );\n\n    function price0CumulativeLast() external view returns (uint256);\n\n    function price1CumulativeLast() external view returns (uint256);\n\n    function kLast() external view returns (uint256);\n\n    function mint(address to) external returns (uint256 liquidity);\n\n    function burn(address to) external returns (uint256 amount0, uint256 amount1);\n\n    function swap(\n        uint256 amount0Out,\n        uint256 amount1Out,\n        address to,\n        bytes calldata data\n    ) external;\n\n    function skim(address to) external;\n\n    function sync() external;\n\n    function initialize(address, address) external;\n}\n"
			},
			"DexSwap/libraries/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.5.0 <0.7.0;\n\n// a library for performing overflow-safe math, courtesy of DappHub (https://github.com/dapphub/ds-math)\n\nlibrary SafeMath {\n    function add(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require((z = x + y) >= x, \"ds-math-add-overflow\");\n    }\n\n    function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require((z = x - y) <= x, \"ds-math-sub-underflow\");\n    }\n\n    function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require(y == 0 || (z = x * y) / y == x, \"ds-math-mul-overflow\");\n    }\n}\n"
			},
			"DexSwap/interfaces/IPancakeERC20.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.5.0;\n\ninterface IPancakeERC20 {\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    function name() external pure returns (string memory);\n\n    function symbol() external pure returns (string memory);\n\n    function decimals() external pure returns (uint8);\n\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address owner) external view returns (uint256);\n\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 value) external returns (bool);\n\n    function transfer(address to, uint256 value) external returns (bool);\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 value\n    ) external returns (bool);\n\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n\n    function nonces(address owner) external view returns (uint256);\n\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"DexSwap/DexPair.sol": {
				"DexPair": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								}
							],
							"name": "Sync",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MINIMUM_LIQUIDITY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "_reserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "_reserve1",
									"type": "uint112"
								},
								{
									"internalType": "uint32",
									"name": "_blockTimestampLast",
									"type": "uint32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_token1",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "kLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "price0CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "price1CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "skim",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "sync",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"DexSwap/DexPair.sol\":318:9800  contract DexPair is IPancakePair, PancakeERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"DexSwap/DexPair.sol\":1158:1159  1 */\n  0x01\n    /* \"DexSwap/DexPair.sol\":1134:1159  uint private unlocked = 1 */\n  0x0c\n  sstore\n    /* \"DexSwap/DexPair.sol\":2210:2268  constructor() public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"DexSwap/DexPair.sol\":2210:2268  constructor() public {... */\n  pop\n    /* \"DexSwap/PancakeERC20.sol\":1005:1020  uint256 chainId */\n  0x00\n    /* \"DexSwap/PancakeERC20.sol\":1064:1071  chainid */\n  chainid\n    /* \"DexSwap/PancakeERC20.sol\":1053:1071  chainId := chainid */\n  swap1\n  pop\n    /* \"DexSwap/PancakeERC20.sol\":1160:1255  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n  mload(0x40)\n  dup1\n  dup1\n  data_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n  0x52\n  swap2\n  codecopy\n  0x52\n  add\n  swap1\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  keccak256\n    /* \"DexSwap/PancakeERC20.sol\":1289:1293  name */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0b\n  dup2\n  mstore\n  0x20\n  add\n  0x44657853776170204c5073000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"DexSwap/PancakeERC20.sol\":1273:1295  keccak256(bytes(name)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"DexSwap/PancakeERC20.sol\":1323:1333  bytes(\"1\") */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x01\n  dup2\n  mstore\n  0x20\n  add\n  0x3100000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"DexSwap/PancakeERC20.sol\":1313:1334  keccak256(bytes(\"1\")) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"DexSwap/PancakeERC20.sol\":1352:1359  chainId */\n  dup4\n    /* \"DexSwap/PancakeERC20.sol\":1385:1389  this */\n  address\n    /* \"DexSwap/PancakeERC20.sol\":1132:1404  abi.encode(... */\n  add(0x20, mload(0x40))\n  dup1\n  dup7\n  dup2\n  mstore\n  0x20\n  add\n  dup6\n  dup2\n  mstore\n  0x20\n  add\n  dup5\n  dup2\n  mstore\n  0x20\n  add\n  dup4\n  dup2\n  mstore\n  0x20\n  add\n  dup3\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n    /* \"--CODEGEN--\":49:53   */\n  0x20\n    /* \"--CODEGEN--\":39:46   */\n  dup2\n    /* \"--CODEGEN--\":30:37   */\n  dup4\n    /* \"--CODEGEN--\":26:47   */\n  sub\n    /* \"--CODEGEN--\":22:54   */\n  sub\n    /* \"--CODEGEN--\":13:20   */\n  dup2\n    /* \"--CODEGEN--\":6:55   */\n  mstore\n    /* \"DexSwap/PancakeERC20.sol\":1132:1404  abi.encode(... */\n  swap1\n  0x40\n  mstore\n    /* \"DexSwap/PancakeERC20.sol\":1109:1414  keccak256(... */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"DexSwap/PancakeERC20.sol\":1090:1106  DOMAIN_SEPARATOR */\n  0x03\n    /* \"DexSwap/PancakeERC20.sol\":1090:1414  DOMAIN_SEPARATOR = keccak256(... */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"DexSwap/PancakeERC20.sol\":974:1421  constructor() public {... */\n  pop\n    /* \"DexSwap/DexPair.sol\":2251:2261  msg.sender */\n  caller\n    /* \"DexSwap/DexPair.sol\":2241:2248  factory */\n  0x05\n  0x00\n    /* \"DexSwap/DexPair.sol\":2241:2261  factory = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"DexSwap/DexPair.sol\":318:9800  contract DexPair is IPancakePair, PancakeERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f 454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429\n\nsub_0: assembly {\n        /* \"DexSwap/DexPair.sol\":318:9800  contract DexPair is IPancakePair, PancakeERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"DexSwap/DexPair.sol\":318:9800  contract DexPair is IPancakePair, PancakeERC20 {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6a627842\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xba9a7a56\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xd21220a7\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xd21220a7\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xfff6cae9\n      eq\n      tag_29\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0xba9a7a56\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xbc25cf77\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xc45a0155\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x7ecebe00\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x89afcb44\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x6a627842\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x7464fc3d\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0x23b872dd\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x3644e515\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x485cc955\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x5909c0d5\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x5a3d5493\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x30adf81f\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x022c0d9f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0902f1ac\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x0dfe1681\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"DexSwap/DexPair.sol\":7365:9221  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external lock {... */\n    tag_3:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0x80\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_37\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_37:\n        /* \"DexSwap/DexPair.sol\":7365:9221  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external lock {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_38\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_38:\n        /* \"DexSwap/DexPair.sol\":7365:9221  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external lock {... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_39:\n        /* \"DexSwap/DexPair.sol\":7365:9221  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external lock {... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_40\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_40:\n        /* \"DexSwap/DexPair.sol\":7365:9221  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external lock {... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap2\n      swap3\n      swap4\n      swap1\n      pop\n      pop\n      pop\n      tag_41\n      jump\t// in\n    tag_36:\n      stop\n        /* \"DexSwap/PancakeERC20.sol\":217:260  string public constant name = \"DexSwap LPs\" */\n    tag_4:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_44:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_46\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_44)\n    tag_46:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"DexSwap/PancakeERC20.sol\":217:260  string public constant name = \"DexSwap LPs\" */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_47\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_47:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DexSwap/DexPair.sol\":1300:1527  function getReserves() public view returns (uint112 _reserve0, uint112 _reserve1, uint32 _blockTimestampLast) {... */\n    tag_5:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DexSwap/PancakeERC20.sol\":2307:2454  function approve(address spender, uint256 value) external returns (bool) {... */\n    tag_6:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_51:\n        /* \"DexSwap/PancakeERC20.sol\":2307:2454  function approve(address spender, uint256 value) external returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DexSwap/DexPair.sol\":610:631  address public token0 */\n    tag_7:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DexSwap/PancakeERC20.sol\":357:383  uint256 public totalSupply */\n    tag_8:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DexSwap/PancakeERC20.sol\":2605:2936  function transferFrom(... */\n    tag_9:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_58\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_58:\n        /* \"DexSwap/PancakeERC20.sol\":2605:2936  function transferFrom(... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_59\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DexSwap/PancakeERC20.sol\":651:759  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_10:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DexSwap/PancakeERC20.sol\":316:351  uint8 public constant decimals = 18 */\n    tag_11:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DexSwap/PancakeERC20.sol\":510:541  bytes32 public DOMAIN_SEPARATOR */\n    tag_12:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DexSwap/DexPair.sol\":2330:2534  function initialize(address _token0, address _token1) external {... */\n    tag_13:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_67\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_67:\n        /* \"DexSwap/DexPair.sol\":2330:2534  function initialize(address _token0, address _token1) external {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_68\n      jump\t// in\n    tag_66:\n      stop\n        /* \"DexSwap/DexPair.sol\":954:986  uint public price0CumulativeLast */\n    tag_14:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DexSwap/DexPair.sol\":992:1024  uint public price1CumulativeLast */\n    tag_15:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DexSwap/DexPair.sol\":4488:5705  function mint(address to) external lock returns (uint liquidity) {... */\n    tag_16:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_74\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_74:\n        /* \"DexSwap/DexPair.sol\":4488:5705  function mint(address to) external lock returns (uint liquidity) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_75\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DexSwap/PancakeERC20.sol\":389:433  mapping(address => uint256) public balanceOf */\n    tag_17:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_77\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_77:\n        /* \"DexSwap/PancakeERC20.sol\":389:433  mapping(address => uint256) public balanceOf */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_78\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DexSwap/DexPair.sol\":1030:1047  uint public kLast */\n    tag_18:\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DexSwap/PancakeERC20.sol\":765:806  mapping(address => uint256) public nonces */\n    tag_19:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_82\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_82:\n        /* \"DexSwap/PancakeERC20.sol\":765:806  mapping(address => uint256) public nonces */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_83\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DexSwap/DexPair.sol\":5814:7256  function burn(address to) external lock returns (uint amount0, uint amount1) {... */\n    tag_20:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_85\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_85:\n        /* \"DexSwap/DexPair.sol\":5814:7256  function burn(address to) external lock returns (uint amount0, uint amount1) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_86\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DexSwap/PancakeERC20.sol\":266:310  string public constant symbol = \"DexSwap-LP\" */\n    tag_21:\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_89:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_91\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_89)\n    tag_91:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"DexSwap/PancakeERC20.sol\":266:310  string public constant symbol = \"DexSwap-LP\" */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_92\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_92:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DexSwap/PancakeERC20.sol\":2460:2599  function transfer(address to, uint256 value) external returns (bool) {... */\n    tag_22:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_94\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_94:\n        /* \"DexSwap/PancakeERC20.sol\":2460:2599  function transfer(address to, uint256 value) external returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_95\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DexSwap/DexPair.sol\":435:481  uint public constant MINIMUM_LIQUIDITY = 10**3 */\n    tag_23:\n      tag_96\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DexSwap/DexPair.sol\":9267:9596  function skim(address to) external lock {... */\n    tag_24:\n      tag_98\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_99\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_99:\n        /* \"DexSwap/DexPair.sol\":9267:9596  function skim(address to) external lock {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_100\n      jump\t// in\n    tag_98:\n      stop\n        /* \"DexSwap/DexPair.sol\":582:604  address public factory */\n    tag_25:\n      tag_101\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DexSwap/DexPair.sol\":637:658  address public token1 */\n    tag_26:\n      tag_103\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DexSwap/PancakeERC20.sol\":2942:3668  function permit(... */\n    tag_27:\n      tag_105\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xe0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_106\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_106:\n        /* \"DexSwap/PancakeERC20.sol\":2942:3668  function permit(... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_107\n      jump\t// in\n    tag_105:\n      stop\n        /* \"DexSwap/PancakeERC20.sol\":439:503  mapping(address => mapping(address => uint256)) public allowance */\n    tag_28:\n      tag_108\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_109\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_109:\n        /* \"DexSwap/PancakeERC20.sol\":439:503  mapping(address => mapping(address => uint256)) public allowance */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_110\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DexSwap/DexPair.sol\":9642:9798  function sync() external lock {... */\n    tag_29:\n      tag_111\n      tag_112\n      jump\t// in\n    tag_111:\n      stop\n        /* \"DexSwap/DexPair.sol\":7365:9221  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external lock {... */\n    tag_41:\n        /* \"DexSwap/DexPair.sol\":1211:1212  1 */\n      0x01\n        /* \"DexSwap/DexPair.sol\":1199:1207  unlocked */\n      sload(0x0c)\n        /* \"DexSwap/DexPair.sol\":1199:1212  unlocked == 1 */\n      eq\n        /* \"DexSwap/DexPair.sol\":1191:1232  require(unlocked == 1, 'Pancake: LOCKED') */\n      tag_114\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x50616e63616b653a204c4f434b45440000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_114:\n        /* \"DexSwap/DexPair.sol\":1253:1254  0 */\n      0x00\n        /* \"DexSwap/DexPair.sol\":1242:1250  unlocked */\n      0x0c\n        /* \"DexSwap/DexPair.sol\":1242:1254  unlocked = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DexSwap/DexPair.sol\":7491:7492  0 */\n      0x00\n        /* \"DexSwap/DexPair.sol\":7478:7488  amount0Out */\n      dup6\n        /* \"DexSwap/DexPair.sol\":7478:7492  amount0Out > 0 */\n      gt\n        /* \"DexSwap/DexPair.sol\":7478:7510  amount0Out > 0 || amount1Out > 0 */\n      dup1\n      tag_116\n      jumpi\n      pop\n        /* \"DexSwap/DexPair.sol\":7509:7510  0 */\n      0x00\n        /* \"DexSwap/DexPair.sol\":7496:7506  amount1Out */\n      dup5\n        /* \"DexSwap/DexPair.sol\":7496:7510  amount1Out > 0 */\n      gt\n        /* \"DexSwap/DexPair.sol\":7478:7510  amount0Out > 0 || amount1Out > 0 */\n    tag_116:\n        /* \"DexSwap/DexPair.sol\":7470:7550  require(amount0Out > 0 || amount1Out > 0, 'Pancake: INSUFFICIENT_OUTPUT_AMOUNT') */\n      tag_117\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c654718515b5f98052eb92744d97d32cccabf6e8b2bae886738591c9b906cfd8\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_117:\n        /* \"DexSwap/DexPair.sol\":7561:7578  uint112 _reserve0 */\n      0x00\n        /* \"DexSwap/DexPair.sol\":7580:7597  uint112 _reserve1 */\n      dup1\n        /* \"DexSwap/DexPair.sol\":7602:7615  getReserves() */\n      tag_118\n        /* \"DexSwap/DexPair.sol\":7602:7613  getReserves */\n      tag_49\n        /* \"DexSwap/DexPair.sol\":7602:7615  getReserves() */\n      jump\t// in\n    tag_118:\n        /* \"DexSwap/DexPair.sol\":7560:7615  (uint112 _reserve0, uint112 _reserve1,) = getReserves() */\n      pop\n      swap2\n      pop\n      swap2\n      pop\n        /* \"DexSwap/DexPair.sol\":7661:7670  _reserve0 */\n      dup2\n        /* \"DexSwap/DexPair.sol\":7648:7670  amount0Out < _reserve0 */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":7648:7658  amount0Out */\n      dup8\n        /* \"DexSwap/DexPair.sol\":7648:7670  amount0Out < _reserve0 */\n      lt\n        /* \"DexSwap/DexPair.sol\":7648:7696  amount0Out < _reserve0 && amount1Out < _reserve1 */\n      dup1\n      iszero\n      tag_119\n      jumpi\n      pop\n        /* \"DexSwap/DexPair.sol\":7687:7696  _reserve1 */\n      dup1\n        /* \"DexSwap/DexPair.sol\":7674:7696  amount1Out < _reserve1 */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":7674:7684  amount1Out */\n      dup7\n        /* \"DexSwap/DexPair.sol\":7674:7696  amount1Out < _reserve1 */\n      lt\n        /* \"DexSwap/DexPair.sol\":7648:7696  amount0Out < _reserve0 && amount1Out < _reserve1 */\n    tag_119:\n        /* \"DexSwap/DexPair.sol\":7640:7732  require(amount0Out < _reserve0 && amount1Out < _reserve1, 'Pancake: INSUFFICIENT_LIQUIDITY') */\n      tag_120\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x50616e63616b653a20494e53554646494349454e545f4c495155494449545900\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n        /* \"DexSwap/DexPair.sol\":7743:7756  uint balance0 */\n      0x00\n        /* \"DexSwap/DexPair.sol\":7766:7779  uint balance1 */\n      dup1\n        /* \"DexSwap/DexPair.sol\":7854:7869  address _token0 */\n      0x00\n        /* \"DexSwap/DexPair.sol\":7872:7878  token0 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":7854:7878  address _token0 = token0 */\n      swap1\n      pop\n        /* \"DexSwap/DexPair.sol\":7888:7903  address _token1 */\n      0x00\n        /* \"DexSwap/DexPair.sol\":7906:7912  token1 */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":7888:7912  address _token1 = token1 */\n      swap1\n      pop\n        /* \"DexSwap/DexPair.sol\":7936:7943  _token0 */\n      dup2\n        /* \"DexSwap/DexPair.sol\":7930:7943  to != _token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":7930:7932  to */\n      dup10\n        /* \"DexSwap/DexPair.sol\":7930:7943  to != _token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"DexSwap/DexPair.sol\":7930:7960  to != _token0 && to != _token1 */\n      dup1\n      iszero\n      tag_121\n      jumpi\n      pop\n        /* \"DexSwap/DexPair.sol\":7953:7960  _token1 */\n      dup1\n        /* \"DexSwap/DexPair.sol\":7947:7960  to != _token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":7947:7949  to */\n      dup10\n        /* \"DexSwap/DexPair.sol\":7947:7960  to != _token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"DexSwap/DexPair.sol\":7930:7960  to != _token0 && to != _token1 */\n    tag_121:\n        /* \"DexSwap/DexPair.sol\":7922:7984  require(to != _token0 && to != _token1, 'Pancake: INVALID_TO') */\n      tag_122\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x13\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x50616e63616b653a20494e56414c49445f544f00000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_122:\n        /* \"DexSwap/DexPair.sol\":8011:8012  0 */\n      0x00\n        /* \"DexSwap/DexPair.sol\":7998:8008  amount0Out */\n      dup12\n        /* \"DexSwap/DexPair.sol\":7998:8012  amount0Out > 0 */\n      gt\n        /* \"DexSwap/DexPair.sol\":7994:8052  if (amount0Out > 0) _safeTransfer(_token0, to, amount0Out) */\n      iszero\n      tag_123\n      jumpi\n        /* \"DexSwap/DexPair.sol\":8014:8052  _safeTransfer(_token0, to, amount0Out) */\n      tag_124\n        /* \"DexSwap/DexPair.sol\":8028:8035  _token0 */\n      dup3\n        /* \"DexSwap/DexPair.sol\":8037:8039  to */\n      dup11\n        /* \"DexSwap/DexPair.sol\":8041:8051  amount0Out */\n      dup14\n        /* \"DexSwap/DexPair.sol\":8014:8027  _safeTransfer */\n      tag_125\n        /* \"DexSwap/DexPair.sol\":8014:8052  _safeTransfer(_token0, to, amount0Out) */\n      jump\t// in\n    tag_124:\n        /* \"DexSwap/DexPair.sol\":7994:8052  if (amount0Out > 0) _safeTransfer(_token0, to, amount0Out) */\n    tag_123:\n        /* \"DexSwap/DexPair.sol\":8113:8114  0 */\n      0x00\n        /* \"DexSwap/DexPair.sol\":8100:8110  amount1Out */\n      dup11\n        /* \"DexSwap/DexPair.sol\":8100:8114  amount1Out > 0 */\n      gt\n        /* \"DexSwap/DexPair.sol\":8096:8154  if (amount1Out > 0) _safeTransfer(_token1, to, amount1Out) */\n      iszero\n      tag_126\n      jumpi\n        /* \"DexSwap/DexPair.sol\":8116:8154  _safeTransfer(_token1, to, amount1Out) */\n      tag_127\n        /* \"DexSwap/DexPair.sol\":8130:8137  _token1 */\n      dup2\n        /* \"DexSwap/DexPair.sol\":8139:8141  to */\n      dup11\n        /* \"DexSwap/DexPair.sol\":8143:8153  amount1Out */\n      dup13\n        /* \"DexSwap/DexPair.sol\":8116:8129  _safeTransfer */\n      tag_125\n        /* \"DexSwap/DexPair.sol\":8116:8154  _safeTransfer(_token1, to, amount1Out) */\n      jump\t// in\n    tag_127:\n        /* \"DexSwap/DexPair.sol\":8096:8154  if (amount1Out > 0) _safeTransfer(_token1, to, amount1Out) */\n    tag_126:\n        /* \"DexSwap/DexPair.sol\":8216:8217  0 */\n      0x00\n        /* \"DexSwap/DexPair.sol\":8202:8206  data */\n      dup9\n      dup9\n        /* \"DexSwap/DexPair.sol\":8202:8213  data.length */\n      swap1\n      pop\n        /* \"DexSwap/DexPair.sol\":8202:8217  data.length > 0 */\n      gt\n        /* \"DexSwap/DexPair.sol\":8198:8291  if (data.length > 0) IPancakeCallee(to).pancakeCall(msg.sender, amount0Out, amount1Out, data) */\n      iszero\n      tag_128\n      jumpi\n        /* \"DexSwap/DexPair.sol\":8234:8236  to */\n      dup9\n        /* \"DexSwap/DexPair.sol\":8219:8249  IPancakeCallee(to).pancakeCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x84800812\n        /* \"DexSwap/DexPair.sol\":8250:8260  msg.sender */\n      caller\n        /* \"DexSwap/DexPair.sol\":8262:8272  amount0Out */\n      dup14\n        /* \"DexSwap/DexPair.sol\":8274:8284  amount1Out */\n      dup14\n        /* \"DexSwap/DexPair.sol\":8286:8290  data */\n      dup13\n      dup13\n        /* \"DexSwap/DexPair.sol\":8219:8291  IPancakeCallee(to).pancakeCall(msg.sender, amount0Out, amount1Out, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup7\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup5\n      dup5\n      dup3\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"DexSwap/DexPair.sol\":8219:8291  IPancakeCallee(to).pancakeCall(msg.sender, amount0Out, amount1Out, data) */\n      pop\n      pop\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_129\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_129:\n        /* \"DexSwap/DexPair.sol\":8219:8291  IPancakeCallee(to).pancakeCall(msg.sender, amount0Out, amount1Out, data) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_130\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_130:\n        /* \"DexSwap/DexPair.sol\":8219:8291  IPancakeCallee(to).pancakeCall(msg.sender, amount0Out, amount1Out, data) */\n      pop\n      pop\n      pop\n      pop\n        /* \"DexSwap/DexPair.sol\":8198:8291  if (data.length > 0) IPancakeCallee(to).pancakeCall(msg.sender, amount0Out, amount1Out, data) */\n    tag_128:\n        /* \"DexSwap/DexPair.sol\":8319:8326  _token0 */\n      dup2\n        /* \"DexSwap/DexPair.sol\":8312:8337  IERC20(_token0).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"DexSwap/DexPair.sol\":8346:8350  this */\n      address\n        /* \"DexSwap/DexPair.sol\":8312:8352  IERC20(_token0).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_131\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_131:\n        /* \"DexSwap/DexPair.sol\":8312:8352  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_132\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_132:\n        /* \"DexSwap/DexPair.sol\":8312:8352  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_133\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_133:\n        /* \"DexSwap/DexPair.sol\":8312:8352  IERC20(_token0).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"DexSwap/DexPair.sol\":8301:8352  balance0 = IERC20(_token0).balanceOf(address(this)) */\n      swap4\n      pop\n        /* \"DexSwap/DexPair.sol\":8380:8387  _token1 */\n      dup1\n        /* \"DexSwap/DexPair.sol\":8373:8398  IERC20(_token1).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"DexSwap/DexPair.sol\":8407:8411  this */\n      address\n        /* \"DexSwap/DexPair.sol\":8373:8413  IERC20(_token1).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_134\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_134:\n        /* \"DexSwap/DexPair.sol\":8373:8413  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_135\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_135:\n        /* \"DexSwap/DexPair.sol\":8373:8413  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_136\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_136:\n        /* \"DexSwap/DexPair.sol\":8373:8413  IERC20(_token1).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"DexSwap/DexPair.sol\":8362:8413  balance1 = IERC20(_token1).balanceOf(address(this)) */\n      swap3\n      pop\n        /* \"DexSwap/DexPair.sol\":1264:1265  _ */\n      pop\n      pop\n        /* \"DexSwap/DexPair.sol\":8433:8447  uint amount0In */\n      0x00\n        /* \"DexSwap/DexPair.sol\":8473:8483  amount0Out */\n      dup10\n        /* \"DexSwap/DexPair.sol\":8461:8470  _reserve0 */\n      dup6\n        /* \"DexSwap/DexPair.sol\":8461:8483  _reserve0 - amount0Out */\n      0xffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"DexSwap/DexPair.sol\":8450:8458  balance0 */\n      dup4\n        /* \"DexSwap/DexPair.sol\":8450:8483  balance0 > _reserve0 - amount0Out */\n      gt\n        /* \"DexSwap/DexPair.sol\":8450:8525  balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0 */\n      tag_137\n      jumpi\n        /* \"DexSwap/DexPair.sol\":8524:8525  0 */\n      0x00\n        /* \"DexSwap/DexPair.sol\":8450:8525  balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0 */\n      jump(tag_138)\n    tag_137:\n        /* \"DexSwap/DexPair.sol\":8510:8520  amount0Out */\n      dup10\n        /* \"DexSwap/DexPair.sol\":8498:8507  _reserve0 */\n      dup6\n        /* \"DexSwap/DexPair.sol\":8498:8520  _reserve0 - amount0Out */\n      0xffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"DexSwap/DexPair.sol\":8486:8494  balance0 */\n      dup4\n        /* \"DexSwap/DexPair.sol\":8486:8521  balance0 - (_reserve0 - amount0Out) */\n      sub\n        /* \"DexSwap/DexPair.sol\":8450:8525  balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0 */\n    tag_138:\n        /* \"DexSwap/DexPair.sol\":8433:8525  uint amount0In = balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0 */\n      swap1\n      pop\n        /* \"DexSwap/DexPair.sol\":8535:8549  uint amount1In */\n      0x00\n        /* \"DexSwap/DexPair.sol\":8575:8585  amount1Out */\n      dup10\n        /* \"DexSwap/DexPair.sol\":8563:8572  _reserve1 */\n      dup6\n        /* \"DexSwap/DexPair.sol\":8563:8585  _reserve1 - amount1Out */\n      0xffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"DexSwap/DexPair.sol\":8552:8560  balance1 */\n      dup4\n        /* \"DexSwap/DexPair.sol\":8552:8585  balance1 > _reserve1 - amount1Out */\n      gt\n        /* \"DexSwap/DexPair.sol\":8552:8627  balance1 > _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0 */\n      tag_139\n      jumpi\n        /* \"DexSwap/DexPair.sol\":8626:8627  0 */\n      0x00\n        /* \"DexSwap/DexPair.sol\":8552:8627  balance1 > _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0 */\n      jump(tag_140)\n    tag_139:\n        /* \"DexSwap/DexPair.sol\":8612:8622  amount1Out */\n      dup10\n        /* \"DexSwap/DexPair.sol\":8600:8609  _reserve1 */\n      dup6\n        /* \"DexSwap/DexPair.sol\":8600:8622  _reserve1 - amount1Out */\n      0xffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"DexSwap/DexPair.sol\":8588:8596  balance1 */\n      dup4\n        /* \"DexSwap/DexPair.sol\":8588:8623  balance1 - (_reserve1 - amount1Out) */\n      sub\n        /* \"DexSwap/DexPair.sol\":8552:8627  balance1 > _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0 */\n    tag_140:\n        /* \"DexSwap/DexPair.sol\":8535:8627  uint amount1In = balance1 > _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0 */\n      swap1\n      pop\n        /* \"DexSwap/DexPair.sol\":8657:8658  0 */\n      0x00\n        /* \"DexSwap/DexPair.sol\":8645:8654  amount0In */\n      dup3\n        /* \"DexSwap/DexPair.sol\":8645:8658  amount0In > 0 */\n      gt\n        /* \"DexSwap/DexPair.sol\":8645:8675  amount0In > 0 || amount1In > 0 */\n      dup1\n      tag_141\n      jumpi\n      pop\n        /* \"DexSwap/DexPair.sol\":8674:8675  0 */\n      0x00\n        /* \"DexSwap/DexPair.sol\":8662:8671  amount1In */\n      dup2\n        /* \"DexSwap/DexPair.sol\":8662:8675  amount1In > 0 */\n      gt\n        /* \"DexSwap/DexPair.sol\":8645:8675  amount0In > 0 || amount1In > 0 */\n    tag_141:\n        /* \"DexSwap/DexPair.sol\":8637:8714  require(amount0In > 0 || amount1In > 0, 'Pancake: INSUFFICIENT_INPUT_AMOUNT') */\n      tag_142\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_50b0a6dd250a09c1cd083ad4bf9f97424665d60e7bc0a208a1151c7d0051999c\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_142:\n        /* \"DexSwap/DexPair.sol\":8798:8819  uint balance0Adjusted */\n      0x00\n        /* \"DexSwap/DexPair.sol\":8823:8865  balance0.mul(10000).sub(amount0In.mul(25)) */\n      tag_143\n        /* \"DexSwap/DexPair.sol\":8847:8864  amount0In.mul(25) */\n      tag_144\n        /* \"DexSwap/DexPair.sol\":8861:8863  25 */\n      0x19\n        /* \"DexSwap/DexPair.sol\":8847:8856  amount0In */\n      dup6\n        /* \"DexSwap/DexPair.sol\":8847:8860  amount0In.mul */\n      tag_145\n      swap1\n        /* \"DexSwap/DexPair.sol\":8847:8864  amount0In.mul(25) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_144:\n        /* \"DexSwap/DexPair.sol\":8823:8842  balance0.mul(10000) */\n      tag_146\n        /* \"DexSwap/DexPair.sol\":8836:8841  10000 */\n      0x2710\n        /* \"DexSwap/DexPair.sol\":8823:8831  balance0 */\n      dup9\n        /* \"DexSwap/DexPair.sol\":8823:8835  balance0.mul */\n      tag_145\n      swap1\n        /* \"DexSwap/DexPair.sol\":8823:8842  balance0.mul(10000) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_146:\n        /* \"DexSwap/DexPair.sol\":8823:8846  balance0.mul(10000).sub */\n      tag_147\n      swap1\n        /* \"DexSwap/DexPair.sol\":8823:8865  balance0.mul(10000).sub(amount0In.mul(25)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_143:\n        /* \"DexSwap/DexPair.sol\":8798:8866  uint balance0Adjusted = (balance0.mul(10000).sub(amount0In.mul(25))) */\n      swap1\n      pop\n        /* \"DexSwap/DexPair.sol\":8876:8897  uint balance1Adjusted */\n      0x00\n        /* \"DexSwap/DexPair.sol\":8901:8943  balance1.mul(10000).sub(amount1In.mul(25)) */\n      tag_148\n        /* \"DexSwap/DexPair.sol\":8925:8942  amount1In.mul(25) */\n      tag_149\n        /* \"DexSwap/DexPair.sol\":8939:8941  25 */\n      0x19\n        /* \"DexSwap/DexPair.sol\":8925:8934  amount1In */\n      dup6\n        /* \"DexSwap/DexPair.sol\":8925:8938  amount1In.mul */\n      tag_145\n      swap1\n        /* \"DexSwap/DexPair.sol\":8925:8942  amount1In.mul(25) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_149:\n        /* \"DexSwap/DexPair.sol\":8901:8920  balance1.mul(10000) */\n      tag_150\n        /* \"DexSwap/DexPair.sol\":8914:8919  10000 */\n      0x2710\n        /* \"DexSwap/DexPair.sol\":8901:8909  balance1 */\n      dup9\n        /* \"DexSwap/DexPair.sol\":8901:8913  balance1.mul */\n      tag_145\n      swap1\n        /* \"DexSwap/DexPair.sol\":8901:8920  balance1.mul(10000) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_150:\n        /* \"DexSwap/DexPair.sol\":8901:8924  balance1.mul(10000).sub */\n      tag_147\n      swap1\n        /* \"DexSwap/DexPair.sol\":8901:8943  balance1.mul(10000).sub(amount1In.mul(25)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_148:\n        /* \"DexSwap/DexPair.sol\":8876:8944  uint balance1Adjusted = (balance1.mul(10000).sub(amount1In.mul(25))) */\n      swap1\n      pop\n        /* \"DexSwap/DexPair.sol\":9004:9048  uint(_reserve0).mul(_reserve1).mul(10000**2) */\n      tag_151\n        /* \"DexSwap/DexPair.sol\":9039:9047  10000**2 */\n      0x05f5e100\n        /* \"DexSwap/DexPair.sol\":9004:9034  uint(_reserve0).mul(_reserve1) */\n      tag_152\n        /* \"DexSwap/DexPair.sol\":9024:9033  _reserve1 */\n      dup10\n        /* \"DexSwap/DexPair.sol\":9004:9034  uint(_reserve0).mul(_reserve1) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":9009:9018  _reserve0 */\n      dup12\n        /* \"DexSwap/DexPair.sol\":9004:9019  uint(_reserve0) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":9004:9023  uint(_reserve0).mul */\n      tag_145\n      swap1\n        /* \"DexSwap/DexPair.sol\":9004:9034  uint(_reserve0).mul(_reserve1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_152:\n        /* \"DexSwap/DexPair.sol\":9004:9038  uint(_reserve0).mul(_reserve1).mul */\n      tag_145\n      swap1\n        /* \"DexSwap/DexPair.sol\":9004:9048  uint(_reserve0).mul(_reserve1).mul(10000**2) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_151:\n        /* \"DexSwap/DexPair.sol\":8962:9000  balance0Adjusted.mul(balance1Adjusted) */\n      tag_153\n        /* \"DexSwap/DexPair.sol\":8983:8999  balance1Adjusted */\n      dup3\n        /* \"DexSwap/DexPair.sol\":8962:8978  balance0Adjusted */\n      dup5\n        /* \"DexSwap/DexPair.sol\":8962:8982  balance0Adjusted.mul */\n      tag_145\n      swap1\n        /* \"DexSwap/DexPair.sol\":8962:9000  balance0Adjusted.mul(balance1Adjusted) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_153:\n        /* \"DexSwap/DexPair.sol\":8962:9048  balance0Adjusted.mul(balance1Adjusted) >= uint(_reserve0).mul(_reserve1).mul(10000**2) */\n      lt\n      iszero\n        /* \"DexSwap/DexPair.sol\":8954:9063  require(balance0Adjusted.mul(balance1Adjusted) >= uint(_reserve0).mul(_reserve1).mul(10000**2), 'Pancake: K') */\n      tag_154\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x50616e63616b653a204b00000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_154:\n        /* \"DexSwap/DexPair.sol\":1264:1265  _ */\n      pop\n      pop\n        /* \"DexSwap/DexPair.sol\":9084:9133  _update(balance0, balance1, _reserve0, _reserve1) */\n      tag_155\n        /* \"DexSwap/DexPair.sol\":9092:9100  balance0 */\n      dup5\n        /* \"DexSwap/DexPair.sol\":9102:9110  balance1 */\n      dup5\n        /* \"DexSwap/DexPair.sol\":9112:9121  _reserve0 */\n      dup9\n        /* \"DexSwap/DexPair.sol\":9123:9132  _reserve1 */\n      dup9\n        /* \"DexSwap/DexPair.sol\":9084:9091  _update */\n      tag_156\n        /* \"DexSwap/DexPair.sol\":9084:9133  _update(balance0, balance1, _reserve0, _reserve1) */\n      jump\t// in\n    tag_155:\n        /* \"DexSwap/DexPair.sol\":9211:9213  to */\n      dup9\n        /* \"DexSwap/DexPair.sol\":9148:9214  Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":9153:9163  msg.sender */\n      caller\n        /* \"DexSwap/DexPair.sol\":9148:9214  Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d822\n        /* \"DexSwap/DexPair.sol\":9165:9174  amount0In */\n      dup5\n        /* \"DexSwap/DexPair.sol\":9176:9185  amount1In */\n      dup5\n        /* \"DexSwap/DexPair.sol\":9187:9197  amount0Out */\n      dup16\n        /* \"DexSwap/DexPair.sol\":9199:9209  amount1Out */\n      dup16\n        /* \"DexSwap/DexPair.sol\":9148:9214  Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to) */\n      mload(0x40)\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"DexSwap/DexPair.sol\":1264:1265  _ */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"DexSwap/DexPair.sol\":1286:1287  1 */\n      0x01\n        /* \"DexSwap/DexPair.sol\":1275:1283  unlocked */\n      0x0c\n        /* \"DexSwap/DexPair.sol\":1275:1287  unlocked = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DexSwap/DexPair.sol\":7365:9221  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external lock {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DexSwap/PancakeERC20.sol\":217:260  string public constant name = \"DexSwap LPs\" */\n    tag_43:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      0x44657853776170204c5073000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"DexSwap/DexPair.sol\":1300:1527  function getReserves() public view returns (uint112 _reserve0, uint112 _reserve1, uint32 _blockTimestampLast) {... */\n    tag_49:\n        /* \"DexSwap/DexPair.sol\":1344:1361  uint112 _reserve0 */\n      0x00\n        /* \"DexSwap/DexPair.sol\":1363:1380  uint112 _reserve1 */\n      dup1\n        /* \"DexSwap/DexPair.sol\":1382:1408  uint32 _blockTimestampLast */\n      0x00\n        /* \"DexSwap/DexPair.sol\":1432:1440  reserve0 */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":1420:1440  _reserve0 = reserve0 */\n      swap3\n      pop\n        /* \"DexSwap/DexPair.sol\":1462:1470  reserve1 */\n      0x08\n      0x0e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":1450:1470  _reserve1 = reserve1 */\n      swap2\n      pop\n        /* \"DexSwap/DexPair.sol\":1502:1520  blockTimestampLast */\n      0x08\n      0x1c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":1480:1520  _blockTimestampLast = blockTimestampLast */\n      swap1\n      pop\n        /* \"DexSwap/DexPair.sol\":1300:1527  function getReserves() public view returns (uint112 _reserve0, uint112 _reserve1, uint32 _blockTimestampLast) {... */\n      swap1\n      swap2\n      swap3\n      jump\t// out\n        /* \"DexSwap/PancakeERC20.sol\":2307:2454  function approve(address spender, uint256 value) external returns (bool) {... */\n    tag_52:\n        /* \"DexSwap/PancakeERC20.sol\":2374:2378  bool */\n      0x00\n        /* \"DexSwap/PancakeERC20.sol\":2390:2426  _approve(msg.sender, spender, value) */\n      tag_159\n        /* \"DexSwap/PancakeERC20.sol\":2399:2409  msg.sender */\n      caller\n        /* \"DexSwap/PancakeERC20.sol\":2411:2418  spender */\n      dup5\n        /* \"DexSwap/PancakeERC20.sol\":2420:2425  value */\n      dup5\n        /* \"DexSwap/PancakeERC20.sol\":2390:2398  _approve */\n      tag_160\n        /* \"DexSwap/PancakeERC20.sol\":2390:2426  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_159:\n        /* \"DexSwap/PancakeERC20.sol\":2443:2447  true */\n      0x01\n        /* \"DexSwap/PancakeERC20.sol\":2436:2447  return true */\n      swap1\n      pop\n        /* \"DexSwap/PancakeERC20.sol\":2307:2454  function approve(address spender, uint256 value) external returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"DexSwap/DexPair.sol\":610:631  address public token0 */\n    tag_54:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"DexSwap/PancakeERC20.sol\":357:383  uint256 public totalSupply */\n    tag_56:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"DexSwap/PancakeERC20.sol\":2605:2936  function transferFrom(... */\n    tag_59:\n        /* \"DexSwap/PancakeERC20.sol\":2716:2720  bool */\n      0x00\n        /* \"DexSwap/PancakeERC20.sol\":2775:2777  -1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"DexSwap/PancakeERC20.sol\":2736:2745  allowance */\n      0x02\n        /* \"DexSwap/PancakeERC20.sol\":2736:2751  allowance[from] */\n      0x00\n        /* \"DexSwap/PancakeERC20.sol\":2746:2750  from */\n      dup7\n        /* \"DexSwap/PancakeERC20.sol\":2736:2751  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DexSwap/PancakeERC20.sol\":2736:2763  allowance[from][msg.sender] */\n      0x00\n        /* \"DexSwap/PancakeERC20.sol\":2752:2762  msg.sender */\n      caller\n        /* \"DexSwap/PancakeERC20.sol\":2736:2763  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"DexSwap/PancakeERC20.sol\":2736:2778  allowance[from][msg.sender] != uint256(-1) */\n      eq\n        /* \"DexSwap/PancakeERC20.sol\":2732:2873  if (allowance[from][msg.sender] != uint256(-1)) {... */\n      tag_162\n      jumpi\n        /* \"DexSwap/PancakeERC20.sol\":2824:2862  allowance[from][msg.sender].sub(value) */\n      tag_163\n        /* \"DexSwap/PancakeERC20.sol\":2856:2861  value */\n      dup3\n        /* \"DexSwap/PancakeERC20.sol\":2824:2833  allowance */\n      0x02\n        /* \"DexSwap/PancakeERC20.sol\":2824:2839  allowance[from] */\n      0x00\n        /* \"DexSwap/PancakeERC20.sol\":2834:2838  from */\n      dup8\n        /* \"DexSwap/PancakeERC20.sol\":2824:2839  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DexSwap/PancakeERC20.sol\":2824:2851  allowance[from][msg.sender] */\n      0x00\n        /* \"DexSwap/PancakeERC20.sol\":2840:2850  msg.sender */\n      caller\n        /* \"DexSwap/PancakeERC20.sol\":2824:2851  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"DexSwap/PancakeERC20.sol\":2824:2855  allowance[from][msg.sender].sub */\n      tag_147\n      swap1\n        /* \"DexSwap/PancakeERC20.sol\":2824:2862  allowance[from][msg.sender].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_163:\n        /* \"DexSwap/PancakeERC20.sol\":2794:2803  allowance */\n      0x02\n        /* \"DexSwap/PancakeERC20.sol\":2794:2809  allowance[from] */\n      0x00\n        /* \"DexSwap/PancakeERC20.sol\":2804:2808  from */\n      dup7\n        /* \"DexSwap/PancakeERC20.sol\":2794:2809  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DexSwap/PancakeERC20.sol\":2794:2821  allowance[from][msg.sender] */\n      0x00\n        /* \"DexSwap/PancakeERC20.sol\":2810:2820  msg.sender */\n      caller\n        /* \"DexSwap/PancakeERC20.sol\":2794:2821  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DexSwap/PancakeERC20.sol\":2794:2862  allowance[from][msg.sender] = allowance[from][msg.sender].sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DexSwap/PancakeERC20.sol\":2732:2873  if (allowance[from][msg.sender] != uint256(-1)) {... */\n    tag_162:\n        /* \"DexSwap/PancakeERC20.sol\":2882:2908  _transfer(from, to, value) */\n      tag_164\n        /* \"DexSwap/PancakeERC20.sol\":2892:2896  from */\n      dup5\n        /* \"DexSwap/PancakeERC20.sol\":2898:2900  to */\n      dup5\n        /* \"DexSwap/PancakeERC20.sol\":2902:2907  value */\n      dup5\n        /* \"DexSwap/PancakeERC20.sol\":2882:2891  _transfer */\n      tag_165\n        /* \"DexSwap/PancakeERC20.sol\":2882:2908  _transfer(from, to, value) */\n      jump\t// in\n    tag_164:\n        /* \"DexSwap/PancakeERC20.sol\":2925:2929  true */\n      0x01\n        /* \"DexSwap/PancakeERC20.sol\":2918:2929  return true */\n      swap1\n      pop\n        /* \"DexSwap/PancakeERC20.sol\":2605:2936  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DexSwap/PancakeERC20.sol\":651:759  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_61:\n        /* \"DexSwap/PancakeERC20.sol\":693:759  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"DexSwap/PancakeERC20.sol\":651:759  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x00\n      shl\n      dup2\n      jump\t// out\n        /* \"DexSwap/PancakeERC20.sol\":316:351  uint8 public constant decimals = 18 */\n    tag_63:\n        /* \"DexSwap/PancakeERC20.sol\":349:351  18 */\n      0x12\n        /* \"DexSwap/PancakeERC20.sol\":316:351  uint8 public constant decimals = 18 */\n      dup2\n      jump\t// out\n        /* \"DexSwap/PancakeERC20.sol\":510:541  bytes32 public DOMAIN_SEPARATOR */\n    tag_65:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"DexSwap/DexPair.sol\":2330:2534  function initialize(address _token0, address _token1) external {... */\n    tag_68:\n        /* \"DexSwap/DexPair.sol\":2425:2432  factory */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":2411:2432  msg.sender == factory */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":2411:2421  msg.sender */\n      caller\n        /* \"DexSwap/DexPair.sol\":2411:2432  msg.sender == factory */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"DexSwap/DexPair.sol\":2403:2455  require(msg.sender == factory, 'Pancake: FORBIDDEN') */\n      tag_167\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x12\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x50616e63616b653a20464f5242494444454e0000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_167:\n        /* \"DexSwap/DexPair.sol\":2494:2501  _token0 */\n      dup2\n        /* \"DexSwap/DexPair.sol\":2485:2491  token0 */\n      0x06\n      0x00\n        /* \"DexSwap/DexPair.sol\":2485:2501  token0 = _token0 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"DexSwap/DexPair.sol\":2520:2527  _token1 */\n      dup1\n        /* \"DexSwap/DexPair.sol\":2511:2517  token1 */\n      0x07\n      0x00\n        /* \"DexSwap/DexPair.sol\":2511:2527  token1 = _token1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"DexSwap/DexPair.sol\":2330:2534  function initialize(address _token0, address _token1) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"DexSwap/DexPair.sol\":954:986  uint public price0CumulativeLast */\n    tag_70:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"DexSwap/DexPair.sol\":992:1024  uint public price1CumulativeLast */\n    tag_72:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"DexSwap/DexPair.sol\":4488:5705  function mint(address to) external lock returns (uint liquidity) {... */\n    tag_75:\n        /* \"DexSwap/DexPair.sol\":4537:4551  uint liquidity */\n      0x00\n        /* \"DexSwap/DexPair.sol\":1211:1212  1 */\n      0x01\n        /* \"DexSwap/DexPair.sol\":1199:1207  unlocked */\n      sload(0x0c)\n        /* \"DexSwap/DexPair.sol\":1199:1212  unlocked == 1 */\n      eq\n        /* \"DexSwap/DexPair.sol\":1191:1232  require(unlocked == 1, 'Pancake: LOCKED') */\n      tag_169\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x50616e63616b653a204c4f434b45440000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_169:\n        /* \"DexSwap/DexPair.sol\":1253:1254  0 */\n      0x00\n        /* \"DexSwap/DexPair.sol\":1242:1250  unlocked */\n      0x0c\n        /* \"DexSwap/DexPair.sol\":1242:1254  unlocked = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DexSwap/DexPair.sol\":4564:4581  uint112 _reserve0 */\n      0x00\n        /* \"DexSwap/DexPair.sol\":4583:4600  uint112 _reserve1 */\n      dup1\n        /* \"DexSwap/DexPair.sol\":4605:4618  getReserves() */\n      tag_171\n        /* \"DexSwap/DexPair.sol\":4605:4616  getReserves */\n      tag_49\n        /* \"DexSwap/DexPair.sol\":4605:4618  getReserves() */\n      jump\t// in\n    tag_171:\n        /* \"DexSwap/DexPair.sol\":4563:4618  (uint112 _reserve0, uint112 _reserve1,) = getReserves() */\n      pop\n      swap2\n      pop\n      swap2\n      pop\n        /* \"DexSwap/DexPair.sol\":4643:4656  uint balance0 */\n      0x00\n        /* \"DexSwap/DexPair.sol\":4666:4672  token0 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":4659:4683  IERC20(token0).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"DexSwap/DexPair.sol\":4692:4696  this */\n      address\n        /* \"DexSwap/DexPair.sol\":4659:4698  IERC20(token0).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_172\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_172:\n        /* \"DexSwap/DexPair.sol\":4659:4698  IERC20(token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_173\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_173:\n        /* \"DexSwap/DexPair.sol\":4659:4698  IERC20(token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_174\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_174:\n        /* \"DexSwap/DexPair.sol\":4659:4698  IERC20(token0).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"DexSwap/DexPair.sol\":4643:4698  uint balance0 = IERC20(token0).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"DexSwap/DexPair.sol\":4708:4721  uint balance1 */\n      0x00\n        /* \"DexSwap/DexPair.sol\":4731:4737  token1 */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":4724:4748  IERC20(token1).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"DexSwap/DexPair.sol\":4757:4761  this */\n      address\n        /* \"DexSwap/DexPair.sol\":4724:4763  IERC20(token1).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_175\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_175:\n        /* \"DexSwap/DexPair.sol\":4724:4763  IERC20(token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_176\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_176:\n        /* \"DexSwap/DexPair.sol\":4724:4763  IERC20(token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_177\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_177:\n        /* \"DexSwap/DexPair.sol\":4724:4763  IERC20(token1).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"DexSwap/DexPair.sol\":4708:4763  uint balance1 = IERC20(token1).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"DexSwap/DexPair.sol\":4773:4785  uint amount0 */\n      0x00\n        /* \"DexSwap/DexPair.sol\":4788:4811  balance0.sub(_reserve0) */\n      tag_178\n        /* \"DexSwap/DexPair.sol\":4801:4810  _reserve0 */\n      dup6\n        /* \"DexSwap/DexPair.sol\":4788:4811  balance0.sub(_reserve0) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":4788:4796  balance0 */\n      dup5\n        /* \"DexSwap/DexPair.sol\":4788:4800  balance0.sub */\n      tag_147\n      swap1\n        /* \"DexSwap/DexPair.sol\":4788:4811  balance0.sub(_reserve0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_178:\n        /* \"DexSwap/DexPair.sol\":4773:4811  uint amount0 = balance0.sub(_reserve0) */\n      swap1\n      pop\n        /* \"DexSwap/DexPair.sol\":4821:4833  uint amount1 */\n      0x00\n        /* \"DexSwap/DexPair.sol\":4836:4859  balance1.sub(_reserve1) */\n      tag_179\n        /* \"DexSwap/DexPair.sol\":4849:4858  _reserve1 */\n      dup6\n        /* \"DexSwap/DexPair.sol\":4836:4859  balance1.sub(_reserve1) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":4836:4844  balance1 */\n      dup5\n        /* \"DexSwap/DexPair.sol\":4836:4848  balance1.sub */\n      tag_147\n      swap1\n        /* \"DexSwap/DexPair.sol\":4836:4859  balance1.sub(_reserve1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_179:\n        /* \"DexSwap/DexPair.sol\":4821:4859  uint amount1 = balance1.sub(_reserve1) */\n      swap1\n      pop\n        /* \"DexSwap/DexPair.sol\":4870:4880  bool feeOn */\n      0x00\n        /* \"DexSwap/DexPair.sol\":4883:4913  _mintFee(_reserve0, _reserve1) */\n      tag_180\n        /* \"DexSwap/DexPair.sol\":4892:4901  _reserve0 */\n      dup8\n        /* \"DexSwap/DexPair.sol\":4903:4912  _reserve1 */\n      dup8\n        /* \"DexSwap/DexPair.sol\":4883:4891  _mintFee */\n      tag_181\n        /* \"DexSwap/DexPair.sol\":4883:4913  _mintFee(_reserve0, _reserve1) */\n      jump\t// in\n    tag_180:\n        /* \"DexSwap/DexPair.sol\":4870:4913  bool feeOn = _mintFee(_reserve0, _reserve1) */\n      swap1\n      pop\n        /* \"DexSwap/DexPair.sol\":4923:4940  uint _totalSupply */\n      0x00\n        /* \"DexSwap/DexPair.sol\":4943:4954  totalSupply */\n      dup1\n      sload\n        /* \"DexSwap/DexPair.sol\":4923:4954  uint _totalSupply = totalSupply */\n      swap1\n      pop\n        /* \"DexSwap/DexPair.sol\":5062:5063  0 */\n      0x00\n        /* \"DexSwap/DexPair.sol\":5046:5058  _totalSupply */\n      dup2\n        /* \"DexSwap/DexPair.sol\":5046:5063  _totalSupply == 0 */\n      eq\n        /* \"DexSwap/DexPair.sol\":5042:5389  if (_totalSupply == 0) {... */\n      iszero\n      tag_182\n      jumpi\n        /* \"DexSwap/DexPair.sol\":5091:5145  Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY) */\n      tag_183\n        /* \"DexSwap/DexPair.sol\":476:481  10**3 */\n      0x03e8\n        /* \"DexSwap/DexPair.sol\":5091:5122  Math.sqrt(amount0.mul(amount1)) */\n      tag_184\n        /* \"DexSwap/DexPair.sol\":5101:5121  amount0.mul(amount1) */\n      tag_185\n        /* \"DexSwap/DexPair.sol\":5113:5120  amount1 */\n      dup7\n        /* \"DexSwap/DexPair.sol\":5101:5108  amount0 */\n      dup9\n        /* \"DexSwap/DexPair.sol\":5101:5112  amount0.mul */\n      tag_145\n      swap1\n        /* \"DexSwap/DexPair.sol\":5101:5121  amount0.mul(amount1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_185:\n        /* \"DexSwap/DexPair.sol\":5091:5100  Math.sqrt */\n      tag_186\n        /* \"DexSwap/DexPair.sol\":5091:5122  Math.sqrt(amount0.mul(amount1)) */\n      jump\t// in\n    tag_184:\n        /* \"DexSwap/DexPair.sol\":5091:5126  Math.sqrt(amount0.mul(amount1)).sub */\n      tag_147\n      swap1\n        /* \"DexSwap/DexPair.sol\":5091:5145  Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_183:\n        /* \"DexSwap/DexPair.sol\":5079:5145  liquidity = Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY) */\n      swap9\n      pop\n        /* \"DexSwap/DexPair.sol\":5158:5194  _mint(address(0), MINIMUM_LIQUIDITY) */\n      tag_187\n        /* \"DexSwap/DexPair.sol\":5172:5173  0 */\n      0x00\n        /* \"DexSwap/DexPair.sol\":476:481  10**3 */\n      0x03e8\n        /* \"DexSwap/DexPair.sol\":5158:5163  _mint */\n      tag_188\n        /* \"DexSwap/DexPair.sol\":5158:5194  _mint(address(0), MINIMUM_LIQUIDITY) */\n      jump\t// in\n    tag_187:\n        /* \"DexSwap/DexPair.sol\":5042:5389  if (_totalSupply == 0) {... */\n      jump(tag_189)\n    tag_182:\n        /* \"DexSwap/DexPair.sol\":5292:5378  Math.min(amount0.mul(_totalSupply) / _reserve0, amount1.mul(_totalSupply) / _reserve1) */\n      tag_190\n        /* \"DexSwap/DexPair.sol\":5329:5338  _reserve0 */\n      dup9\n        /* \"DexSwap/DexPair.sol\":5301:5338  amount0.mul(_totalSupply) / _reserve0 */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":5301:5326  amount0.mul(_totalSupply) */\n      tag_191\n        /* \"DexSwap/DexPair.sol\":5313:5325  _totalSupply */\n      dup4\n        /* \"DexSwap/DexPair.sol\":5301:5308  amount0 */\n      dup8\n        /* \"DexSwap/DexPair.sol\":5301:5312  amount0.mul */\n      tag_145\n      swap1\n        /* \"DexSwap/DexPair.sol\":5301:5326  amount0.mul(_totalSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_191:\n        /* \"DexSwap/DexPair.sol\":5301:5338  amount0.mul(_totalSupply) / _reserve0 */\n      dup2\n      tag_192\n      jumpi\n      invalid\n    tag_192:\n      div\n        /* \"DexSwap/DexPair.sol\":5368:5377  _reserve1 */\n      dup9\n        /* \"DexSwap/DexPair.sol\":5340:5377  amount1.mul(_totalSupply) / _reserve1 */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":5340:5365  amount1.mul(_totalSupply) */\n      tag_193\n        /* \"DexSwap/DexPair.sol\":5352:5364  _totalSupply */\n      dup5\n        /* \"DexSwap/DexPair.sol\":5340:5347  amount1 */\n      dup8\n        /* \"DexSwap/DexPair.sol\":5340:5351  amount1.mul */\n      tag_145\n      swap1\n        /* \"DexSwap/DexPair.sol\":5340:5365  amount1.mul(_totalSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_193:\n        /* \"DexSwap/DexPair.sol\":5340:5377  amount1.mul(_totalSupply) / _reserve1 */\n      dup2\n      tag_194\n      jumpi\n      invalid\n    tag_194:\n      div\n        /* \"DexSwap/DexPair.sol\":5292:5300  Math.min */\n      tag_195\n        /* \"DexSwap/DexPair.sol\":5292:5378  Math.min(amount0.mul(_totalSupply) / _reserve0, amount1.mul(_totalSupply) / _reserve1) */\n      jump\t// in\n    tag_190:\n        /* \"DexSwap/DexPair.sol\":5280:5378  liquidity = Math.min(amount0.mul(_totalSupply) / _reserve0, amount1.mul(_totalSupply) / _reserve1) */\n      swap9\n      pop\n        /* \"DexSwap/DexPair.sol\":5042:5389  if (_totalSupply == 0) {... */\n    tag_189:\n        /* \"DexSwap/DexPair.sol\":5418:5419  0 */\n      0x00\n        /* \"DexSwap/DexPair.sol\":5406:5415  liquidity */\n      dup10\n        /* \"DexSwap/DexPair.sol\":5406:5419  liquidity > 0 */\n      gt\n        /* \"DexSwap/DexPair.sol\":5398:5462  require(liquidity > 0, 'Pancake: INSUFFICIENT_LIQUIDITY_MINTED') */\n      tag_196\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ef633320352a650c1d75752f13e6c73d8d8f7f26a5596a6d026c1bf50d2f7713\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_196:\n        /* \"DexSwap/DexPair.sol\":5472:5492  _mint(to, liquidity) */\n      tag_197\n        /* \"DexSwap/DexPair.sol\":5478:5480  to */\n      dup11\n        /* \"DexSwap/DexPair.sol\":5482:5491  liquidity */\n      dup11\n        /* \"DexSwap/DexPair.sol\":5472:5477  _mint */\n      tag_188\n        /* \"DexSwap/DexPair.sol\":5472:5492  _mint(to, liquidity) */\n      jump\t// in\n    tag_197:\n        /* \"DexSwap/DexPair.sol\":5503:5552  _update(balance0, balance1, _reserve0, _reserve1) */\n      tag_198\n        /* \"DexSwap/DexPair.sol\":5511:5519  balance0 */\n      dup7\n        /* \"DexSwap/DexPair.sol\":5521:5529  balance1 */\n      dup7\n        /* \"DexSwap/DexPair.sol\":5531:5540  _reserve0 */\n      dup11\n        /* \"DexSwap/DexPair.sol\":5542:5551  _reserve1 */\n      dup11\n        /* \"DexSwap/DexPair.sol\":5503:5510  _update */\n      tag_156\n        /* \"DexSwap/DexPair.sol\":5503:5552  _update(balance0, balance1, _reserve0, _reserve1) */\n      jump\t// in\n    tag_198:\n        /* \"DexSwap/DexPair.sol\":5566:5571  feeOn */\n      dup2\n        /* \"DexSwap/DexPair.sol\":5562:5609  if (feeOn) kLast = uint(reserve0).mul(reserve1) */\n      iszero\n      tag_199\n      jumpi\n        /* \"DexSwap/DexPair.sol\":5581:5609  uint(reserve0).mul(reserve1) */\n      tag_200\n        /* \"DexSwap/DexPair.sol\":5600:5608  reserve1 */\n      0x08\n      0x0e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":5581:5609  uint(reserve0).mul(reserve1) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":5586:5594  reserve0 */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":5581:5595  uint(reserve0) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":5581:5599  uint(reserve0).mul */\n      tag_145\n      swap1\n        /* \"DexSwap/DexPair.sol\":5581:5609  uint(reserve0).mul(reserve1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_200:\n        /* \"DexSwap/DexPair.sol\":5573:5578  kLast */\n      0x0b\n        /* \"DexSwap/DexPair.sol\":5573:5609  kLast = uint(reserve0).mul(reserve1) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DexSwap/DexPair.sol\":5562:5609  if (feeOn) kLast = uint(reserve0).mul(reserve1) */\n    tag_199:\n        /* \"DexSwap/DexPair.sol\":5669:5679  msg.sender */\n      caller\n        /* \"DexSwap/DexPair.sol\":5664:5698  Mint(msg.sender, amount0, amount1) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\n        /* \"DexSwap/DexPair.sol\":5681:5688  amount0 */\n      dup6\n        /* \"DexSwap/DexPair.sol\":5690:5697  amount1 */\n      dup6\n        /* \"DexSwap/DexPair.sol\":5664:5698  Mint(msg.sender, amount0, amount1) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"DexSwap/DexPair.sol\":1264:1265  _ */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"DexSwap/DexPair.sol\":1286:1287  1 */\n      0x01\n        /* \"DexSwap/DexPair.sol\":1275:1283  unlocked */\n      0x0c\n        /* \"DexSwap/DexPair.sol\":1275:1287  unlocked = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DexSwap/DexPair.sol\":4488:5705  function mint(address to) external lock returns (uint liquidity) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"DexSwap/PancakeERC20.sol\":389:433  mapping(address => uint256) public balanceOf */\n    tag_78:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"DexSwap/DexPair.sol\":1030:1047  uint public kLast */\n    tag_80:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"DexSwap/PancakeERC20.sol\":765:806  mapping(address => uint256) public nonces */\n    tag_83:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"DexSwap/DexPair.sol\":5814:7256  function burn(address to) external lock returns (uint amount0, uint amount1) {... */\n    tag_86:\n        /* \"DexSwap/DexPair.sol\":5863:5875  uint amount0 */\n      0x00\n        /* \"DexSwap/DexPair.sol\":5877:5889  uint amount1 */\n      dup1\n        /* \"DexSwap/DexPair.sol\":1211:1212  1 */\n      0x01\n        /* \"DexSwap/DexPair.sol\":1199:1207  unlocked */\n      sload(0x0c)\n        /* \"DexSwap/DexPair.sol\":1199:1212  unlocked == 1 */\n      eq\n        /* \"DexSwap/DexPair.sol\":1191:1232  require(unlocked == 1, 'Pancake: LOCKED') */\n      tag_202\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x50616e63616b653a204c4f434b45440000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_202:\n        /* \"DexSwap/DexPair.sol\":1253:1254  0 */\n      0x00\n        /* \"DexSwap/DexPair.sol\":1242:1250  unlocked */\n      0x0c\n        /* \"DexSwap/DexPair.sol\":1242:1254  unlocked = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DexSwap/DexPair.sol\":5902:5919  uint112 _reserve0 */\n      0x00\n        /* \"DexSwap/DexPair.sol\":5921:5938  uint112 _reserve1 */\n      dup1\n        /* \"DexSwap/DexPair.sol\":5943:5956  getReserves() */\n      tag_204\n        /* \"DexSwap/DexPair.sol\":5943:5954  getReserves */\n      tag_49\n        /* \"DexSwap/DexPair.sol\":5943:5956  getReserves() */\n      jump\t// in\n    tag_204:\n        /* \"DexSwap/DexPair.sol\":5901:5956  (uint112 _reserve0, uint112 _reserve1,) = getReserves() */\n      pop\n      swap2\n      pop\n      swap2\n      pop\n        /* \"DexSwap/DexPair.sol\":5981:5996  address _token0 */\n      0x00\n        /* \"DexSwap/DexPair.sol\":5999:6005  token0 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":5981:6005  address _token0 = token0 */\n      swap1\n      pop\n        /* \"DexSwap/DexPair.sol\":6061:6076  address _token1 */\n      0x00\n        /* \"DexSwap/DexPair.sol\":6079:6085  token1 */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":6061:6085  address _token1 = token1 */\n      swap1\n      pop\n        /* \"DexSwap/DexPair.sol\":6141:6154  uint balance0 */\n      0x00\n        /* \"DexSwap/DexPair.sol\":6164:6171  _token0 */\n      dup3\n        /* \"DexSwap/DexPair.sol\":6157:6182  IERC20(_token0).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"DexSwap/DexPair.sol\":6191:6195  this */\n      address\n        /* \"DexSwap/DexPair.sol\":6157:6197  IERC20(_token0).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_205\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_205:\n        /* \"DexSwap/DexPair.sol\":6157:6197  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_206\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_206:\n        /* \"DexSwap/DexPair.sol\":6157:6197  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_207\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_207:\n        /* \"DexSwap/DexPair.sol\":6157:6197  IERC20(_token0).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"DexSwap/DexPair.sol\":6141:6197  uint balance0 = IERC20(_token0).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"DexSwap/DexPair.sol\":6207:6220  uint balance1 */\n      0x00\n        /* \"DexSwap/DexPair.sol\":6230:6237  _token1 */\n      dup3\n        /* \"DexSwap/DexPair.sol\":6223:6248  IERC20(_token1).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"DexSwap/DexPair.sol\":6257:6261  this */\n      address\n        /* \"DexSwap/DexPair.sol\":6223:6263  IERC20(_token1).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_208\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_208:\n        /* \"DexSwap/DexPair.sol\":6223:6263  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_209\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_209:\n        /* \"DexSwap/DexPair.sol\":6223:6263  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_210\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_210:\n        /* \"DexSwap/DexPair.sol\":6223:6263  IERC20(_token1).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"DexSwap/DexPair.sol\":6207:6263  uint balance1 = IERC20(_token1).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"DexSwap/DexPair.sol\":6273:6287  uint liquidity */\n      0x00\n        /* \"DexSwap/DexPair.sol\":6290:6299  balanceOf */\n      0x01\n        /* \"DexSwap/DexPair.sol\":6290:6314  balanceOf[address(this)] */\n      0x00\n        /* \"DexSwap/DexPair.sol\":6308:6312  this */\n      address\n        /* \"DexSwap/DexPair.sol\":6290:6314  balanceOf[address(this)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"DexSwap/DexPair.sol\":6273:6314  uint liquidity = balanceOf[address(this)] */\n      swap1\n      pop\n        /* \"DexSwap/DexPair.sol\":6325:6335  bool feeOn */\n      0x00\n        /* \"DexSwap/DexPair.sol\":6338:6368  _mintFee(_reserve0, _reserve1) */\n      tag_211\n        /* \"DexSwap/DexPair.sol\":6347:6356  _reserve0 */\n      dup9\n        /* \"DexSwap/DexPair.sol\":6358:6367  _reserve1 */\n      dup9\n        /* \"DexSwap/DexPair.sol\":6338:6346  _mintFee */\n      tag_181\n        /* \"DexSwap/DexPair.sol\":6338:6368  _mintFee(_reserve0, _reserve1) */\n      jump\t// in\n    tag_211:\n        /* \"DexSwap/DexPair.sol\":6325:6368  bool feeOn = _mintFee(_reserve0, _reserve1) */\n      swap1\n      pop\n        /* \"DexSwap/DexPair.sol\":6378:6395  uint _totalSupply */\n      0x00\n        /* \"DexSwap/DexPair.sol\":6398:6409  totalSupply */\n      dup1\n      sload\n        /* \"DexSwap/DexPair.sol\":6378:6409  uint _totalSupply = totalSupply */\n      swap1\n      pop\n        /* \"DexSwap/DexPair.sol\":6533:6545  _totalSupply */\n      dup1\n        /* \"DexSwap/DexPair.sol\":6507:6530  liquidity.mul(balance0) */\n      tag_212\n        /* \"DexSwap/DexPair.sol\":6521:6529  balance0 */\n      dup7\n        /* \"DexSwap/DexPair.sol\":6507:6516  liquidity */\n      dup6\n        /* \"DexSwap/DexPair.sol\":6507:6520  liquidity.mul */\n      tag_145\n      swap1\n        /* \"DexSwap/DexPair.sol\":6507:6530  liquidity.mul(balance0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_212:\n        /* \"DexSwap/DexPair.sol\":6507:6545  liquidity.mul(balance0) / _totalSupply */\n      dup2\n      tag_213\n      jumpi\n      invalid\n    tag_213:\n      div\n        /* \"DexSwap/DexPair.sol\":6497:6545  amount0 = liquidity.mul(balance0) / _totalSupply */\n      swap11\n      pop\n        /* \"DexSwap/DexPair.sol\":6639:6651  _totalSupply */\n      dup1\n        /* \"DexSwap/DexPair.sol\":6613:6636  liquidity.mul(balance1) */\n      tag_214\n        /* \"DexSwap/DexPair.sol\":6627:6635  balance1 */\n      dup6\n        /* \"DexSwap/DexPair.sol\":6613:6622  liquidity */\n      dup6\n        /* \"DexSwap/DexPair.sol\":6613:6626  liquidity.mul */\n      tag_145\n      swap1\n        /* \"DexSwap/DexPair.sol\":6613:6636  liquidity.mul(balance1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_214:\n        /* \"DexSwap/DexPair.sol\":6613:6651  liquidity.mul(balance1) / _totalSupply */\n      dup2\n      tag_215\n      jumpi\n      invalid\n    tag_215:\n      div\n        /* \"DexSwap/DexPair.sol\":6603:6651  amount1 = liquidity.mul(balance1) / _totalSupply */\n      swap10\n      pop\n        /* \"DexSwap/DexPair.sol\":6727:6728  0 */\n      0x00\n        /* \"DexSwap/DexPair.sol\":6717:6724  amount0 */\n      dup12\n        /* \"DexSwap/DexPair.sol\":6717:6728  amount0 > 0 */\n      gt\n        /* \"DexSwap/DexPair.sol\":6717:6743  amount0 > 0 && amount1 > 0 */\n      dup1\n      iszero\n      tag_216\n      jumpi\n      pop\n        /* \"DexSwap/DexPair.sol\":6742:6743  0 */\n      0x00\n        /* \"DexSwap/DexPair.sol\":6732:6739  amount1 */\n      dup11\n        /* \"DexSwap/DexPair.sol\":6732:6743  amount1 > 0 */\n      gt\n        /* \"DexSwap/DexPair.sol\":6717:6743  amount0 > 0 && amount1 > 0 */\n    tag_216:\n        /* \"DexSwap/DexPair.sol\":6709:6786  require(amount0 > 0 && amount1 > 0, 'Pancake: INSUFFICIENT_LIQUIDITY_BURNED') */\n      tag_217\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_6c050b0a8d3f2d18d11271ee0a551b7748437b8fa9a6165c561190d34a2947d6\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_217:\n        /* \"DexSwap/DexPair.sol\":6796:6827  _burn(address(this), liquidity) */\n      tag_218\n        /* \"DexSwap/DexPair.sol\":6810:6814  this */\n      address\n        /* \"DexSwap/DexPair.sol\":6817:6826  liquidity */\n      dup5\n        /* \"DexSwap/DexPair.sol\":6796:6801  _burn */\n      tag_219\n        /* \"DexSwap/DexPair.sol\":6796:6827  _burn(address(this), liquidity) */\n      jump\t// in\n    tag_218:\n        /* \"DexSwap/DexPair.sol\":6837:6872  _safeTransfer(_token0, to, amount0) */\n      tag_220\n        /* \"DexSwap/DexPair.sol\":6851:6858  _token0 */\n      dup8\n        /* \"DexSwap/DexPair.sol\":6860:6862  to */\n      dup14\n        /* \"DexSwap/DexPair.sol\":6864:6871  amount0 */\n      dup14\n        /* \"DexSwap/DexPair.sol\":6837:6850  _safeTransfer */\n      tag_125\n        /* \"DexSwap/DexPair.sol\":6837:6872  _safeTransfer(_token0, to, amount0) */\n      jump\t// in\n    tag_220:\n        /* \"DexSwap/DexPair.sol\":6882:6917  _safeTransfer(_token1, to, amount1) */\n      tag_221\n        /* \"DexSwap/DexPair.sol\":6896:6903  _token1 */\n      dup7\n        /* \"DexSwap/DexPair.sol\":6905:6907  to */\n      dup14\n        /* \"DexSwap/DexPair.sol\":6909:6916  amount1 */\n      dup13\n        /* \"DexSwap/DexPair.sol\":6882:6895  _safeTransfer */\n      tag_125\n        /* \"DexSwap/DexPair.sol\":6882:6917  _safeTransfer(_token1, to, amount1) */\n      jump\t// in\n    tag_221:\n        /* \"DexSwap/DexPair.sol\":6945:6952  _token0 */\n      dup7\n        /* \"DexSwap/DexPair.sol\":6938:6963  IERC20(_token0).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"DexSwap/DexPair.sol\":6972:6976  this */\n      address\n        /* \"DexSwap/DexPair.sol\":6938:6978  IERC20(_token0).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_222\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_222:\n        /* \"DexSwap/DexPair.sol\":6938:6978  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_223\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_223:\n        /* \"DexSwap/DexPair.sol\":6938:6978  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_224\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_224:\n        /* \"DexSwap/DexPair.sol\":6938:6978  IERC20(_token0).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"DexSwap/DexPair.sol\":6927:6978  balance0 = IERC20(_token0).balanceOf(address(this)) */\n      swap5\n      pop\n        /* \"DexSwap/DexPair.sol\":7006:7013  _token1 */\n      dup6\n        /* \"DexSwap/DexPair.sol\":6999:7024  IERC20(_token1).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"DexSwap/DexPair.sol\":7033:7037  this */\n      address\n        /* \"DexSwap/DexPair.sol\":6999:7039  IERC20(_token1).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_225\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_225:\n        /* \"DexSwap/DexPair.sol\":6999:7039  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_226\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_226:\n        /* \"DexSwap/DexPair.sol\":6999:7039  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_227\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_227:\n        /* \"DexSwap/DexPair.sol\":6999:7039  IERC20(_token1).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"DexSwap/DexPair.sol\":6988:7039  balance1 = IERC20(_token1).balanceOf(address(this)) */\n      swap4\n      pop\n        /* \"DexSwap/DexPair.sol\":7050:7099  _update(balance0, balance1, _reserve0, _reserve1) */\n      tag_228\n        /* \"DexSwap/DexPair.sol\":7058:7066  balance0 */\n      dup6\n        /* \"DexSwap/DexPair.sol\":7068:7076  balance1 */\n      dup6\n        /* \"DexSwap/DexPair.sol\":7078:7087  _reserve0 */\n      dup12\n        /* \"DexSwap/DexPair.sol\":7089:7098  _reserve1 */\n      dup12\n        /* \"DexSwap/DexPair.sol\":7050:7057  _update */\n      tag_156\n        /* \"DexSwap/DexPair.sol\":7050:7099  _update(balance0, balance1, _reserve0, _reserve1) */\n      jump\t// in\n    tag_228:\n        /* \"DexSwap/DexPair.sol\":7113:7118  feeOn */\n      dup2\n        /* \"DexSwap/DexPair.sol\":7109:7156  if (feeOn) kLast = uint(reserve0).mul(reserve1) */\n      iszero\n      tag_229\n      jumpi\n        /* \"DexSwap/DexPair.sol\":7128:7156  uint(reserve0).mul(reserve1) */\n      tag_230\n        /* \"DexSwap/DexPair.sol\":7147:7155  reserve1 */\n      0x08\n      0x0e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":7128:7156  uint(reserve0).mul(reserve1) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":7133:7141  reserve0 */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":7128:7142  uint(reserve0) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":7128:7146  uint(reserve0).mul */\n      tag_145\n      swap1\n        /* \"DexSwap/DexPair.sol\":7128:7156  uint(reserve0).mul(reserve1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_230:\n        /* \"DexSwap/DexPair.sol\":7120:7125  kLast */\n      0x0b\n        /* \"DexSwap/DexPair.sol\":7120:7156  kLast = uint(reserve0).mul(reserve1) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DexSwap/DexPair.sol\":7109:7156  if (feeOn) kLast = uint(reserve0).mul(reserve1) */\n    tag_229:\n        /* \"DexSwap/DexPair.sol\":7246:7248  to */\n      dup12\n        /* \"DexSwap/DexPair.sol\":7211:7249  Burn(msg.sender, amount0, amount1, to) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":7216:7226  msg.sender */\n      caller\n        /* \"DexSwap/DexPair.sol\":7211:7249  Burn(msg.sender, amount0, amount1, to) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496\n        /* \"DexSwap/DexPair.sol\":7228:7235  amount0 */\n      dup14\n        /* \"DexSwap/DexPair.sol\":7237:7244  amount1 */\n      dup14\n        /* \"DexSwap/DexPair.sol\":7211:7249  Burn(msg.sender, amount0, amount1, to) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"DexSwap/DexPair.sol\":1264:1265  _ */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"DexSwap/DexPair.sol\":1286:1287  1 */\n      0x01\n        /* \"DexSwap/DexPair.sol\":1275:1283  unlocked */\n      0x0c\n        /* \"DexSwap/DexPair.sol\":1275:1287  unlocked = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DexSwap/DexPair.sol\":5814:7256  function burn(address to) external lock returns (uint amount0, uint amount1) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"DexSwap/PancakeERC20.sol\":266:310  string public constant symbol = \"DexSwap-LP\" */\n    tag_88:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0a\n      dup2\n      mstore\n      0x20\n      add\n      0x446578537761702d4c5000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"DexSwap/PancakeERC20.sol\":2460:2599  function transfer(address to, uint256 value) external returns (bool) {... */\n    tag_95:\n        /* \"DexSwap/PancakeERC20.sol\":2523:2527  bool */\n      0x00\n        /* \"DexSwap/PancakeERC20.sol\":2539:2571  _transfer(msg.sender, to, value) */\n      tag_232\n        /* \"DexSwap/PancakeERC20.sol\":2549:2559  msg.sender */\n      caller\n        /* \"DexSwap/PancakeERC20.sol\":2561:2563  to */\n      dup5\n        /* \"DexSwap/PancakeERC20.sol\":2565:2570  value */\n      dup5\n        /* \"DexSwap/PancakeERC20.sol\":2539:2548  _transfer */\n      tag_165\n        /* \"DexSwap/PancakeERC20.sol\":2539:2571  _transfer(msg.sender, to, value) */\n      jump\t// in\n    tag_232:\n        /* \"DexSwap/PancakeERC20.sol\":2588:2592  true */\n      0x01\n        /* \"DexSwap/PancakeERC20.sol\":2581:2592  return true */\n      swap1\n      pop\n        /* \"DexSwap/PancakeERC20.sol\":2460:2599  function transfer(address to, uint256 value) external returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"DexSwap/DexPair.sol\":435:481  uint public constant MINIMUM_LIQUIDITY = 10**3 */\n    tag_97:\n        /* \"DexSwap/DexPair.sol\":476:481  10**3 */\n      0x03e8\n        /* \"DexSwap/DexPair.sol\":435:481  uint public constant MINIMUM_LIQUIDITY = 10**3 */\n      dup2\n      jump\t// out\n        /* \"DexSwap/DexPair.sol\":9267:9596  function skim(address to) external lock {... */\n    tag_100:\n        /* \"DexSwap/DexPair.sol\":1211:1212  1 */\n      0x01\n        /* \"DexSwap/DexPair.sol\":1199:1207  unlocked */\n      sload(0x0c)\n        /* \"DexSwap/DexPair.sol\":1199:1212  unlocked == 1 */\n      eq\n        /* \"DexSwap/DexPair.sol\":1191:1232  require(unlocked == 1, 'Pancake: LOCKED') */\n      tag_234\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x50616e63616b653a204c4f434b45440000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_234:\n        /* \"DexSwap/DexPair.sol\":1253:1254  0 */\n      0x00\n        /* \"DexSwap/DexPair.sol\":1242:1250  unlocked */\n      0x0c\n        /* \"DexSwap/DexPair.sol\":1242:1254  unlocked = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DexSwap/DexPair.sol\":9317:9332  address _token0 */\n      0x00\n        /* \"DexSwap/DexPair.sol\":9335:9341  token0 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":9317:9341  address _token0 = token0 */\n      swap1\n      pop\n        /* \"DexSwap/DexPair.sol\":9366:9381  address _token1 */\n      0x00\n        /* \"DexSwap/DexPair.sol\":9384:9390  token1 */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":9366:9390  address _token1 = token1 */\n      swap1\n      pop\n        /* \"DexSwap/DexPair.sol\":9415:9497  _safeTransfer(_token0, to, IERC20(_token0).balanceOf(address(this)).sub(reserve0)) */\n      tag_236\n        /* \"DexSwap/DexPair.sol\":9429:9436  _token0 */\n      dup3\n        /* \"DexSwap/DexPair.sol\":9438:9440  to */\n      dup5\n        /* \"DexSwap/DexPair.sol\":9442:9496  IERC20(_token0).balanceOf(address(this)).sub(reserve0) */\n      tag_237\n        /* \"DexSwap/DexPair.sol\":9487:9495  reserve0 */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":9442:9496  IERC20(_token0).balanceOf(address(this)).sub(reserve0) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":9449:9456  _token0 */\n      dup7\n        /* \"DexSwap/DexPair.sol\":9442:9467  IERC20(_token0).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"DexSwap/DexPair.sol\":9476:9480  this */\n      address\n        /* \"DexSwap/DexPair.sol\":9442:9482  IERC20(_token0).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_238\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_238:\n        /* \"DexSwap/DexPair.sol\":9442:9482  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_239\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_239:\n        /* \"DexSwap/DexPair.sol\":9442:9482  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_240\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_240:\n        /* \"DexSwap/DexPair.sol\":9442:9482  IERC20(_token0).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"DexSwap/DexPair.sol\":9442:9486  IERC20(_token0).balanceOf(address(this)).sub */\n      tag_147\n      swap1\n        /* \"DexSwap/DexPair.sol\":9442:9496  IERC20(_token0).balanceOf(address(this)).sub(reserve0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_237:\n        /* \"DexSwap/DexPair.sol\":9415:9428  _safeTransfer */\n      tag_125\n        /* \"DexSwap/DexPair.sol\":9415:9497  _safeTransfer(_token0, to, IERC20(_token0).balanceOf(address(this)).sub(reserve0)) */\n      jump\t// in\n    tag_236:\n        /* \"DexSwap/DexPair.sol\":9507:9589  _safeTransfer(_token1, to, IERC20(_token1).balanceOf(address(this)).sub(reserve1)) */\n      tag_241\n        /* \"DexSwap/DexPair.sol\":9521:9528  _token1 */\n      dup2\n        /* \"DexSwap/DexPair.sol\":9530:9532  to */\n      dup5\n        /* \"DexSwap/DexPair.sol\":9534:9588  IERC20(_token1).balanceOf(address(this)).sub(reserve1) */\n      tag_242\n        /* \"DexSwap/DexPair.sol\":9579:9587  reserve1 */\n      0x08\n      0x0e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":9534:9588  IERC20(_token1).balanceOf(address(this)).sub(reserve1) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":9541:9548  _token1 */\n      dup6\n        /* \"DexSwap/DexPair.sol\":9534:9559  IERC20(_token1).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"DexSwap/DexPair.sol\":9568:9572  this */\n      address\n        /* \"DexSwap/DexPair.sol\":9534:9574  IERC20(_token1).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_243\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_243:\n        /* \"DexSwap/DexPair.sol\":9534:9574  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_244\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_244:\n        /* \"DexSwap/DexPair.sol\":9534:9574  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_245\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_245:\n        /* \"DexSwap/DexPair.sol\":9534:9574  IERC20(_token1).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"DexSwap/DexPair.sol\":9534:9578  IERC20(_token1).balanceOf(address(this)).sub */\n      tag_147\n      swap1\n        /* \"DexSwap/DexPair.sol\":9534:9588  IERC20(_token1).balanceOf(address(this)).sub(reserve1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_242:\n        /* \"DexSwap/DexPair.sol\":9507:9520  _safeTransfer */\n      tag_125\n        /* \"DexSwap/DexPair.sol\":9507:9589  _safeTransfer(_token1, to, IERC20(_token1).balanceOf(address(this)).sub(reserve1)) */\n      jump\t// in\n    tag_241:\n        /* \"DexSwap/DexPair.sol\":1264:1265  _ */\n      pop\n      pop\n        /* \"DexSwap/DexPair.sol\":1286:1287  1 */\n      0x01\n        /* \"DexSwap/DexPair.sol\":1275:1283  unlocked */\n      0x0c\n        /* \"DexSwap/DexPair.sol\":1275:1287  unlocked = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DexSwap/DexPair.sol\":9267:9596  function skim(address to) external lock {... */\n      pop\n      jump\t// out\n        /* \"DexSwap/DexPair.sol\":582:604  address public factory */\n    tag_102:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"DexSwap/DexPair.sol\":637:658  address public token1 */\n    tag_104:\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"DexSwap/PancakeERC20.sol\":2942:3668  function permit(... */\n    tag_107:\n        /* \"DexSwap/PancakeERC20.sol\":3155:3170  block.timestamp */\n      timestamp\n        /* \"DexSwap/PancakeERC20.sol\":3143:3151  deadline */\n      dup5\n        /* \"DexSwap/PancakeERC20.sol\":3143:3170  deadline >= block.timestamp */\n      lt\n      iszero\n        /* \"DexSwap/PancakeERC20.sol\":3135:3191  require(deadline >= block.timestamp, \"Pancake: EXPIRED\") */\n      tag_247\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x10\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x50616e63616b653a204558504952454400000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_247:\n        /* \"DexSwap/PancakeERC20.sol\":3201:3215  bytes32 digest */\n      0x00\n        /* \"DexSwap/PancakeERC20.sol\":3303:3319  DOMAIN_SEPARATOR */\n      sload(0x03)\n        /* \"DexSwap/PancakeERC20.sol\":693:759  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"DexSwap/PancakeERC20.sol\":3358:3373  PERMIT_TYPEHASH */\n      0x00\n      shl\n        /* \"DexSwap/PancakeERC20.sol\":3375:3380  owner */\n      dup10\n        /* \"DexSwap/PancakeERC20.sol\":3382:3389  spender */\n      dup10\n        /* \"DexSwap/PancakeERC20.sol\":3391:3396  value */\n      dup10\n        /* \"DexSwap/PancakeERC20.sol\":3398:3404  nonces */\n      0x04\n        /* \"DexSwap/PancakeERC20.sol\":3398:3411  nonces[owner] */\n      0x00\n        /* \"DexSwap/PancakeERC20.sol\":3405:3410  owner */\n      dup15\n        /* \"DexSwap/PancakeERC20.sol\":3398:3411  nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"DexSwap/PancakeERC20.sol\":3398:3413  nonces[owner]++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"DexSwap/PancakeERC20.sol\":3415:3423  deadline */\n      dup11\n        /* \"DexSwap/PancakeERC20.sol\":3347:3424  abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline) */\n      add(0x20, mload(0x40))\n      dup1\n      dup8\n      dup2\n      mstore\n      0x20\n      add\n      dup7\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"DexSwap/PancakeERC20.sol\":3347:3424  abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline) */\n      swap1\n      0x40\n      mstore\n        /* \"DexSwap/PancakeERC20.sol\":3337:3425  keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"DexSwap/PancakeERC20.sol\":3241:3439  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      dup1\n      dup1\n      0x1901000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x02\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"DexSwap/PancakeERC20.sol\":3241:3439  abi.encodePacked(... */\n      swap1\n      0x40\n      mstore\n        /* \"DexSwap/PancakeERC20.sol\":3218:3449  keccak256(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"DexSwap/PancakeERC20.sol\":3201:3449  bytes32 digest = keccak256(... */\n      swap1\n      pop\n        /* \"DexSwap/PancakeERC20.sol\":3459:3483  address recoveredAddress */\n      0x00\n        /* \"DexSwap/PancakeERC20.sol\":3486:3512  ecrecover(digest, v, r, s) */\n      0x01\n        /* \"DexSwap/PancakeERC20.sol\":3496:3502  digest */\n      dup3\n        /* \"DexSwap/PancakeERC20.sol\":3504:3505  v */\n      dup7\n        /* \"DexSwap/PancakeERC20.sol\":3507:3508  r */\n      dup7\n        /* \"DexSwap/PancakeERC20.sol\":3510:3511  s */\n      dup7\n        /* \"DexSwap/PancakeERC20.sol\":3486:3512  ecrecover(digest, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_248\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_248:\n        /* \"DexSwap/PancakeERC20.sol\":3486:3512  ecrecover(digest, v, r, s) */\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"DexSwap/PancakeERC20.sol\":3459:3512  address recoveredAddress = ecrecover(digest, v, r, s) */\n      swap1\n      pop\n        /* \"DexSwap/PancakeERC20.sol\":3558:3559  0 */\n      0x00\n        /* \"DexSwap/PancakeERC20.sol\":3530:3560  recoveredAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/PancakeERC20.sol\":3530:3546  recoveredAddress */\n      dup2\n        /* \"DexSwap/PancakeERC20.sol\":3530:3560  recoveredAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"DexSwap/PancakeERC20.sol\":3530:3589  recoveredAddress != address(0) && recoveredAddress == owner */\n      dup1\n      iszero\n      tag_249\n      jumpi\n      pop\n        /* \"DexSwap/PancakeERC20.sol\":3584:3589  owner */\n      dup9\n        /* \"DexSwap/PancakeERC20.sol\":3564:3589  recoveredAddress == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/PancakeERC20.sol\":3564:3580  recoveredAddress */\n      dup2\n        /* \"DexSwap/PancakeERC20.sol\":3564:3589  recoveredAddress == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"DexSwap/PancakeERC20.sol\":3530:3589  recoveredAddress != address(0) && recoveredAddress == owner */\n    tag_249:\n        /* \"DexSwap/PancakeERC20.sol\":3522:3620  require(recoveredAddress != address(0) && recoveredAddress == owner, \"Pancake: INVALID_SIGNATURE\") */\n      tag_250\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x50616e63616b653a20494e56414c49445f5349474e4154555245000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_250:\n        /* \"DexSwap/PancakeERC20.sol\":3630:3661  _approve(owner, spender, value) */\n      tag_251\n        /* \"DexSwap/PancakeERC20.sol\":3639:3644  owner */\n      dup10\n        /* \"DexSwap/PancakeERC20.sol\":3646:3653  spender */\n      dup10\n        /* \"DexSwap/PancakeERC20.sol\":3655:3660  value */\n      dup10\n        /* \"DexSwap/PancakeERC20.sol\":3630:3638  _approve */\n      tag_160\n        /* \"DexSwap/PancakeERC20.sol\":3630:3661  _approve(owner, spender, value) */\n      jump\t// in\n    tag_251:\n        /* \"DexSwap/PancakeERC20.sol\":2942:3668  function permit(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DexSwap/PancakeERC20.sol\":439:503  mapping(address => mapping(address => uint256)) public allowance */\n    tag_110:\n      mstore(0x20, 0x02)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"DexSwap/DexPair.sol\":9642:9798  function sync() external lock {... */\n    tag_112:\n        /* \"DexSwap/DexPair.sol\":1211:1212  1 */\n      0x01\n        /* \"DexSwap/DexPair.sol\":1199:1207  unlocked */\n      sload(0x0c)\n        /* \"DexSwap/DexPair.sol\":1199:1212  unlocked == 1 */\n      eq\n        /* \"DexSwap/DexPair.sol\":1191:1232  require(unlocked == 1, 'Pancake: LOCKED') */\n      tag_253\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x50616e63616b653a204c4f434b45440000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_253:\n        /* \"DexSwap/DexPair.sol\":1253:1254  0 */\n      0x00\n        /* \"DexSwap/DexPair.sol\":1242:1250  unlocked */\n      0x0c\n        /* \"DexSwap/DexPair.sol\":1242:1254  unlocked = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DexSwap/DexPair.sol\":9682:9791  _update(IERC20(token0).balanceOf(address(this)), IERC20(token1).balanceOf(address(this)), reserve0, reserve1) */\n      tag_255\n        /* \"DexSwap/DexPair.sol\":9697:9703  token0 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":9690:9714  IERC20(token0).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"DexSwap/DexPair.sol\":9723:9727  this */\n      address\n        /* \"DexSwap/DexPair.sol\":9690:9729  IERC20(token0).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_256\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_256:\n        /* \"DexSwap/DexPair.sol\":9690:9729  IERC20(token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_257\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_257:\n        /* \"DexSwap/DexPair.sol\":9690:9729  IERC20(token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_258\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_258:\n        /* \"DexSwap/DexPair.sol\":9690:9729  IERC20(token0).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"DexSwap/DexPair.sol\":9738:9744  token1 */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":9731:9755  IERC20(token1).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"DexSwap/DexPair.sol\":9764:9768  this */\n      address\n        /* \"DexSwap/DexPair.sol\":9731:9770  IERC20(token1).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_259\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_259:\n        /* \"DexSwap/DexPair.sol\":9731:9770  IERC20(token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_260\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_260:\n        /* \"DexSwap/DexPair.sol\":9731:9770  IERC20(token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_261\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_261:\n        /* \"DexSwap/DexPair.sol\":9731:9770  IERC20(token1).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"DexSwap/DexPair.sol\":9772:9780  reserve0 */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":9782:9790  reserve1 */\n      0x08\n      0x0e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":9682:9689  _update */\n      tag_156\n        /* \"DexSwap/DexPair.sol\":9682:9791  _update(IERC20(token0).balanceOf(address(this)), IERC20(token1).balanceOf(address(this)), reserve0, reserve1) */\n      jump\t// in\n    tag_255:\n        /* \"DexSwap/DexPair.sol\":1286:1287  1 */\n      0x01\n        /* \"DexSwap/DexPair.sol\":1275:1283  unlocked */\n      0x0c\n        /* \"DexSwap/DexPair.sol\":1275:1287  unlocked = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DexSwap/DexPair.sol\":9642:9798  function sync() external lock {... */\n      jump\t// out\n        /* \"DexSwap/DexPair.sol\":1533:1815  function _safeTransfer(address token, address to, uint value) private {... */\n    tag_125:\n        /* \"DexSwap/DexPair.sol\":1614:1626  bool success */\n      0x00\n        /* \"DexSwap/DexPair.sol\":1628:1645  bytes memory data */\n      0x60\n        /* \"DexSwap/DexPair.sol\":1649:1654  token */\n      dup5\n        /* \"DexSwap/DexPair.sol\":1649:1659  token.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":539:573  bytes('transfer(address,uint256)') */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x19\n      dup2\n      mstore\n      0x20\n      add\n      0x7472616e7366657228616464726573732c75696e743235362900000000000000\n      dup2\n      mstore\n      pop\n        /* \"DexSwap/DexPair.sol\":529:574  keccak256(bytes('transfer(address,uint256)')) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"DexSwap/DexPair.sol\":1693:1695  to */\n      dup6\n        /* \"DexSwap/DexPair.sol\":1697:1702  value */\n      dup6\n        /* \"DexSwap/DexPair.sol\":1660:1703  abi.encodeWithSelector(SELECTOR, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"DexSwap/DexPair.sol\":1660:1703  abi.encodeWithSelector(SELECTOR, to, value) */\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"--CODEGEN--\":38:42   */\n      0x20\n        /* \"--CODEGEN--\":29:36   */\n      dup3\n        /* \"--CODEGEN--\":25:43   */\n      add\n        /* \"--CODEGEN--\":67:77   */\n      dup1\n        /* \"--CODEGEN--\":61:78   */\n      mload\n        /* \"--CODEGEN--\":96:154   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"--CODEGEN--\":199:207   */\n      dup4\n        /* \"--CODEGEN--\":192:196   */\n      dup2\n        /* \"--CODEGEN--\":186:190   */\n      dup4\n        /* \"--CODEGEN--\":182:197   */\n      and\n        /* \"--CODEGEN--\":179:208   */\n      or\n        /* \"--CODEGEN--\":167:177   */\n      dup4\n        /* \"--CODEGEN--\":160:209   */\n      mstore\n        /* \"--CODEGEN--\":0:215   */\n      pop\n      pop\n      pop\n        /* \"DexSwap/DexPair.sol\":1660:1703  abi.encodeWithSelector(SELECTOR, to, value) */\n      pop\n        /* \"DexSwap/DexPair.sol\":1649:1704  token.call(abi.encodeWithSelector(SELECTOR, to, value)) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_263:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_265\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_263)\n    tag_265:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"DexSwap/DexPair.sol\":1649:1704  token.call(abi.encodeWithSelector(SELECTOR, to, value)) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n        /* \"--CODEGEN--\":14:15   */\n      dup1\n        /* \"--CODEGEN--\":21:22   */\n      0x00\n        /* \"--CODEGEN--\":16:47   */\n      dup2\n      eq\n      tag_267\n      jumpi\n        /* \"--CODEGEN--\":75:79   */\n      0x40\n        /* \"--CODEGEN--\":69:80   */\n      mload\n        /* \"--CODEGEN--\":64:80   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":144:148   */\n      0x1f\n        /* \"--CODEGEN--\":140:149   */\n      not\n        /* \"--CODEGEN--\":133:137   */\n      0x3f\n        /* \"--CODEGEN--\":115:131   */\n      returndatasize\n        /* \"--CODEGEN--\":111:138   */\n      add\n        /* \"--CODEGEN--\":107:150   */\n      and\n        /* \"--CODEGEN--\":104:105   */\n      dup3\n        /* \"--CODEGEN--\":100:151   */\n      add\n        /* \"--CODEGEN--\":94:98   */\n      0x40\n        /* \"--CODEGEN--\":87:152   */\n      mstore\n        /* \"--CODEGEN--\":169:185   */\n      returndatasize\n        /* \"--CODEGEN--\":166:167   */\n      dup3\n        /* \"--CODEGEN--\":159:186   */\n      mstore\n        /* \"--CODEGEN--\":225:241   */\n      returndatasize\n        /* \"--CODEGEN--\":222:223   */\n      0x00\n        /* \"--CODEGEN--\":215:219   */\n      0x20\n        /* \"--CODEGEN--\":212:213   */\n      dup5\n        /* \"--CODEGEN--\":208:220   */\n      add\n        /* \"--CODEGEN--\":193:242   */\n      returndatacopy\n        /* \"--CODEGEN--\":7:249   */\n      jump(tag_266)\n        /* \"--CODEGEN--\":16:47   */\n    tag_267:\n        /* \"--CODEGEN--\":36:40   */\n      0x60\n        /* \"--CODEGEN--\":31:40   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":7:249   */\n    tag_266:\n      pop\n        /* \"DexSwap/DexPair.sol\":1613:1704  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(SELECTOR, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"DexSwap/DexPair.sol\":1722:1729  success */\n      dup2\n        /* \"DexSwap/DexPair.sol\":1722:1779  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_268\n      jumpi\n      pop\n        /* \"DexSwap/DexPair.sol\":1749:1750  0 */\n      0x00\n        /* \"DexSwap/DexPair.sol\":1734:1738  data */\n      dup2\n        /* \"DexSwap/DexPair.sol\":1734:1745  data.length */\n      mload\n        /* \"DexSwap/DexPair.sol\":1734:1750  data.length == 0 */\n      eq\n        /* \"DexSwap/DexPair.sol\":1734:1778  data.length == 0 || abi.decode(data, (bool)) */\n      dup1\n      tag_269\n      jumpi\n      pop\n        /* \"DexSwap/DexPair.sol\":1765:1769  data */\n      dup1\n        /* \"DexSwap/DexPair.sol\":1754:1778  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_270\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_270:\n        /* \"DexSwap/DexPair.sol\":1754:1778  abi.decode(data, (bool)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"DexSwap/DexPair.sol\":1734:1778  data.length == 0 || abi.decode(data, (bool)) */\n    tag_269:\n        /* \"DexSwap/DexPair.sol\":1722:1779  success && (data.length == 0 || abi.decode(data, (bool))) */\n    tag_268:\n        /* \"DexSwap/DexPair.sol\":1714:1808  require(success && (data.length == 0 || abi.decode(data, (bool))), 'Pancake: TRANSFER_FAILED') */\n      tag_271\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x18\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x50616e63616b653a205452414e534645525f4641494c45440000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_271:\n        /* \"DexSwap/DexPair.sol\":1533:1815  function _safeTransfer(address token, address to, uint value) private {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DexSwap/libraries/SafeMath.sol\":481:630  function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n    tag_145:\n        /* \"DexSwap/libraries/SafeMath.sol\":539:548  uint256 z */\n      0x00\n        /* \"DexSwap/libraries/SafeMath.sol\":573:574  0 */\n      dup1\n        /* \"DexSwap/libraries/SafeMath.sol\":568:569  y */\n      dup3\n        /* \"DexSwap/libraries/SafeMath.sol\":568:574  y == 0 */\n      eq\n        /* \"DexSwap/libraries/SafeMath.sol\":568:598  y == 0 || (z = x * y) / y == x */\n      dup1\n      tag_273\n      jumpi\n      pop\n        /* \"DexSwap/libraries/SafeMath.sol\":597:598  x */\n      dup3\n        /* \"DexSwap/libraries/SafeMath.sol\":592:593  y */\n      dup3\n        /* \"DexSwap/libraries/SafeMath.sol\":587:588  y */\n      dup4\n        /* \"DexSwap/libraries/SafeMath.sol\":583:584  x */\n      dup6\n        /* \"DexSwap/libraries/SafeMath.sol\":583:588  x * y */\n      mul\n        /* \"DexSwap/libraries/SafeMath.sol\":579:588  z = x * y */\n      swap3\n      pop\n      dup3\n        /* \"DexSwap/libraries/SafeMath.sol\":578:593  (z = x * y) / y */\n      dup2\n      tag_274\n      jumpi\n      invalid\n    tag_274:\n      div\n        /* \"DexSwap/libraries/SafeMath.sol\":578:598  (z = x * y) / y == x */\n      eq\n        /* \"DexSwap/libraries/SafeMath.sol\":568:598  y == 0 || (z = x * y) / y == x */\n    tag_273:\n        /* \"DexSwap/libraries/SafeMath.sol\":560:623  require(y == 0 || (z = x * y) / y == x, \"ds-math-mul-overflow\") */\n      tag_275\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x64732d6d6174682d6d756c2d6f766572666c6f77000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_275:\n        /* \"DexSwap/libraries/SafeMath.sol\":481:630  function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"DexSwap/libraries/SafeMath.sol\":339:475  function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n    tag_147:\n        /* \"DexSwap/libraries/SafeMath.sol\":397:406  uint256 z */\n      0x00\n        /* \"DexSwap/libraries/SafeMath.sol\":441:442  x */\n      dup3\n        /* \"DexSwap/libraries/SafeMath.sol\":435:436  y */\n      dup3\n        /* \"DexSwap/libraries/SafeMath.sol\":431:432  x */\n      dup5\n        /* \"DexSwap/libraries/SafeMath.sol\":431:436  x - y */\n      sub\n        /* \"DexSwap/libraries/SafeMath.sol\":427:436  z = x - y */\n      swap2\n      pop\n      dup2\n        /* \"DexSwap/libraries/SafeMath.sol\":426:442  (z = x - y) <= x */\n      gt\n      iszero\n        /* \"DexSwap/libraries/SafeMath.sol\":418:468  require((z = x - y) <= x, \"ds-math-sub-underflow\") */\n      tag_277\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x15\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x64732d6d6174682d7375622d756e646572666c6f770000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_277:\n        /* \"DexSwap/libraries/SafeMath.sol\":339:475  function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"DexSwap/DexPair.sol\":2616:3461  function _update(uint balance0, uint balance1, uint112 _reserve0, uint112 _reserve1) private {... */\n    tag_156:\n        /* \"DexSwap/DexPair.sol\":2747:2749  -1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"DexSwap/DexPair.sol\":2727:2750  balance0 <= uint112(-1) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":2727:2735  balance0 */\n      dup5\n        /* \"DexSwap/DexPair.sol\":2727:2750  balance0 <= uint112(-1) */\n      gt\n      iszero\n        /* \"DexSwap/DexPair.sol\":2727:2777  balance0 <= uint112(-1) && balance1 <= uint112(-1) */\n      dup1\n      iszero\n      tag_279\n      jumpi\n      pop\n        /* \"DexSwap/DexPair.sol\":2774:2776  -1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"DexSwap/DexPair.sol\":2754:2777  balance1 <= uint112(-1) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":2754:2762  balance1 */\n      dup4\n        /* \"DexSwap/DexPair.sol\":2754:2777  balance1 <= uint112(-1) */\n      gt\n      iszero\n        /* \"DexSwap/DexPair.sol\":2727:2777  balance0 <= uint112(-1) && balance1 <= uint112(-1) */\n    tag_279:\n        /* \"DexSwap/DexPair.sol\":2719:2799  require(balance0 <= uint112(-1) && balance1 <= uint112(-1), 'Pancake: OVERFLOW') */\n      tag_280\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x11\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x50616e63616b653a204f564552464c4f57000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_280:\n        /* \"DexSwap/DexPair.sol\":2809:2830  uint32 blockTimestamp */\n      0x00\n        /* \"DexSwap/DexPair.sol\":2858:2863  2**32 */\n      0x0100000000\n        /* \"DexSwap/DexPair.sol\":2840:2855  block.timestamp */\n      timestamp\n        /* \"DexSwap/DexPair.sol\":2840:2863  block.timestamp % 2**32 */\n      dup2\n      tag_281\n      jumpi\n      invalid\n    tag_281:\n      mod\n        /* \"DexSwap/DexPair.sol\":2809:2864  uint32 blockTimestamp = uint32(block.timestamp % 2**32) */\n      swap1\n      pop\n        /* \"DexSwap/DexPair.sol\":2874:2892  uint32 timeElapsed */\n      0x00\n        /* \"DexSwap/DexPair.sol\":2912:2930  blockTimestampLast */\n      0x08\n      0x1c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":2895:2909  blockTimestamp */\n      dup3\n        /* \"DexSwap/DexPair.sol\":2895:2930  blockTimestamp - blockTimestampLast */\n      sub\n        /* \"DexSwap/DexPair.sol\":2874:2930  uint32 timeElapsed = blockTimestamp - blockTimestampLast */\n      swap1\n      pop\n        /* \"DexSwap/DexPair.sol\":2981:2982  0 */\n      0x00\n        /* \"DexSwap/DexPair.sol\":2967:2978  timeElapsed */\n      dup2\n        /* \"DexSwap/DexPair.sol\":2967:2982  timeElapsed > 0 */\n      0xffffffff\n      and\n      gt\n        /* \"DexSwap/DexPair.sol\":2967:3000  timeElapsed > 0 && _reserve0 != 0 */\n      dup1\n      iszero\n      tag_282\n      jumpi\n      pop\n        /* \"DexSwap/DexPair.sol\":2999:3000  0 */\n      0x00\n        /* \"DexSwap/DexPair.sol\":2986:2995  _reserve0 */\n      dup5\n        /* \"DexSwap/DexPair.sol\":2986:3000  _reserve0 != 0 */\n      0xffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"DexSwap/DexPair.sol\":2967:3000  timeElapsed > 0 && _reserve0 != 0 */\n    tag_282:\n        /* \"DexSwap/DexPair.sol\":2967:3018  timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0 */\n      dup1\n      iszero\n      tag_283\n      jumpi\n      pop\n        /* \"DexSwap/DexPair.sol\":3017:3018  0 */\n      0x00\n        /* \"DexSwap/DexPair.sol\":3004:3013  _reserve1 */\n      dup4\n        /* \"DexSwap/DexPair.sol\":3004:3018  _reserve1 != 0 */\n      0xffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"DexSwap/DexPair.sol\":2967:3018  timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0 */\n    tag_283:\n        /* \"DexSwap/DexPair.sol\":2963:3295  if (timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0) {... */\n      iszero\n      tag_284\n      jumpi\n        /* \"DexSwap/DexPair.sol\":3171:3182  timeElapsed */\n      dup1\n        /* \"DexSwap/DexPair.sol\":3118:3182  uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) * timeElapsed */\n      0xffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":3123:3167  UQ112x112.encode(_reserve1).uqdiv(_reserve0) */\n      tag_285\n        /* \"DexSwap/DexPair.sol\":3157:3166  _reserve0 */\n      dup6\n        /* \"DexSwap/DexPair.sol\":3123:3150  UQ112x112.encode(_reserve1) */\n      tag_286\n        /* \"DexSwap/DexPair.sol\":3140:3149  _reserve1 */\n      dup7\n        /* \"DexSwap/DexPair.sol\":3123:3139  UQ112x112.encode */\n      tag_287\n        /* \"DexSwap/DexPair.sol\":3123:3150  UQ112x112.encode(_reserve1) */\n      jump\t// in\n    tag_286:\n        /* \"DexSwap/DexPair.sol\":3123:3156  UQ112x112.encode(_reserve1).uqdiv */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_288\n      swap1\n        /* \"DexSwap/DexPair.sol\":3123:3167  UQ112x112.encode(_reserve1).uqdiv(_reserve0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_285:\n        /* \"DexSwap/DexPair.sol\":3118:3168  uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":3118:3182  uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) * timeElapsed */\n      mul\n        /* \"DexSwap/DexPair.sol\":3094:3114  price0CumulativeLast */\n      0x09\n      0x00\n        /* \"DexSwap/DexPair.sol\":3094:3182  price0CumulativeLast += uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) * timeElapsed */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DexSwap/DexPair.sol\":3273:3284  timeElapsed */\n      dup1\n        /* \"DexSwap/DexPair.sol\":3220:3284  uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) * timeElapsed */\n      0xffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":3225:3269  UQ112x112.encode(_reserve0).uqdiv(_reserve1) */\n      tag_289\n        /* \"DexSwap/DexPair.sol\":3259:3268  _reserve1 */\n      dup5\n        /* \"DexSwap/DexPair.sol\":3225:3252  UQ112x112.encode(_reserve0) */\n      tag_290\n        /* \"DexSwap/DexPair.sol\":3242:3251  _reserve0 */\n      dup8\n        /* \"DexSwap/DexPair.sol\":3225:3241  UQ112x112.encode */\n      tag_287\n        /* \"DexSwap/DexPair.sol\":3225:3252  UQ112x112.encode(_reserve0) */\n      jump\t// in\n    tag_290:\n        /* \"DexSwap/DexPair.sol\":3225:3258  UQ112x112.encode(_reserve0).uqdiv */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_288\n      swap1\n        /* \"DexSwap/DexPair.sol\":3225:3269  UQ112x112.encode(_reserve0).uqdiv(_reserve1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_289:\n        /* \"DexSwap/DexPair.sol\":3220:3270  uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":3220:3284  uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) * timeElapsed */\n      mul\n        /* \"DexSwap/DexPair.sol\":3196:3216  price1CumulativeLast */\n      0x0a\n      0x00\n        /* \"DexSwap/DexPair.sol\":3196:3284  price1CumulativeLast += uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) * timeElapsed */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DexSwap/DexPair.sol\":2963:3295  if (timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0) {... */\n    tag_284:\n        /* \"DexSwap/DexPair.sol\":3323:3331  balance0 */\n      dup6\n        /* \"DexSwap/DexPair.sol\":3304:3312  reserve0 */\n      0x08\n      0x00\n        /* \"DexSwap/DexPair.sol\":3304:3332  reserve0 = uint112(balance0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"DexSwap/DexPair.sol\":3361:3369  balance1 */\n      dup5\n        /* \"DexSwap/DexPair.sol\":3342:3350  reserve1 */\n      0x08\n      0x0e\n        /* \"DexSwap/DexPair.sol\":3342:3370  reserve1 = uint112(balance1) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"DexSwap/DexPair.sol\":3401:3415  blockTimestamp */\n      dup2\n        /* \"DexSwap/DexPair.sol\":3380:3398  blockTimestampLast */\n      0x08\n      0x1c\n        /* \"DexSwap/DexPair.sol\":3380:3415  blockTimestampLast = blockTimestamp */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"DexSwap/DexPair.sol\":3430:3454  Sync(reserve0, reserve1) */\n      0x1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1\n        /* \"DexSwap/DexPair.sol\":3435:3443  reserve0 */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":3445:3453  reserve1 */\n      0x08\n      0x0e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":3430:3454  Sync(reserve0, reserve1) */\n      mload(0x40)\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"DexSwap/DexPair.sol\":2616:3461  function _update(uint balance0, uint balance1, uint112 _reserve0, uint112 _reserve1) private {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DexSwap/PancakeERC20.sol\":1847:2046  function _approve(... */\n    tag_160:\n        /* \"DexSwap/PancakeERC20.sol\":1988:1993  value */\n      dup1\n        /* \"DexSwap/PancakeERC20.sol\":1960:1969  allowance */\n      0x02\n        /* \"DexSwap/PancakeERC20.sol\":1960:1976  allowance[owner] */\n      0x00\n        /* \"DexSwap/PancakeERC20.sol\":1970:1975  owner */\n      dup6\n        /* \"DexSwap/PancakeERC20.sol\":1960:1976  allowance[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DexSwap/PancakeERC20.sol\":1960:1985  allowance[owner][spender] */\n      0x00\n        /* \"DexSwap/PancakeERC20.sol\":1977:1984  spender */\n      dup5\n        /* \"DexSwap/PancakeERC20.sol\":1960:1985  allowance[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DexSwap/PancakeERC20.sol\":1960:1993  allowance[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DexSwap/PancakeERC20.sol\":2024:2031  spender */\n      dup2\n        /* \"DexSwap/PancakeERC20.sol\":2008:2039  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/PancakeERC20.sol\":2017:2022  owner */\n      dup4\n        /* \"DexSwap/PancakeERC20.sol\":2008:2039  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"DexSwap/PancakeERC20.sol\":2033:2038  value */\n      dup4\n        /* \"DexSwap/PancakeERC20.sol\":2008:2039  Approval(owner, spender, value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"DexSwap/PancakeERC20.sol\":1847:2046  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DexSwap/PancakeERC20.sol\":2052:2301  function _transfer(... */\n    tag_165:\n        /* \"DexSwap/PancakeERC20.sol\":2178:2204  balanceOf[from].sub(value) */\n      tag_293\n        /* \"DexSwap/PancakeERC20.sol\":2198:2203  value */\n      dup2\n        /* \"DexSwap/PancakeERC20.sol\":2178:2187  balanceOf */\n      0x01\n        /* \"DexSwap/PancakeERC20.sol\":2178:2193  balanceOf[from] */\n      0x00\n        /* \"DexSwap/PancakeERC20.sol\":2188:2192  from */\n      dup7\n        /* \"DexSwap/PancakeERC20.sol\":2178:2193  balanceOf[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"DexSwap/PancakeERC20.sol\":2178:2197  balanceOf[from].sub */\n      tag_147\n      swap1\n        /* \"DexSwap/PancakeERC20.sol\":2178:2204  balanceOf[from].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_293:\n        /* \"DexSwap/PancakeERC20.sol\":2160:2169  balanceOf */\n      0x01\n        /* \"DexSwap/PancakeERC20.sol\":2160:2175  balanceOf[from] */\n      0x00\n        /* \"DexSwap/PancakeERC20.sol\":2170:2174  from */\n      dup6\n        /* \"DexSwap/PancakeERC20.sol\":2160:2175  balanceOf[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DexSwap/PancakeERC20.sol\":2160:2204  balanceOf[from] = balanceOf[from].sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DexSwap/PancakeERC20.sol\":2230:2254  balanceOf[to].add(value) */\n      tag_294\n        /* \"DexSwap/PancakeERC20.sol\":2248:2253  value */\n      dup2\n        /* \"DexSwap/PancakeERC20.sol\":2230:2239  balanceOf */\n      0x01\n        /* \"DexSwap/PancakeERC20.sol\":2230:2243  balanceOf[to] */\n      0x00\n        /* \"DexSwap/PancakeERC20.sol\":2240:2242  to */\n      dup6\n        /* \"DexSwap/PancakeERC20.sol\":2230:2243  balanceOf[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"DexSwap/PancakeERC20.sol\":2230:2247  balanceOf[to].add */\n      tag_295\n      swap1\n        /* \"DexSwap/PancakeERC20.sol\":2230:2254  balanceOf[to].add(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_294:\n        /* \"DexSwap/PancakeERC20.sol\":2214:2223  balanceOf */\n      0x01\n        /* \"DexSwap/PancakeERC20.sol\":2214:2227  balanceOf[to] */\n      0x00\n        /* \"DexSwap/PancakeERC20.sol\":2224:2226  to */\n      dup5\n        /* \"DexSwap/PancakeERC20.sol\":2214:2227  balanceOf[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DexSwap/PancakeERC20.sol\":2214:2254  balanceOf[to] = balanceOf[to].add(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DexSwap/PancakeERC20.sol\":2284:2286  to */\n      dup2\n        /* \"DexSwap/PancakeERC20.sol\":2269:2294  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/PancakeERC20.sol\":2278:2282  from */\n      dup4\n        /* \"DexSwap/PancakeERC20.sol\":2269:2294  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"DexSwap/PancakeERC20.sol\":2288:2293  value */\n      dup4\n        /* \"DexSwap/PancakeERC20.sol\":2269:2294  Transfer(from, to, value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"DexSwap/PancakeERC20.sol\":2052:2301  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DexSwap/DexPair.sol\":3547:4379  function _mintFee(uint112 _reserve0, uint112 _reserve1) private returns (bool feeOn) {... */\n    tag_181:\n        /* \"DexSwap/DexPair.sol\":3620:3630  bool feeOn */\n      0x00\n        /* \"DexSwap/DexPair.sol\":3642:3655  address feeTo */\n      dup1\n        /* \"DexSwap/DexPair.sol\":3674:3681  factory */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":3658:3688  IPancakeFactory(factory).feeTo */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x017e7e58\n        /* \"DexSwap/DexPair.sol\":3658:3690  IPancakeFactory(factory).feeTo() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_297\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_297:\n        /* \"DexSwap/DexPair.sol\":3658:3690  IPancakeFactory(factory).feeTo() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_298\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_298:\n        /* \"DexSwap/DexPair.sol\":3658:3690  IPancakeFactory(factory).feeTo() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_299\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_299:\n        /* \"DexSwap/DexPair.sol\":3658:3690  IPancakeFactory(factory).feeTo() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"DexSwap/DexPair.sol\":3642:3690  address feeTo = IPancakeFactory(factory).feeTo() */\n      swap1\n      pop\n        /* \"DexSwap/DexPair.sol\":3725:3726  0 */\n      0x00\n        /* \"DexSwap/DexPair.sol\":3708:3727  feeTo != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":3708:3713  feeTo */\n      dup2\n        /* \"DexSwap/DexPair.sol\":3708:3727  feeTo != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"DexSwap/DexPair.sol\":3700:3727  feeOn = feeTo != address(0) */\n      swap2\n      pop\n        /* \"DexSwap/DexPair.sol\":3737:3748  uint _kLast */\n      0x00\n        /* \"DexSwap/DexPair.sol\":3751:3756  kLast */\n      sload(0x0b)\n        /* \"DexSwap/DexPair.sol\":3737:3756  uint _kLast = kLast */\n      swap1\n      pop\n        /* \"DexSwap/DexPair.sol\":3785:3790  feeOn */\n      dup3\n        /* \"DexSwap/DexPair.sol\":3781:4373  if (feeOn) {... */\n      iszero\n      tag_300\n      jumpi\n        /* \"DexSwap/DexPair.sol\":3820:3821  0 */\n      0x00\n        /* \"DexSwap/DexPair.sol\":3810:3816  _kLast */\n      dup2\n        /* \"DexSwap/DexPair.sol\":3810:3821  _kLast != 0 */\n      eq\n        /* \"DexSwap/DexPair.sol\":3806:4306  if (_kLast != 0) {... */\n      tag_301\n      jumpi\n        /* \"DexSwap/DexPair.sol\":3841:3851  uint rootK */\n      0x00\n        /* \"DexSwap/DexPair.sol\":3854:3895  Math.sqrt(uint(_reserve0).mul(_reserve1)) */\n      tag_302\n        /* \"DexSwap/DexPair.sol\":3864:3894  uint(_reserve0).mul(_reserve1) */\n      tag_303\n        /* \"DexSwap/DexPair.sol\":3884:3893  _reserve1 */\n      dup7\n        /* \"DexSwap/DexPair.sol\":3864:3894  uint(_reserve0).mul(_reserve1) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":3869:3878  _reserve0 */\n      dup9\n        /* \"DexSwap/DexPair.sol\":3864:3879  uint(_reserve0) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/DexPair.sol\":3864:3883  uint(_reserve0).mul */\n      tag_145\n      swap1\n        /* \"DexSwap/DexPair.sol\":3864:3894  uint(_reserve0).mul(_reserve1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_303:\n        /* \"DexSwap/DexPair.sol\":3854:3863  Math.sqrt */\n      tag_186\n        /* \"DexSwap/DexPair.sol\":3854:3895  Math.sqrt(uint(_reserve0).mul(_reserve1)) */\n      jump\t// in\n    tag_302:\n        /* \"DexSwap/DexPair.sol\":3841:3895  uint rootK = Math.sqrt(uint(_reserve0).mul(_reserve1)) */\n      swap1\n      pop\n        /* \"DexSwap/DexPair.sol\":3913:3927  uint rootKLast */\n      0x00\n        /* \"DexSwap/DexPair.sol\":3930:3947  Math.sqrt(_kLast) */\n      tag_304\n        /* \"DexSwap/DexPair.sol\":3940:3946  _kLast */\n      dup4\n        /* \"DexSwap/DexPair.sol\":3930:3939  Math.sqrt */\n      tag_186\n        /* \"DexSwap/DexPair.sol\":3930:3947  Math.sqrt(_kLast) */\n      jump\t// in\n    tag_304:\n        /* \"DexSwap/DexPair.sol\":3913:3947  uint rootKLast = Math.sqrt(_kLast) */\n      swap1\n      pop\n        /* \"DexSwap/DexPair.sol\":3977:3986  rootKLast */\n      dup1\n        /* \"DexSwap/DexPair.sol\":3969:3974  rootK */\n      dup3\n        /* \"DexSwap/DexPair.sol\":3969:3986  rootK > rootKLast */\n      gt\n        /* \"DexSwap/DexPair.sol\":3965:4292  if (rootK > rootKLast) {... */\n      iszero\n      tag_305\n      jumpi\n        /* \"DexSwap/DexPair.sol\":4010:4024  uint numerator */\n      0x00\n        /* \"DexSwap/DexPair.sol\":4027:4071  totalSupply.mul(rootK.sub(rootKLast)).mul(8) */\n      tag_306\n        /* \"DexSwap/DexPair.sol\":4069:4070  8 */\n      0x08\n        /* \"DexSwap/DexPair.sol\":4027:4064  totalSupply.mul(rootK.sub(rootKLast)) */\n      tag_307\n        /* \"DexSwap/DexPair.sol\":4043:4063  rootK.sub(rootKLast) */\n      tag_308\n        /* \"DexSwap/DexPair.sol\":4053:4062  rootKLast */\n      dup6\n        /* \"DexSwap/DexPair.sol\":4043:4048  rootK */\n      dup8\n        /* \"DexSwap/DexPair.sol\":4043:4052  rootK.sub */\n      tag_147\n      swap1\n        /* \"DexSwap/DexPair.sol\":4043:4063  rootK.sub(rootKLast) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_308:\n        /* \"DexSwap/DexPair.sol\":4027:4038  totalSupply */\n      sload(0x00)\n        /* \"DexSwap/DexPair.sol\":4027:4042  totalSupply.mul */\n      tag_145\n      swap1\n        /* \"DexSwap/DexPair.sol\":4027:4064  totalSupply.mul(rootK.sub(rootKLast)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_307:\n        /* \"DexSwap/DexPair.sol\":4027:4068  totalSupply.mul(rootK.sub(rootKLast)).mul */\n      tag_145\n      swap1\n        /* \"DexSwap/DexPair.sol\":4027:4071  totalSupply.mul(rootK.sub(rootKLast)).mul(8) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_306:\n        /* \"DexSwap/DexPair.sol\":4010:4071  uint numerator = totalSupply.mul(rootK.sub(rootKLast)).mul(8) */\n      swap1\n      pop\n        /* \"DexSwap/DexPair.sol\":4093:4109  uint denominator */\n      0x00\n        /* \"DexSwap/DexPair.sol\":4112:4147  rootK.mul(17).add(rootKLast.mul(8)) */\n      tag_309\n        /* \"DexSwap/DexPair.sol\":4130:4146  rootKLast.mul(8) */\n      tag_310\n        /* \"DexSwap/DexPair.sol\":4144:4145  8 */\n      0x08\n        /* \"DexSwap/DexPair.sol\":4130:4139  rootKLast */\n      dup6\n        /* \"DexSwap/DexPair.sol\":4130:4143  rootKLast.mul */\n      tag_145\n      swap1\n        /* \"DexSwap/DexPair.sol\":4130:4146  rootKLast.mul(8) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_310:\n        /* \"DexSwap/DexPair.sol\":4112:4125  rootK.mul(17) */\n      tag_311\n        /* \"DexSwap/DexPair.sol\":4122:4124  17 */\n      0x11\n        /* \"DexSwap/DexPair.sol\":4112:4117  rootK */\n      dup8\n        /* \"DexSwap/DexPair.sol\":4112:4121  rootK.mul */\n      tag_145\n      swap1\n        /* \"DexSwap/DexPair.sol\":4112:4125  rootK.mul(17) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_311:\n        /* \"DexSwap/DexPair.sol\":4112:4129  rootK.mul(17).add */\n      tag_295\n      swap1\n        /* \"DexSwap/DexPair.sol\":4112:4147  rootK.mul(17).add(rootKLast.mul(8)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_309:\n        /* \"DexSwap/DexPair.sol\":4093:4147  uint denominator = rootK.mul(17).add(rootKLast.mul(8)) */\n      swap1\n      pop\n        /* \"DexSwap/DexPair.sol\":4169:4183  uint liquidity */\n      0x00\n        /* \"DexSwap/DexPair.sol\":4198:4209  denominator */\n      dup2\n        /* \"DexSwap/DexPair.sol\":4186:4195  numerator */\n      dup4\n        /* \"DexSwap/DexPair.sol\":4186:4209  numerator / denominator */\n      dup2\n      tag_312\n      jumpi\n      invalid\n    tag_312:\n      div\n        /* \"DexSwap/DexPair.sol\":4169:4209  uint liquidity = numerator / denominator */\n      swap1\n      pop\n        /* \"DexSwap/DexPair.sol\":4247:4248  0 */\n      0x00\n        /* \"DexSwap/DexPair.sol\":4235:4244  liquidity */\n      dup2\n        /* \"DexSwap/DexPair.sol\":4235:4248  liquidity > 0 */\n      gt\n        /* \"DexSwap/DexPair.sol\":4231:4273  if (liquidity > 0) _mint(feeTo, liquidity) */\n      iszero\n      tag_313\n      jumpi\n        /* \"DexSwap/DexPair.sol\":4250:4273  _mint(feeTo, liquidity) */\n      tag_314\n        /* \"DexSwap/DexPair.sol\":4256:4261  feeTo */\n      dup8\n        /* \"DexSwap/DexPair.sol\":4263:4272  liquidity */\n      dup3\n        /* \"DexSwap/DexPair.sol\":4250:4255  _mint */\n      tag_188\n        /* \"DexSwap/DexPair.sol\":4250:4273  _mint(feeTo, liquidity) */\n      jump\t// in\n    tag_314:\n        /* \"DexSwap/DexPair.sol\":4231:4273  if (liquidity > 0) _mint(feeTo, liquidity) */\n    tag_313:\n        /* \"DexSwap/DexPair.sol\":3965:4292  if (rootK > rootKLast) {... */\n      pop\n      pop\n      pop\n    tag_305:\n        /* \"DexSwap/DexPair.sol\":3806:4306  if (_kLast != 0) {... */\n      pop\n      pop\n    tag_301:\n        /* \"DexSwap/DexPair.sol\":3781:4373  if (feeOn) {... */\n      jump(tag_315)\n    tag_300:\n        /* \"DexSwap/DexPair.sol\":4336:4337  0 */\n      0x00\n        /* \"DexSwap/DexPair.sol\":4326:4332  _kLast */\n      dup2\n        /* \"DexSwap/DexPair.sol\":4326:4337  _kLast != 0 */\n      eq\n        /* \"DexSwap/DexPair.sol\":4322:4373  if (_kLast != 0) {... */\n      tag_316\n      jumpi\n        /* \"DexSwap/DexPair.sol\":4361:4362  0 */\n      0x00\n        /* \"DexSwap/DexPair.sol\":4353:4358  kLast */\n      0x0b\n        /* \"DexSwap/DexPair.sol\":4353:4362  kLast = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DexSwap/DexPair.sol\":4322:4373  if (_kLast != 0) {... */\n    tag_316:\n        /* \"DexSwap/DexPair.sol\":3781:4373  if (feeOn) {... */\n    tag_315:\n        /* \"DexSwap/DexPair.sol\":3547:4379  function _mintFee(uint112 _reserve0, uint112 _reserve1) private returns (bool feeOn) {... */\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"DexSwap/libraries/Math.sol\":352:653  function sqrt(uint256 y) internal pure returns (uint256 z) {... */\n    tag_186:\n        /* \"DexSwap/libraries/Math.sol\":400:409  uint256 z */\n      0x00\n        /* \"DexSwap/libraries/Math.sol\":429:430  3 */\n      0x03\n        /* \"DexSwap/libraries/Math.sol\":425:426  y */\n      dup3\n        /* \"DexSwap/libraries/Math.sol\":425:430  y > 3 */\n      gt\n        /* \"DexSwap/libraries/Math.sol\":421:647  if (y > 3) {... */\n      iszero\n      tag_318\n      jumpi\n        /* \"DexSwap/libraries/Math.sol\":450:451  y */\n      dup2\n        /* \"DexSwap/libraries/Math.sol\":446:451  z = y */\n      swap1\n      pop\n        /* \"DexSwap/libraries/Math.sol\":465:474  uint256 x */\n      0x00\n        /* \"DexSwap/libraries/Math.sol\":485:486  1 */\n      0x01\n        /* \"DexSwap/libraries/Math.sol\":481:482  2 */\n      0x02\n        /* \"DexSwap/libraries/Math.sol\":477:478  y */\n      dup5\n        /* \"DexSwap/libraries/Math.sol\":477:482  y / 2 */\n      dup2\n      tag_319\n      jumpi\n      invalid\n    tag_319:\n      div\n        /* \"DexSwap/libraries/Math.sol\":477:486  y / 2 + 1 */\n      add\n        /* \"DexSwap/libraries/Math.sol\":465:486  uint256 x = y / 2 + 1 */\n      swap1\n      pop\n        /* \"DexSwap/libraries/Math.sol\":500:589  while (x < z) {... */\n    tag_320:\n        /* \"DexSwap/libraries/Math.sol\":511:512  z */\n      dup2\n        /* \"DexSwap/libraries/Math.sol\":507:508  x */\n      dup2\n        /* \"DexSwap/libraries/Math.sol\":507:512  x < z */\n      lt\n        /* \"DexSwap/libraries/Math.sol\":500:589  while (x < z) {... */\n      iszero\n      tag_321\n      jumpi\n        /* \"DexSwap/libraries/Math.sol\":536:537  x */\n      dup1\n        /* \"DexSwap/libraries/Math.sol\":532:537  z = x */\n      swap2\n      pop\n        /* \"DexSwap/libraries/Math.sol\":573:574  2 */\n      0x02\n        /* \"DexSwap/libraries/Math.sol\":568:569  x */\n      dup2\n        /* \"DexSwap/libraries/Math.sol\":564:565  x */\n      dup3\n        /* \"DexSwap/libraries/Math.sol\":560:561  y */\n      dup6\n        /* \"DexSwap/libraries/Math.sol\":560:565  y / x */\n      dup2\n      tag_322\n      jumpi\n      invalid\n    tag_322:\n      div\n        /* \"DexSwap/libraries/Math.sol\":560:569  y / x + x */\n      add\n        /* \"DexSwap/libraries/Math.sol\":559:574  (y / x + x) / 2 */\n      dup2\n      tag_323\n      jumpi\n      invalid\n    tag_323:\n      div\n        /* \"DexSwap/libraries/Math.sol\":555:574  x = (y / x + x) / 2 */\n      swap1\n      pop\n        /* \"DexSwap/libraries/Math.sol\":500:589  while (x < z) {... */\n      jump(tag_320)\n    tag_321:\n        /* \"DexSwap/libraries/Math.sol\":421:647  if (y > 3) {... */\n      pop\n      jump(tag_324)\n    tag_318:\n        /* \"DexSwap/libraries/Math.sol\":614:615  0 */\n      0x00\n        /* \"DexSwap/libraries/Math.sol\":609:610  y */\n      dup3\n        /* \"DexSwap/libraries/Math.sol\":609:615  y != 0 */\n      eq\n        /* \"DexSwap/libraries/Math.sol\":605:647  if (y != 0) {... */\n      tag_325\n      jumpi\n        /* \"DexSwap/libraries/Math.sol\":635:636  1 */\n      0x01\n        /* \"DexSwap/libraries/Math.sol\":631:636  z = 1 */\n      swap1\n      pop\n        /* \"DexSwap/libraries/Math.sol\":605:647  if (y != 0) {... */\n    tag_325:\n        /* \"DexSwap/libraries/Math.sol\":421:647  if (y > 3) {... */\n    tag_324:\n        /* \"DexSwap/libraries/Math.sol\":352:653  function sqrt(uint256 y) internal pure returns (uint256 z) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"DexSwap/PancakeERC20.sol\":1427:1627  function _mint(address to, uint256 value) internal {... */\n    tag_188:\n        /* \"DexSwap/PancakeERC20.sol\":1502:1524  totalSupply.add(value) */\n      tag_327\n        /* \"DexSwap/PancakeERC20.sol\":1518:1523  value */\n      dup2\n        /* \"DexSwap/PancakeERC20.sol\":1502:1513  totalSupply */\n      sload(0x00)\n        /* \"DexSwap/PancakeERC20.sol\":1502:1517  totalSupply.add */\n      tag_295\n      swap1\n        /* \"DexSwap/PancakeERC20.sol\":1502:1524  totalSupply.add(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_327:\n        /* \"DexSwap/PancakeERC20.sol\":1488:1499  totalSupply */\n      0x00\n        /* \"DexSwap/PancakeERC20.sol\":1488:1524  totalSupply = totalSupply.add(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DexSwap/PancakeERC20.sol\":1550:1574  balanceOf[to].add(value) */\n      tag_328\n        /* \"DexSwap/PancakeERC20.sol\":1568:1573  value */\n      dup2\n        /* \"DexSwap/PancakeERC20.sol\":1550:1559  balanceOf */\n      0x01\n        /* \"DexSwap/PancakeERC20.sol\":1550:1563  balanceOf[to] */\n      0x00\n        /* \"DexSwap/PancakeERC20.sol\":1560:1562  to */\n      dup6\n        /* \"DexSwap/PancakeERC20.sol\":1550:1563  balanceOf[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"DexSwap/PancakeERC20.sol\":1550:1567  balanceOf[to].add */\n      tag_295\n      swap1\n        /* \"DexSwap/PancakeERC20.sol\":1550:1574  balanceOf[to].add(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_328:\n        /* \"DexSwap/PancakeERC20.sol\":1534:1543  balanceOf */\n      0x01\n        /* \"DexSwap/PancakeERC20.sol\":1534:1547  balanceOf[to] */\n      0x00\n        /* \"DexSwap/PancakeERC20.sol\":1544:1546  to */\n      dup5\n        /* \"DexSwap/PancakeERC20.sol\":1534:1547  balanceOf[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DexSwap/PancakeERC20.sol\":1534:1574  balanceOf[to] = balanceOf[to].add(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DexSwap/PancakeERC20.sol\":1610:1612  to */\n      dup2\n        /* \"DexSwap/PancakeERC20.sol\":1589:1620  Transfer(address(0), to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/PancakeERC20.sol\":1606:1607  0 */\n      0x00\n        /* \"DexSwap/PancakeERC20.sol\":1589:1620  Transfer(address(0), to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"DexSwap/PancakeERC20.sol\":1614:1619  value */\n      dup4\n        /* \"DexSwap/PancakeERC20.sol\":1589:1620  Transfer(address(0), to, value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"DexSwap/PancakeERC20.sol\":1427:1627  function _mint(address to, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"DexSwap/libraries/Math.sol\":134:237  function min(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n    tag_195:\n        /* \"DexSwap/libraries/Math.sol\":192:201  uint256 z */\n      0x00\n        /* \"DexSwap/libraries/Math.sol\":221:222  y */\n      dup2\n        /* \"DexSwap/libraries/Math.sol\":217:218  x */\n      dup4\n        /* \"DexSwap/libraries/Math.sol\":217:222  x < y */\n      lt\n        /* \"DexSwap/libraries/Math.sol\":217:230  x < y ? x : y */\n      tag_330\n      jumpi\n        /* \"DexSwap/libraries/Math.sol\":229:230  y */\n      dup2\n        /* \"DexSwap/libraries/Math.sol\":217:230  x < y ? x : y */\n      jump(tag_331)\n    tag_330:\n        /* \"DexSwap/libraries/Math.sol\":225:226  x */\n      dup3\n        /* \"DexSwap/libraries/Math.sol\":217:230  x < y ? x : y */\n    tag_331:\n        /* \"DexSwap/libraries/Math.sol\":213:230  z = x < y ? x : y */\n      swap1\n      pop\n        /* \"DexSwap/libraries/Math.sol\":134:237  function min(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"DexSwap/PancakeERC20.sol\":1633:1841  function _burn(address from, uint256 value) internal {... */\n    tag_219:\n        /* \"DexSwap/PancakeERC20.sol\":1714:1740  balanceOf[from].sub(value) */\n      tag_333\n        /* \"DexSwap/PancakeERC20.sol\":1734:1739  value */\n      dup2\n        /* \"DexSwap/PancakeERC20.sol\":1714:1723  balanceOf */\n      0x01\n        /* \"DexSwap/PancakeERC20.sol\":1714:1729  balanceOf[from] */\n      0x00\n        /* \"DexSwap/PancakeERC20.sol\":1724:1728  from */\n      dup6\n        /* \"DexSwap/PancakeERC20.sol\":1714:1729  balanceOf[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"DexSwap/PancakeERC20.sol\":1714:1733  balanceOf[from].sub */\n      tag_147\n      swap1\n        /* \"DexSwap/PancakeERC20.sol\":1714:1740  balanceOf[from].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_333:\n        /* \"DexSwap/PancakeERC20.sol\":1696:1705  balanceOf */\n      0x01\n        /* \"DexSwap/PancakeERC20.sol\":1696:1711  balanceOf[from] */\n      0x00\n        /* \"DexSwap/PancakeERC20.sol\":1706:1710  from */\n      dup5\n        /* \"DexSwap/PancakeERC20.sol\":1696:1711  balanceOf[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DexSwap/PancakeERC20.sol\":1696:1740  balanceOf[from] = balanceOf[from].sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DexSwap/PancakeERC20.sol\":1764:1786  totalSupply.sub(value) */\n      tag_334\n        /* \"DexSwap/PancakeERC20.sol\":1780:1785  value */\n      dup2\n        /* \"DexSwap/PancakeERC20.sol\":1764:1775  totalSupply */\n      sload(0x00)\n        /* \"DexSwap/PancakeERC20.sol\":1764:1779  totalSupply.sub */\n      tag_147\n      swap1\n        /* \"DexSwap/PancakeERC20.sol\":1764:1786  totalSupply.sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_334:\n        /* \"DexSwap/PancakeERC20.sol\":1750:1761  totalSupply */\n      0x00\n        /* \"DexSwap/PancakeERC20.sol\":1750:1786  totalSupply = totalSupply.sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DexSwap/PancakeERC20.sol\":1824:1825  0 */\n      0x00\n        /* \"DexSwap/PancakeERC20.sol\":1801:1834  Transfer(from, address(0), value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/PancakeERC20.sol\":1810:1814  from */\n      dup3\n        /* \"DexSwap/PancakeERC20.sol\":1801:1834  Transfer(from, address(0), value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"DexSwap/PancakeERC20.sol\":1828:1833  value */\n      dup4\n        /* \"DexSwap/PancakeERC20.sol\":1801:1834  Transfer(from, address(0), value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"DexSwap/PancakeERC20.sol\":1633:1841  function _burn(address from, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"DexSwap/libraries/UQ112x112.sol\":319:437  function encode(uint112 y) internal pure returns (uint224 z) {... */\n    tag_287:\n        /* \"DexSwap/libraries/UQ112x112.sol\":369:378  uint224 z */\n      0x00\n        /* \"DexSwap/libraries/UQ112x112.sol\":267:273  2**112 */\n      0x010000000000000000000000000000\n        /* \"DexSwap/libraries/UQ112x112.sol\":402:403  y */\n      dup3\n        /* \"DexSwap/libraries/UQ112x112.sol\":394:404  uint224(y) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/libraries/UQ112x112.sol\":394:411  uint224(y) * Q112 */\n      mul\n        /* \"DexSwap/libraries/UQ112x112.sol\":390:411  z = uint224(y) * Q112 */\n      swap1\n      pop\n        /* \"DexSwap/libraries/UQ112x112.sol\":319:437  function encode(uint112 y) internal pure returns (uint224 z) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"DexSwap/libraries/UQ112x112.sol\":505:611  function uqdiv(uint224 x, uint112 y) internal pure returns (uint224 z) {... */\n    tag_288:\n        /* \"DexSwap/libraries/UQ112x112.sol\":565:574  uint224 z */\n      0x00\n        /* \"DexSwap/libraries/UQ112x112.sol\":602:603  y */\n      dup2\n        /* \"DexSwap/libraries/UQ112x112.sol\":594:604  uint224(y) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/libraries/UQ112x112.sol\":590:604  x / uint224(y) */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/libraries/UQ112x112.sol\":590:591  x */\n      dup4\n        /* \"DexSwap/libraries/UQ112x112.sol\":590:604  x / uint224(y) */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      tag_337\n      jumpi\n      invalid\n    tag_337:\n      div\n        /* \"DexSwap/libraries/UQ112x112.sol\":586:604  z = x / uint224(y) */\n      swap1\n      pop\n        /* \"DexSwap/libraries/UQ112x112.sol\":505:611  function uqdiv(uint224 x, uint112 y) internal pure returns (uint224 z) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"DexSwap/libraries/SafeMath.sol\":198:333  function add(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n    tag_295:\n        /* \"DexSwap/libraries/SafeMath.sol\":256:265  uint256 z */\n      0x00\n        /* \"DexSwap/libraries/SafeMath.sol\":300:301  x */\n      dup3\n        /* \"DexSwap/libraries/SafeMath.sol\":294:295  y */\n      dup3\n        /* \"DexSwap/libraries/SafeMath.sol\":290:291  x */\n      dup5\n        /* \"DexSwap/libraries/SafeMath.sol\":290:295  x + y */\n      add\n        /* \"DexSwap/libraries/SafeMath.sol\":286:295  z = x + y */\n      swap2\n      pop\n      dup2\n        /* \"DexSwap/libraries/SafeMath.sol\":285:301  (z = x + y) >= x */\n      lt\n      iszero\n        /* \"DexSwap/libraries/SafeMath.sol\":277:326  require((z = x + y) >= x, \"ds-math-add-overflow\") */\n      tag_339\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x64732d6d6174682d6164642d6f766572666c6f77000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_339:\n        /* \"DexSwap/libraries/SafeMath.sol\":198:333  function add(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_50b0a6dd250a09c1cd083ad4bf9f97424665d60e7bc0a208a1151c7d0051999c 50616e63616b653a20494e53554646494349454e545f494e5055545f414d4f554e54\n    data_6c050b0a8d3f2d18d11271ee0a551b7748437b8fa9a6165c561190d34a2947d6 50616e63616b653a20494e53554646494349454e545f4c49515549444954595f4255524e4544\n    data_c654718515b5f98052eb92744d97d32cccabf6e8b2bae886738591c9b906cfd8 50616e63616b653a20494e53554646494349454e545f4f55545055545f414d4f554e54\n    data_ef633320352a650c1d75752f13e6c73d8d8f7f26a5596a6d026c1bf50d2f7713 50616e63616b653a20494e53554646494349454e545f4c49515549444954595f4d494e544544\n\n    auxdata: 0xa265627a7a72315820f49b1d2b37cdceb423b5c1a9723e1a6df0be9a03694e4de8e985d85dde0554eb64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526001600c5534801561001557600080fd5b5060004690506040518080613bfa60529139605201905060405180910390206040518060400160405280600b81526020017f44657853776170204c5073000000000000000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250805190602001208330604051602001808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050604051602081830303815290604052805190602001206003819055505033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613a85806101756000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c80636a627842116100f9578063ba9a7a5611610097578063d21220a711610071578063d21220a7146108c4578063d505accf1461090e578063dd62ed3e146109a7578063fff6cae914610a1f576101a9565b8063ba9a7a5614610818578063bc25cf7714610836578063c45a01551461087a576101a9565b80637ecebe00116100d35780637ecebe001461067857806389afcb44146106d057806395d89b411461072f578063a9059cbb146107b2576101a9565b80636a627842146105aa57806370a08231146106025780637464fc3d1461065a576101a9565b806323b872dd116101665780633644e515116101405780633644e515146104ec578063485cc9551461050a5780635909c0d51461056e5780635a3d54931461058c576101a9565b806323b872dd1461042457806330adf81f146104aa578063313ce567146104c8576101a9565b8063022c0d9f146101ae57806306fdde031461025b5780630902f1ac146102de578063095ea7b3146103565780630dfe1681146103bc57806318160ddd14610406575b600080fd5b610259600480360360808110156101c457600080fd5b810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561021557600080fd5b82018360208201111561022757600080fd5b8035906020019184600183028401116401000000008311171561024957600080fd5b9091929391929390505050610a29565b005b610263611234565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102a3578082015181840152602081019050610288565b50505050905090810190601f1680156102d05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102e661126d565b60405180846dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168152602001836dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff1681526020018263ffffffff1663ffffffff168152602001935050505060405180910390f35b6103a26004803603604081101561036c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506112ca565b604051808215151515815260200191505060405180910390f35b6103c46112e1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61040e611307565b6040518082815260200191505060405180910390f35b6104906004803603606081101561043a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061130d565b604051808215151515815260200191505060405180910390f35b6104b26114d8565b6040518082815260200191505060405180910390f35b6104d06114ff565b604051808260ff1660ff16815260200191505060405180910390f35b6104f4611504565b6040518082815260200191505060405180910390f35b61056c6004803603604081101561052057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061150a565b005b610576611653565b6040518082815260200191505060405180910390f35b610594611659565b6040518082815260200191505060405180910390f35b6105ec600480360360208110156105c057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061165f565b6040518082815260200191505060405180910390f35b6106446004803603602081101561061857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b10565b6040518082815260200191505060405180910390f35b610662611b28565b6040518082815260200191505060405180910390f35b6106ba6004803603602081101561068e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b2e565b6040518082815260200191505060405180910390f35b610712600480360360208110156106e657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b46565b604051808381526020018281526020019250505060405180910390f35b610737612133565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561077757808201518184015260208101905061075c565b50505050905090810190601f1680156107a45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6107fe600480360360408110156107c857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061216c565b604051808215151515815260200191505060405180910390f35b610820612183565b6040518082815260200191505060405180910390f35b6108786004803603602081101561084c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612189565b005b610882612464565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108cc61248a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6109a5600480360360e081101561092457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff16906020019092919080359060200190929190803590602001909291905050506124b0565b005b610a09600480360360408110156109bd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506127f4565b6040518082815260200191505060405180910390f35b610a27612819565b005b6001600c5414610aa1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f50616e63616b653a204c4f434b4544000000000000000000000000000000000081525060200191505060405180910390fd5b6000600c819055506000851180610ab85750600084115b610b0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180613a086023913960400191505060405180910390fd5b600080610b1861126d565b5091509150816dffffffffffffffffffffffffffff1687108015610b4b5750806dffffffffffffffffffffffffffff1686105b610bbd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f50616e63616b653a20494e53554646494349454e545f4c49515549444954590081525060200191505060405180910390fd5b6000806000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508173ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614158015610c7657508073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614155b610ce8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f50616e63616b653a20494e56414c49445f544f0000000000000000000000000081525060200191505060405180910390fd5b60008b1115610cfd57610cfc828a8d612a99565b5b60008a1115610d1257610d11818a8c612a99565b5b6000888890501115610dfa578873ffffffffffffffffffffffffffffffffffffffff166384800812338d8d8c8c6040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509650505050505050600060405180830381600087803b158015610de157600080fd5b505af1158015610df5573d6000803e3d6000fd5b505050505b8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610e7757600080fd5b505afa158015610e8b573d6000803e3d6000fd5b505050506040513d6020811015610ea157600080fd5b810190808051906020019092919050505093508073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610f3157600080fd5b505afa158015610f45573d6000803e3d6000fd5b505050506040513d6020811015610f5b57600080fd5b810190808051906020019092919050505092505050600089856dffffffffffffffffffffffffffff16038311610f92576000610fa8565b89856dffffffffffffffffffffffffffff160383035b9050600089856dffffffffffffffffffffffffffff16038311610fcc576000610fe2565b89856dffffffffffffffffffffffffffff160383035b90506000821180610ff35750600081115b611048576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806139c06022913960400191505060405180910390fd5b6000611084611061601985612ce690919063ffffffff16565b61107661271088612ce690919063ffffffff16565b612d7b90919063ffffffff16565b905060006110c261109f601985612ce690919063ffffffff16565b6110b461271088612ce690919063ffffffff16565b612d7b90919063ffffffff16565b905061110d6305f5e1006110ff896dffffffffffffffffffffffffffff168b6dffffffffffffffffffffffffffff16612ce690919063ffffffff16565b612ce690919063ffffffff16565b6111208284612ce690919063ffffffff16565b1015611194576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f50616e63616b653a204b0000000000000000000000000000000000000000000081525060200191505060405180910390fd5b50506111a284848888612dfe565b8873ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d82284848f8f6040518085815260200184815260200183815260200182815260200194505050505060405180910390a35050505050506001600c819055505050505050565b6040518060400160405280600b81526020017f44657853776170204c507300000000000000000000000000000000000000000081525081565b6000806000600860009054906101000a90046dffffffffffffffffffffffffffff1692506008600e9054906101000a90046dffffffffffffffffffffffffffff1691506008601c9054906101000a900463ffffffff169050909192565b60006112d733848461317c565b6001905092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005481565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146114c25761144182600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612d7b90919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6114cd848484613267565b600190509392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b601281565b60035481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146115cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f50616e63616b653a20464f5242494444454e000000000000000000000000000081525060200191505060405180910390fd5b81600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60095481565b600a5481565b60006001600c54146116d9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f50616e63616b653a204c4f434b4544000000000000000000000000000000000081525060200191505060405180910390fd5b6000600c819055506000806116ec61126d565b50915091506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561179257600080fd5b505afa1580156117a6573d6000803e3d6000fd5b505050506040513d60208110156117bc57600080fd5b810190808051906020019092919050505090506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561187057600080fd5b505afa158015611884573d6000803e3d6000fd5b505050506040513d602081101561189a57600080fd5b8101908080519060200190929190505050905060006118d2856dffffffffffffffffffffffffffff1684612d7b90919063ffffffff16565b905060006118f9856dffffffffffffffffffffffffffff1684612d7b90919063ffffffff16565b9050600061190787876133fb565b9050600080549050600081141561195b576119476103e86119396119348688612ce690919063ffffffff16565b613602565b612d7b90919063ffffffff16565b985061195660006103e8613664565b6119be565b6119bb886dffffffffffffffffffffffffffff166119828387612ce690919063ffffffff16565b8161198957fe5b04886dffffffffffffffffffffffffffff166119ae8487612ce690919063ffffffff16565b816119b557fe5b0461377e565b98505b60008911611a17576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180613a2b6026913960400191505060405180910390fd5b611a218a8a613664565b611a2d86868a8a612dfe565b8115611aa557611a9e6008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16612ce690919063ffffffff16565b600b819055505b3373ffffffffffffffffffffffffffffffffffffffff167f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f8585604051808381526020018281526020019250505060405180910390a250505050505050506001600c81905550919050565b60016020528060005260406000206000915090505481565b600b5481565b60046020528060005260406000206000915090505481565b6000806001600c5414611bc1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f50616e63616b653a204c4f434b4544000000000000000000000000000000000081525060200191505060405180910390fd5b6000600c81905550600080611bd461126d565b50915091506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611ca657600080fd5b505afa158015611cba573d6000803e3d6000fd5b505050506040513d6020811015611cd057600080fd5b8101908080519060200190929190505050905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611d6257600080fd5b505afa158015611d76573d6000803e3d6000fd5b505050506040513d6020811015611d8c57600080fd5b810190808051906020019092919050505090506000600160003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000611def88886133fb565b905060008054905080611e0b8685612ce690919063ffffffff16565b81611e1257fe5b049a5080611e298585612ce690919063ffffffff16565b81611e3057fe5b04995060008b118015611e43575060008a115b611e98576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806139e26026913960400191505060405180910390fd5b611ea23084613797565b611ead878d8d612a99565b611eb8868d8c612a99565b8673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611f3557600080fd5b505afa158015611f49573d6000803e3d6000fd5b505050506040513d6020811015611f5f57600080fd5b810190808051906020019092919050505094508573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611fef57600080fd5b505afa158015612003573d6000803e3d6000fd5b505050506040513d602081101561201957600080fd5b8101908080519060200190929190505050935061203885858b8b612dfe565b81156120b0576120a96008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16612ce690919063ffffffff16565b600b819055505b8b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d819364968d8d604051808381526020018281526020019250505060405180910390a35050505050505050506001600c81905550915091565b6040518060400160405280600a81526020017f446578537761702d4c500000000000000000000000000000000000000000000081525081565b6000612179338484613267565b6001905092915050565b6103e881565b6001600c5414612201576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f50616e63616b653a204c4f434b4544000000000000000000000000000000000081525060200191505060405180910390fd5b6000600c819055506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506123578284612352600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561230957600080fd5b505afa15801561231d573d6000803e3d6000fd5b505050506040513d602081101561233357600080fd5b8101908080519060200190929190505050612d7b90919063ffffffff16565b612a99565b61245781846124526008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561240957600080fd5b505afa15801561241d573d6000803e3d6000fd5b505050506040513d602081101561243357600080fd5b8101908080519060200190929190505050612d7b90919063ffffffff16565b612a99565b50506001600c8190555050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b42841015612526576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f50616e63616b653a20455850495245440000000000000000000000000000000081525060200191505060405180910390fd5b60006003547f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b898989600460008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558a604051602001808781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200196505050505050506040516020818303038152906040528051906020012060405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050600060018286868660405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156126f8573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415801561276c57508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b6127de576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f50616e63616b653a20494e56414c49445f5349474e415455524500000000000081525060200191505060405180910390fd5b6127e989898961317c565b505050505050505050565b6002602052816000526040600020602052806000526040600020600091509150505481565b6001600c5414612891576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f50616e63616b653a204c4f434b4544000000000000000000000000000000000081525060200191505060405180910390fd5b6000600c81905550612a8f600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561293b57600080fd5b505afa15801561294f573d6000803e3d6000fd5b505050506040513d602081101561296557600080fd5b8101908080519060200190929190505050600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015612a1557600080fd5b505afa158015612a29573d6000803e3d6000fd5b505050506040513d6020811015612a3f57600080fd5b8101908080519060200190929190505050600860009054906101000a90046dffffffffffffffffffffffffffff166008600e9054906101000a90046dffffffffffffffffffffffffffff16612dfe565b6001600c81905550565b600060608473ffffffffffffffffffffffffffffffffffffffff166040518060400160405280601981526020017f7472616e7366657228616464726573732c75696e743235362900000000000000815250805190602001208585604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b60208310612bc65780518252602082019150602081019050602083039250612ba3565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114612c28576040519150601f19603f3d011682016040523d82523d6000602084013e612c2d565b606091505b5091509150818015612c6d5750600081511480612c6c5750808060200190516020811015612c5a57600080fd5b81019080805190602001909291905050505b5b612cdf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f50616e63616b653a205452414e534645525f4641494c4544000000000000000081525060200191505060405180910390fd5b5050505050565b600080821480612d035750828283850292508281612d0057fe5b04145b612d75576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d6d6174682d6d756c2d6f766572666c6f7700000000000000000000000081525060200191505060405180910390fd5b92915050565b6000828284039150811115612df8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f64732d6d6174682d7375622d756e646572666c6f77000000000000000000000081525060200191505060405180910390fd5b92915050565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6dffffffffffffffffffffffffffff168411158015612e6e57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6dffffffffffffffffffffffffffff168311155b612ee0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f50616e63616b653a204f564552464c4f5700000000000000000000000000000081525060200191505060405180910390fd5b60006401000000004281612ef057fe5b06905060006008601c9054906101000a900463ffffffff168203905060008163ffffffff16118015612f3357506000846dffffffffffffffffffffffffffff1614155b8015612f5057506000836dffffffffffffffffffffffffffff1614155b15613032578063ffffffff16612f9585612f69866138b1565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166138dc90919063ffffffff16565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16026009600082825401925050819055508063ffffffff1661300384612fd7876138b1565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166138dc90919063ffffffff16565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1602600a600082825401925050819055505b85600860006101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff160217905550846008600e6101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff160217905550816008601c6101000a81548163ffffffff021916908363ffffffff1602179055507f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1600860009054906101000a90046dffffffffffffffffffffffffffff166008600e9054906101000a90046dffffffffffffffffffffffffffff1660405180836dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168152602001826dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff1681526020019250505060405180910390a1505050505050565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b6132b981600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612d7b90919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061334e81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461393c90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663017e7e586040518163ffffffff1660e01b815260040160206040518083038186803b15801561346657600080fd5b505afa15801561347a573d6000803e3d6000fd5b505050506040513d602081101561349057600080fd5b81019080805190602001909291905050509050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141591506000600b54905082156135e857600081146135e3576000613528613523866dffffffffffffffffffffffffffff16886dffffffffffffffffffffffffffff16612ce690919063ffffffff16565b613602565b9050600061353583613602565b9050808211156135e057600061357b600861356d61355c8587612d7b90919063ffffffff16565b600054612ce690919063ffffffff16565b612ce690919063ffffffff16565b905060006135b8613596600885612ce690919063ffffffff16565b6135aa601187612ce690919063ffffffff16565b61393c90919063ffffffff16565b905060008183816135c557fe5b04905060008111156135dc576135db8782613664565b5b5050505b50505b6135fa565b600081146135f9576000600b819055505b5b505092915050565b6000600382111561365157819050600060016002848161361e57fe5b040190505b8181101561364b5780915060028182858161363a57fe5b04018161364357fe5b049050613623565b5061365f565b6000821461365e57600190505b5b919050565b6136798160005461393c90919063ffffffff16565b6000819055506136d181600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461393c90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600081831061378d578161378f565b825b905092915050565b6137e981600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612d7b90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061384181600054612d7b90919063ffffffff16565b600081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60006e010000000000000000000000000000826dffffffffffffffffffffffffffff16029050919050565b6000816dffffffffffffffffffffffffffff167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff168161393357fe5b04905092915050565b60008282840191508110156139b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d6d6174682d6164642d6f766572666c6f7700000000000000000000000081525060200191505060405180910390fd5b9291505056fe50616e63616b653a20494e53554646494349454e545f494e5055545f414d4f554e5450616e63616b653a20494e53554646494349454e545f4c49515549444954595f4255524e454450616e63616b653a20494e53554646494349454e545f4f55545055545f414d4f554e5450616e63616b653a20494e53554646494349454e545f4c49515549444954595f4d494e544544a265627a7a72315820f49b1d2b37cdceb423b5c1a9723e1a6df0be9a03694e4de8e985d85dde0554eb64736f6c63430005100032454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0xC SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 CHAINID SWAP1 POP PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x3BFA PUSH1 0x52 SWAP2 CODECOPY PUSH1 0x52 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44657853776170204C5073000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP CALLER PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x3A85 DUP1 PUSH2 0x175 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6A627842 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xBA9A7A56 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD21220A7 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x8C4 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x90E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x9A7 JUMPI DUP1 PUSH4 0xFFF6CAE9 EQ PUSH2 0xA1F JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0xBA9A7A56 EQ PUSH2 0x818 JUMPI DUP1 PUSH4 0xBC25CF77 EQ PUSH2 0x836 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x87A JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x678 JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0x6D0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x72F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x7B2 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x6A627842 EQ PUSH2 0x5AA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x602 JUMPI DUP1 PUSH4 0x7464FC3D EQ PUSH2 0x65A JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x3644E515 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x4EC JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x50A JUMPI DUP1 PUSH4 0x5909C0D5 EQ PUSH2 0x56E JUMPI DUP1 PUSH4 0x5A3D5493 EQ PUSH2 0x58C JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x424 JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x4AA JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x4C8 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x22C0D9F EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x3BC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x406 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x259 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x227 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 POP POP POP PUSH2 0xA29 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x263 PUSH2 0x1234 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2A3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x288 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2D0 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E6 PUSH2 0x126D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x36C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x12CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C4 PUSH2 0x12E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40E PUSH2 0x1307 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x490 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x43A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x130D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B2 PUSH2 0x14D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D0 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F4 PUSH2 0x1504 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x56C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x520 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x150A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x576 PUSH2 0x1653 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x594 PUSH2 0x1659 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5EC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x165F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x644 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x618 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1B10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x662 PUSH2 0x1B28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6BA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x68E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1B2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x712 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1B46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x737 PUSH2 0x2133 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x777 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x75C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x7A4 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7FE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x7C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x216C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x820 PUSH2 0x2183 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x878 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x84C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2189 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x882 PUSH2 0x2464 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8CC PUSH2 0x248A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x924 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x24B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA09 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x9BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x27F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA27 PUSH2 0x2819 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0xC SLOAD EQ PUSH2 0xAA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A204C4F434B45440000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP6 GT DUP1 PUSH2 0xAB8 JUMPI POP PUSH1 0x0 DUP5 GT JUMPDEST PUSH2 0xB0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3A08 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB18 PUSH2 0x126D JUMP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 LT DUP1 ISZERO PUSH2 0xB4B JUMPI POP DUP1 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 LT JUMPDEST PUSH2 0xBBD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A20494E53554646494349454E545F4C495155494449545900 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xC76 JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0xCE8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A20494E56414C49445F544F00000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP12 GT ISZERO PUSH2 0xCFD JUMPI PUSH2 0xCFC DUP3 DUP11 DUP14 PUSH2 0x2A99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP11 GT ISZERO PUSH2 0xD12 JUMPI PUSH2 0xD11 DUP2 DUP11 DUP13 PUSH2 0x2A99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP9 DUP9 SWAP1 POP GT ISZERO PUSH2 0xDFA JUMPI DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x84800812 CALLER DUP14 DUP14 DUP13 DUP13 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDF5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE8B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP4 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF45 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP3 POP POP POP PUSH1 0x0 DUP10 DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB DUP4 GT PUSH2 0xF92 JUMPI PUSH1 0x0 PUSH2 0xFA8 JUMP JUMPDEST DUP10 DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB DUP4 SUB JUMPDEST SWAP1 POP PUSH1 0x0 DUP10 DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB DUP4 GT PUSH2 0xFCC JUMPI PUSH1 0x0 PUSH2 0xFE2 JUMP JUMPDEST DUP10 DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB DUP4 SUB JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 PUSH2 0xFF3 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x1048 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x39C0 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1084 PUSH2 0x1061 PUSH1 0x19 DUP6 PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1076 PUSH2 0x2710 DUP9 PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D7B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x10C2 PUSH2 0x109F PUSH1 0x19 DUP6 PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x10B4 PUSH2 0x2710 DUP9 PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D7B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x110D PUSH4 0x5F5E100 PUSH2 0x10FF DUP10 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP12 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1120 DUP3 DUP5 PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x1194 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A204B00000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH2 0x11A2 DUP5 DUP5 DUP9 DUP9 PUSH2 0x2DFE JUMP JUMPDEST DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD78AD95FA46C994B6551D0DA85FC275FE613CE37657FB8D5E3D130840159D822 DUP5 DUP5 DUP16 DUP16 PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP PUSH1 0x1 PUSH1 0xC DUP2 SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44657853776170204C5073000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH1 0x8 PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12D7 CALLER DUP5 DUP5 PUSH2 0x317C JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x14C2 JUMPI PUSH2 0x1441 DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2D7B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x14CD DUP5 DUP5 DUP5 PUSH2 0x3267 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x15CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A20464F5242494444454E0000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xC SLOAD EQ PUSH2 0x16D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A204C4F434B45440000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH2 0x16EC PUSH2 0x126D JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1792 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x17BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1870 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1884 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x189A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x18D2 DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0x2D7B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x18F9 DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0x2D7B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1907 DUP8 DUP8 PUSH2 0x33FB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x195B JUMPI PUSH2 0x1947 PUSH2 0x3E8 PUSH2 0x1939 PUSH2 0x1934 DUP7 DUP9 PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x3602 JUMP JUMPDEST PUSH2 0x2D7B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP9 POP PUSH2 0x1956 PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x3664 JUMP JUMPDEST PUSH2 0x19BE JUMP JUMPDEST PUSH2 0x19BB DUP9 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1982 DUP4 DUP8 PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x1989 JUMPI INVALID JUMPDEST DIV DUP9 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19AE DUP5 DUP8 PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x19B5 JUMPI INVALID JUMPDEST DIV PUSH2 0x377E JUMP JUMPDEST SWAP9 POP JUMPDEST PUSH1 0x0 DUP10 GT PUSH2 0x1A17 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3A2B PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A21 DUP11 DUP11 PUSH2 0x3664 JUMP JUMPDEST PUSH2 0x1A2D DUP7 DUP7 DUP11 DUP11 PUSH2 0x2DFE JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1AA5 JUMPI PUSH2 0x1A9E PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F DUP6 DUP6 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP PUSH1 0x1 PUSH1 0xC DUP2 SWAP1 SSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0xC SLOAD EQ PUSH2 0x1BC1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A204C4F434B45440000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH2 0x1BD4 PUSH2 0x126D JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CBA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1CD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D76 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1D8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x1DEF DUP9 DUP9 PUSH2 0x33FB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 POP DUP1 PUSH2 0x1E0B DUP7 DUP6 PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x1E12 JUMPI INVALID JUMPDEST DIV SWAP11 POP DUP1 PUSH2 0x1E29 DUP6 DUP6 PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x1E30 JUMPI INVALID JUMPDEST DIV SWAP10 POP PUSH1 0x0 DUP12 GT DUP1 ISZERO PUSH2 0x1E43 JUMPI POP PUSH1 0x0 DUP11 GT JUMPDEST PUSH2 0x1E98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x39E2 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1EA2 ADDRESS DUP5 PUSH2 0x3797 JUMP JUMPDEST PUSH2 0x1EAD DUP8 DUP14 DUP14 PUSH2 0x2A99 JUMP JUMPDEST PUSH2 0x1EB8 DUP7 DUP14 DUP13 PUSH2 0x2A99 JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F49 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP5 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1FEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2003 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2019 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP4 POP PUSH2 0x2038 DUP6 DUP6 DUP12 DUP12 PUSH2 0x2DFE JUMP JUMPDEST DUP2 ISZERO PUSH2 0x20B0 JUMPI PUSH2 0x20A9 PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP JUMPDEST DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDCCD412F0B1252819CB1FD330B93224CA42612892BB3F4F789976E6D81936496 DUP14 DUP14 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP PUSH1 0x1 PUSH1 0xC DUP2 SWAP1 SSTORE POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x446578537761702D4C5000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2179 CALLER DUP5 DUP5 PUSH2 0x3267 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xC SLOAD EQ PUSH2 0x2201 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A204C4F434B45440000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x2357 DUP3 DUP5 PUSH2 0x2352 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x231D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2D7B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2A99 JUMP JUMPDEST PUSH2 0x2457 DUP2 DUP5 PUSH2 0x2452 PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2409 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x241D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2433 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2D7B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2A99 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0xC DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x2526 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A204558504952454400000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP10 DUP10 DUP10 PUSH1 0x4 PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x26F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x276C JUMPI POP DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x27DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A20494E56414C49445F5349474E4154555245000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x27E9 DUP10 DUP10 DUP10 PUSH2 0x317C JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xC SLOAD EQ PUSH2 0x2891 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A204C4F434B45440000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH2 0x2A8F PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x293B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x294F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2965 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A29 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2A3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2DFE JUMP JUMPDEST PUSH1 0x1 PUSH1 0xC DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7472616E7366657228616464726573732C75696E743235362900000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x2BC6 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x2BA3 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2C28 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2C2D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x2C6D JUMPI POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x2C6C JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2C5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP JUMPDEST JUMPDEST PUSH2 0x2CDF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A205452414E534645525F4641494C45440000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EQ DUP1 PUSH2 0x2D03 JUMPI POP DUP3 DUP3 DUP4 DUP6 MUL SWAP3 POP DUP3 DUP2 PUSH2 0x2D00 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0x2D75 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D6D756C2D6F766572666C6F77000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 SUB SWAP2 POP DUP2 GT ISZERO PUSH2 0x2DF8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D7375622D756E646572666C6F770000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 GT ISZERO DUP1 ISZERO PUSH2 0x2E6E JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 GT ISZERO JUMPDEST PUSH2 0x2EE0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A204F564552464C4F57000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH5 0x100000000 TIMESTAMP DUP2 PUSH2 0x2EF0 JUMPI INVALID JUMPDEST MOD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP3 SUB SWAP1 POP PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x2F33 JUMPI POP PUSH1 0x0 DUP5 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2F50 JUMPI POP PUSH1 0x0 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x3032 JUMPI DUP1 PUSH4 0xFFFFFFFF AND PUSH2 0x2F95 DUP6 PUSH2 0x2F69 DUP7 PUSH2 0x38B1 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x38DC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH4 0xFFFFFFFF AND PUSH2 0x3003 DUP5 PUSH2 0x2FD7 DUP8 PUSH2 0x38B1 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x38DC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL PUSH1 0xA PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP6 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x8 PUSH1 0xE PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x8 PUSH1 0x1C PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x1C411E9A96E071241C2F21F7726B17AE89E3CAB4C78BE50E062B03A9FFFBBAD1 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x32B9 DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2D7B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x334E DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x393C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x17E7E58 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x347A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3490 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP2 POP PUSH1 0x0 PUSH1 0xB SLOAD SWAP1 POP DUP3 ISZERO PUSH2 0x35E8 JUMPI PUSH1 0x0 DUP2 EQ PUSH2 0x35E3 JUMPI PUSH1 0x0 PUSH2 0x3528 PUSH2 0x3523 DUP7 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x3602 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3535 DUP4 PUSH2 0x3602 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x35E0 JUMPI PUSH1 0x0 PUSH2 0x357B PUSH1 0x8 PUSH2 0x356D PUSH2 0x355C DUP6 DUP8 PUSH2 0x2D7B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x35B8 PUSH2 0x3596 PUSH1 0x8 DUP6 PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x35AA PUSH1 0x11 DUP8 PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x393C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 DUP2 PUSH2 0x35C5 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x35DC JUMPI PUSH2 0x35DB DUP8 DUP3 PUSH2 0x3664 JUMP JUMPDEST JUMPDEST POP POP POP JUMPDEST POP POP JUMPDEST PUSH2 0x35FA JUMP JUMPDEST PUSH1 0x0 DUP2 EQ PUSH2 0x35F9 JUMPI PUSH1 0x0 PUSH1 0xB DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x3651 JUMPI DUP2 SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 DUP5 DUP2 PUSH2 0x361E JUMPI INVALID JUMPDEST DIV ADD SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x364B JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 DUP2 PUSH2 0x363A JUMPI INVALID JUMPDEST DIV ADD DUP2 PUSH2 0x3643 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH2 0x3623 JUMP JUMPDEST POP PUSH2 0x365F JUMP JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x365E JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3679 DUP2 PUSH1 0x0 SLOAD PUSH2 0x393C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0x36D1 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x393C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x378D JUMPI DUP2 PUSH2 0x378F JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x37E9 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2D7B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x3841 DUP2 PUSH1 0x0 SLOAD PUSH2 0x2D7B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH15 0x10000000000000000000000000000 DUP3 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH2 0x3933 JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 ADD SWAP2 POP DUP2 LT ISZERO PUSH2 0x39B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D6164642D6F766572666C6F77000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID POP PUSH2 0x6E63 PUSH2 0x6B65 GASPRICE KECCAK256 0x49 0x4E MSTORE8 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x49 0x4E POP SSTORE SLOAD 0x5F COINBASE 0x4D 0x4F SSTORE 0x4E SLOAD POP PUSH2 0x6E63 PUSH2 0x6B65 GASPRICE KECCAK256 0x49 0x4E MSTORE8 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4C 0x49 MLOAD SSTORE 0x49 DIFFICULTY 0x49 SLOAD MSIZE 0x5F TIMESTAMP SSTORE MSTORE 0x4E GASLIMIT DIFFICULTY POP PUSH2 0x6E63 PUSH2 0x6B65 GASPRICE KECCAK256 0x49 0x4E MSTORE8 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4F SSTORE SLOAD POP SSTORE SLOAD 0x5F COINBASE 0x4D 0x4F SSTORE 0x4E SLOAD POP PUSH2 0x6E63 PUSH2 0x6B65 GASPRICE KECCAK256 0x49 0x4E MSTORE8 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4C 0x49 MLOAD SSTORE 0x49 DIFFICULTY 0x49 SLOAD MSIZE 0x5F 0x4D 0x49 0x4E SLOAD GASLIMIT DIFFICULTY LOG2 PUSH6 0x627A7A723158 KECCAK256 DELEGATECALL SWAP12 SAR 0x2B CALLDATACOPY 0xCD 0xCE 0xB4 0x23 0xB5 0xC1 0xA9 PUSH19 0x3E1A6DF0BE9A03694E4DE8E985D85DDE0554EB PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN GASLIMIT 0x49 POP CALLDATACOPY BALANCE ORIGIN DIFFICULTY PUSH16 0x6D61696E28737472696E67206E616D65 0x2C PUSH20 0x7472696E672076657273696F6E2C75696E743235 CALLDATASIZE KECCAK256 PUSH4 0x6861696E 0x49 PUSH5 0x2C61646472 PUSH6 0x737320766572 PUSH10 0x6679696E67436F6E7472 PUSH2 0x6374 0x29 ",
							"sourceMap": "318:9482:0:-;;;1158:1;1134:25;;2210:58;8:9:-1;5:2;;;30:1;27;20:12;5:2;2210:58:0;1005:15:1;1064:7;1053:18;;1160:95;;;;;;;;;;;;;;;;;;;1289:4;;;;;;;;;;;;;;;;;1273:22;;;;;;1323:10;;;;;;;;;;;;;;;;;1313:21;;;;;;1352:7;1385:4;1132:272;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1132:272:1;;;1109:305;;;;;;1090:16;:324;;;;974:447;2251:10:0;2241:7;;:20;;;;;;;;;;;;;;;;;;318:9482;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101a95760003560e01c80636a627842116100f9578063ba9a7a5611610097578063d21220a711610071578063d21220a7146108c4578063d505accf1461090e578063dd62ed3e146109a7578063fff6cae914610a1f576101a9565b8063ba9a7a5614610818578063bc25cf7714610836578063c45a01551461087a576101a9565b80637ecebe00116100d35780637ecebe001461067857806389afcb44146106d057806395d89b411461072f578063a9059cbb146107b2576101a9565b80636a627842146105aa57806370a08231146106025780637464fc3d1461065a576101a9565b806323b872dd116101665780633644e515116101405780633644e515146104ec578063485cc9551461050a5780635909c0d51461056e5780635a3d54931461058c576101a9565b806323b872dd1461042457806330adf81f146104aa578063313ce567146104c8576101a9565b8063022c0d9f146101ae57806306fdde031461025b5780630902f1ac146102de578063095ea7b3146103565780630dfe1681146103bc57806318160ddd14610406575b600080fd5b610259600480360360808110156101c457600080fd5b810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561021557600080fd5b82018360208201111561022757600080fd5b8035906020019184600183028401116401000000008311171561024957600080fd5b9091929391929390505050610a29565b005b610263611234565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102a3578082015181840152602081019050610288565b50505050905090810190601f1680156102d05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102e661126d565b60405180846dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168152602001836dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff1681526020018263ffffffff1663ffffffff168152602001935050505060405180910390f35b6103a26004803603604081101561036c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506112ca565b604051808215151515815260200191505060405180910390f35b6103c46112e1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61040e611307565b6040518082815260200191505060405180910390f35b6104906004803603606081101561043a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061130d565b604051808215151515815260200191505060405180910390f35b6104b26114d8565b6040518082815260200191505060405180910390f35b6104d06114ff565b604051808260ff1660ff16815260200191505060405180910390f35b6104f4611504565b6040518082815260200191505060405180910390f35b61056c6004803603604081101561052057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061150a565b005b610576611653565b6040518082815260200191505060405180910390f35b610594611659565b6040518082815260200191505060405180910390f35b6105ec600480360360208110156105c057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061165f565b6040518082815260200191505060405180910390f35b6106446004803603602081101561061857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b10565b6040518082815260200191505060405180910390f35b610662611b28565b6040518082815260200191505060405180910390f35b6106ba6004803603602081101561068e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b2e565b6040518082815260200191505060405180910390f35b610712600480360360208110156106e657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b46565b604051808381526020018281526020019250505060405180910390f35b610737612133565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561077757808201518184015260208101905061075c565b50505050905090810190601f1680156107a45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6107fe600480360360408110156107c857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061216c565b604051808215151515815260200191505060405180910390f35b610820612183565b6040518082815260200191505060405180910390f35b6108786004803603602081101561084c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612189565b005b610882612464565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108cc61248a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6109a5600480360360e081101561092457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff16906020019092919080359060200190929190803590602001909291905050506124b0565b005b610a09600480360360408110156109bd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506127f4565b6040518082815260200191505060405180910390f35b610a27612819565b005b6001600c5414610aa1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f50616e63616b653a204c4f434b4544000000000000000000000000000000000081525060200191505060405180910390fd5b6000600c819055506000851180610ab85750600084115b610b0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180613a086023913960400191505060405180910390fd5b600080610b1861126d565b5091509150816dffffffffffffffffffffffffffff1687108015610b4b5750806dffffffffffffffffffffffffffff1686105b610bbd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f50616e63616b653a20494e53554646494349454e545f4c49515549444954590081525060200191505060405180910390fd5b6000806000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508173ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614158015610c7657508073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614155b610ce8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f50616e63616b653a20494e56414c49445f544f0000000000000000000000000081525060200191505060405180910390fd5b60008b1115610cfd57610cfc828a8d612a99565b5b60008a1115610d1257610d11818a8c612a99565b5b6000888890501115610dfa578873ffffffffffffffffffffffffffffffffffffffff166384800812338d8d8c8c6040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509650505050505050600060405180830381600087803b158015610de157600080fd5b505af1158015610df5573d6000803e3d6000fd5b505050505b8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610e7757600080fd5b505afa158015610e8b573d6000803e3d6000fd5b505050506040513d6020811015610ea157600080fd5b810190808051906020019092919050505093508073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610f3157600080fd5b505afa158015610f45573d6000803e3d6000fd5b505050506040513d6020811015610f5b57600080fd5b810190808051906020019092919050505092505050600089856dffffffffffffffffffffffffffff16038311610f92576000610fa8565b89856dffffffffffffffffffffffffffff160383035b9050600089856dffffffffffffffffffffffffffff16038311610fcc576000610fe2565b89856dffffffffffffffffffffffffffff160383035b90506000821180610ff35750600081115b611048576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806139c06022913960400191505060405180910390fd5b6000611084611061601985612ce690919063ffffffff16565b61107661271088612ce690919063ffffffff16565b612d7b90919063ffffffff16565b905060006110c261109f601985612ce690919063ffffffff16565b6110b461271088612ce690919063ffffffff16565b612d7b90919063ffffffff16565b905061110d6305f5e1006110ff896dffffffffffffffffffffffffffff168b6dffffffffffffffffffffffffffff16612ce690919063ffffffff16565b612ce690919063ffffffff16565b6111208284612ce690919063ffffffff16565b1015611194576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f50616e63616b653a204b0000000000000000000000000000000000000000000081525060200191505060405180910390fd5b50506111a284848888612dfe565b8873ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d82284848f8f6040518085815260200184815260200183815260200182815260200194505050505060405180910390a35050505050506001600c819055505050505050565b6040518060400160405280600b81526020017f44657853776170204c507300000000000000000000000000000000000000000081525081565b6000806000600860009054906101000a90046dffffffffffffffffffffffffffff1692506008600e9054906101000a90046dffffffffffffffffffffffffffff1691506008601c9054906101000a900463ffffffff169050909192565b60006112d733848461317c565b6001905092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005481565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146114c25761144182600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612d7b90919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6114cd848484613267565b600190509392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b601281565b60035481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146115cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f50616e63616b653a20464f5242494444454e000000000000000000000000000081525060200191505060405180910390fd5b81600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60095481565b600a5481565b60006001600c54146116d9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f50616e63616b653a204c4f434b4544000000000000000000000000000000000081525060200191505060405180910390fd5b6000600c819055506000806116ec61126d565b50915091506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561179257600080fd5b505afa1580156117a6573d6000803e3d6000fd5b505050506040513d60208110156117bc57600080fd5b810190808051906020019092919050505090506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561187057600080fd5b505afa158015611884573d6000803e3d6000fd5b505050506040513d602081101561189a57600080fd5b8101908080519060200190929190505050905060006118d2856dffffffffffffffffffffffffffff1684612d7b90919063ffffffff16565b905060006118f9856dffffffffffffffffffffffffffff1684612d7b90919063ffffffff16565b9050600061190787876133fb565b9050600080549050600081141561195b576119476103e86119396119348688612ce690919063ffffffff16565b613602565b612d7b90919063ffffffff16565b985061195660006103e8613664565b6119be565b6119bb886dffffffffffffffffffffffffffff166119828387612ce690919063ffffffff16565b8161198957fe5b04886dffffffffffffffffffffffffffff166119ae8487612ce690919063ffffffff16565b816119b557fe5b0461377e565b98505b60008911611a17576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180613a2b6026913960400191505060405180910390fd5b611a218a8a613664565b611a2d86868a8a612dfe565b8115611aa557611a9e6008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16612ce690919063ffffffff16565b600b819055505b3373ffffffffffffffffffffffffffffffffffffffff167f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f8585604051808381526020018281526020019250505060405180910390a250505050505050506001600c81905550919050565b60016020528060005260406000206000915090505481565b600b5481565b60046020528060005260406000206000915090505481565b6000806001600c5414611bc1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f50616e63616b653a204c4f434b4544000000000000000000000000000000000081525060200191505060405180910390fd5b6000600c81905550600080611bd461126d565b50915091506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611ca657600080fd5b505afa158015611cba573d6000803e3d6000fd5b505050506040513d6020811015611cd057600080fd5b8101908080519060200190929190505050905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611d6257600080fd5b505afa158015611d76573d6000803e3d6000fd5b505050506040513d6020811015611d8c57600080fd5b810190808051906020019092919050505090506000600160003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000611def88886133fb565b905060008054905080611e0b8685612ce690919063ffffffff16565b81611e1257fe5b049a5080611e298585612ce690919063ffffffff16565b81611e3057fe5b04995060008b118015611e43575060008a115b611e98576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806139e26026913960400191505060405180910390fd5b611ea23084613797565b611ead878d8d612a99565b611eb8868d8c612a99565b8673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611f3557600080fd5b505afa158015611f49573d6000803e3d6000fd5b505050506040513d6020811015611f5f57600080fd5b810190808051906020019092919050505094508573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611fef57600080fd5b505afa158015612003573d6000803e3d6000fd5b505050506040513d602081101561201957600080fd5b8101908080519060200190929190505050935061203885858b8b612dfe565b81156120b0576120a96008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16612ce690919063ffffffff16565b600b819055505b8b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d819364968d8d604051808381526020018281526020019250505060405180910390a35050505050505050506001600c81905550915091565b6040518060400160405280600a81526020017f446578537761702d4c500000000000000000000000000000000000000000000081525081565b6000612179338484613267565b6001905092915050565b6103e881565b6001600c5414612201576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f50616e63616b653a204c4f434b4544000000000000000000000000000000000081525060200191505060405180910390fd5b6000600c819055506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506123578284612352600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561230957600080fd5b505afa15801561231d573d6000803e3d6000fd5b505050506040513d602081101561233357600080fd5b8101908080519060200190929190505050612d7b90919063ffffffff16565b612a99565b61245781846124526008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561240957600080fd5b505afa15801561241d573d6000803e3d6000fd5b505050506040513d602081101561243357600080fd5b8101908080519060200190929190505050612d7b90919063ffffffff16565b612a99565b50506001600c8190555050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b42841015612526576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f50616e63616b653a20455850495245440000000000000000000000000000000081525060200191505060405180910390fd5b60006003547f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b898989600460008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558a604051602001808781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200196505050505050506040516020818303038152906040528051906020012060405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050600060018286868660405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156126f8573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415801561276c57508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b6127de576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f50616e63616b653a20494e56414c49445f5349474e415455524500000000000081525060200191505060405180910390fd5b6127e989898961317c565b505050505050505050565b6002602052816000526040600020602052806000526040600020600091509150505481565b6001600c5414612891576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f50616e63616b653a204c4f434b4544000000000000000000000000000000000081525060200191505060405180910390fd5b6000600c81905550612a8f600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561293b57600080fd5b505afa15801561294f573d6000803e3d6000fd5b505050506040513d602081101561296557600080fd5b8101908080519060200190929190505050600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015612a1557600080fd5b505afa158015612a29573d6000803e3d6000fd5b505050506040513d6020811015612a3f57600080fd5b8101908080519060200190929190505050600860009054906101000a90046dffffffffffffffffffffffffffff166008600e9054906101000a90046dffffffffffffffffffffffffffff16612dfe565b6001600c81905550565b600060608473ffffffffffffffffffffffffffffffffffffffff166040518060400160405280601981526020017f7472616e7366657228616464726573732c75696e743235362900000000000000815250805190602001208585604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b60208310612bc65780518252602082019150602081019050602083039250612ba3565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114612c28576040519150601f19603f3d011682016040523d82523d6000602084013e612c2d565b606091505b5091509150818015612c6d5750600081511480612c6c5750808060200190516020811015612c5a57600080fd5b81019080805190602001909291905050505b5b612cdf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f50616e63616b653a205452414e534645525f4641494c4544000000000000000081525060200191505060405180910390fd5b5050505050565b600080821480612d035750828283850292508281612d0057fe5b04145b612d75576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d6d6174682d6d756c2d6f766572666c6f7700000000000000000000000081525060200191505060405180910390fd5b92915050565b6000828284039150811115612df8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f64732d6d6174682d7375622d756e646572666c6f77000000000000000000000081525060200191505060405180910390fd5b92915050565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6dffffffffffffffffffffffffffff168411158015612e6e57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6dffffffffffffffffffffffffffff168311155b612ee0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f50616e63616b653a204f564552464c4f5700000000000000000000000000000081525060200191505060405180910390fd5b60006401000000004281612ef057fe5b06905060006008601c9054906101000a900463ffffffff168203905060008163ffffffff16118015612f3357506000846dffffffffffffffffffffffffffff1614155b8015612f5057506000836dffffffffffffffffffffffffffff1614155b15613032578063ffffffff16612f9585612f69866138b1565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166138dc90919063ffffffff16565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16026009600082825401925050819055508063ffffffff1661300384612fd7876138b1565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166138dc90919063ffffffff16565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1602600a600082825401925050819055505b85600860006101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff160217905550846008600e6101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff160217905550816008601c6101000a81548163ffffffff021916908363ffffffff1602179055507f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1600860009054906101000a90046dffffffffffffffffffffffffffff166008600e9054906101000a90046dffffffffffffffffffffffffffff1660405180836dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168152602001826dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff1681526020019250505060405180910390a1505050505050565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b6132b981600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612d7b90919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061334e81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461393c90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663017e7e586040518163ffffffff1660e01b815260040160206040518083038186803b15801561346657600080fd5b505afa15801561347a573d6000803e3d6000fd5b505050506040513d602081101561349057600080fd5b81019080805190602001909291905050509050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141591506000600b54905082156135e857600081146135e3576000613528613523866dffffffffffffffffffffffffffff16886dffffffffffffffffffffffffffff16612ce690919063ffffffff16565b613602565b9050600061353583613602565b9050808211156135e057600061357b600861356d61355c8587612d7b90919063ffffffff16565b600054612ce690919063ffffffff16565b612ce690919063ffffffff16565b905060006135b8613596600885612ce690919063ffffffff16565b6135aa601187612ce690919063ffffffff16565b61393c90919063ffffffff16565b905060008183816135c557fe5b04905060008111156135dc576135db8782613664565b5b5050505b50505b6135fa565b600081146135f9576000600b819055505b5b505092915050565b6000600382111561365157819050600060016002848161361e57fe5b040190505b8181101561364b5780915060028182858161363a57fe5b04018161364357fe5b049050613623565b5061365f565b6000821461365e57600190505b5b919050565b6136798160005461393c90919063ffffffff16565b6000819055506136d181600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461393c90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600081831061378d578161378f565b825b905092915050565b6137e981600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612d7b90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061384181600054612d7b90919063ffffffff16565b600081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60006e010000000000000000000000000000826dffffffffffffffffffffffffffff16029050919050565b6000816dffffffffffffffffffffffffffff167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff168161393357fe5b04905092915050565b60008282840191508110156139b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d6d6174682d6164642d6f766572666c6f7700000000000000000000000081525060200191505060405180910390fd5b9291505056fe50616e63616b653a20494e53554646494349454e545f494e5055545f414d4f554e5450616e63616b653a20494e53554646494349454e545f4c49515549444954595f4255524e454450616e63616b653a20494e53554646494349454e545f4f55545055545f414d4f554e5450616e63616b653a20494e53554646494349454e545f4c49515549444954595f4d494e544544a265627a7a72315820f49b1d2b37cdceb423b5c1a9723e1a6df0be9a03694e4de8e985d85dde0554eb64736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6A627842 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xBA9A7A56 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD21220A7 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x8C4 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x90E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x9A7 JUMPI DUP1 PUSH4 0xFFF6CAE9 EQ PUSH2 0xA1F JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0xBA9A7A56 EQ PUSH2 0x818 JUMPI DUP1 PUSH4 0xBC25CF77 EQ PUSH2 0x836 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x87A JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x678 JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0x6D0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x72F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x7B2 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x6A627842 EQ PUSH2 0x5AA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x602 JUMPI DUP1 PUSH4 0x7464FC3D EQ PUSH2 0x65A JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x3644E515 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x4EC JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x50A JUMPI DUP1 PUSH4 0x5909C0D5 EQ PUSH2 0x56E JUMPI DUP1 PUSH4 0x5A3D5493 EQ PUSH2 0x58C JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x424 JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x4AA JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x4C8 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x22C0D9F EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x3BC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x406 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x259 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x227 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 POP POP POP PUSH2 0xA29 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x263 PUSH2 0x1234 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2A3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x288 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2D0 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E6 PUSH2 0x126D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x36C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x12CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C4 PUSH2 0x12E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40E PUSH2 0x1307 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x490 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x43A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x130D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B2 PUSH2 0x14D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D0 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F4 PUSH2 0x1504 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x56C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x520 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x150A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x576 PUSH2 0x1653 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x594 PUSH2 0x1659 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5EC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x165F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x644 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x618 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1B10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x662 PUSH2 0x1B28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6BA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x68E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1B2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x712 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1B46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x737 PUSH2 0x2133 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x777 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x75C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x7A4 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7FE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x7C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x216C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x820 PUSH2 0x2183 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x878 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x84C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2189 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x882 PUSH2 0x2464 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8CC PUSH2 0x248A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x924 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x24B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA09 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x9BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x27F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA27 PUSH2 0x2819 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0xC SLOAD EQ PUSH2 0xAA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A204C4F434B45440000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP6 GT DUP1 PUSH2 0xAB8 JUMPI POP PUSH1 0x0 DUP5 GT JUMPDEST PUSH2 0xB0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3A08 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB18 PUSH2 0x126D JUMP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 LT DUP1 ISZERO PUSH2 0xB4B JUMPI POP DUP1 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 LT JUMPDEST PUSH2 0xBBD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A20494E53554646494349454E545F4C495155494449545900 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xC76 JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0xCE8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A20494E56414C49445F544F00000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP12 GT ISZERO PUSH2 0xCFD JUMPI PUSH2 0xCFC DUP3 DUP11 DUP14 PUSH2 0x2A99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP11 GT ISZERO PUSH2 0xD12 JUMPI PUSH2 0xD11 DUP2 DUP11 DUP13 PUSH2 0x2A99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP9 DUP9 SWAP1 POP GT ISZERO PUSH2 0xDFA JUMPI DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x84800812 CALLER DUP14 DUP14 DUP13 DUP13 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDF5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE8B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP4 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF45 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP3 POP POP POP PUSH1 0x0 DUP10 DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB DUP4 GT PUSH2 0xF92 JUMPI PUSH1 0x0 PUSH2 0xFA8 JUMP JUMPDEST DUP10 DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB DUP4 SUB JUMPDEST SWAP1 POP PUSH1 0x0 DUP10 DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB DUP4 GT PUSH2 0xFCC JUMPI PUSH1 0x0 PUSH2 0xFE2 JUMP JUMPDEST DUP10 DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB DUP4 SUB JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 PUSH2 0xFF3 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x1048 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x39C0 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1084 PUSH2 0x1061 PUSH1 0x19 DUP6 PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1076 PUSH2 0x2710 DUP9 PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D7B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x10C2 PUSH2 0x109F PUSH1 0x19 DUP6 PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x10B4 PUSH2 0x2710 DUP9 PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D7B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x110D PUSH4 0x5F5E100 PUSH2 0x10FF DUP10 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP12 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1120 DUP3 DUP5 PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x1194 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A204B00000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH2 0x11A2 DUP5 DUP5 DUP9 DUP9 PUSH2 0x2DFE JUMP JUMPDEST DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD78AD95FA46C994B6551D0DA85FC275FE613CE37657FB8D5E3D130840159D822 DUP5 DUP5 DUP16 DUP16 PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP PUSH1 0x1 PUSH1 0xC DUP2 SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44657853776170204C5073000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH1 0x8 PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12D7 CALLER DUP5 DUP5 PUSH2 0x317C JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x14C2 JUMPI PUSH2 0x1441 DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2D7B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x14CD DUP5 DUP5 DUP5 PUSH2 0x3267 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x15CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A20464F5242494444454E0000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xC SLOAD EQ PUSH2 0x16D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A204C4F434B45440000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH2 0x16EC PUSH2 0x126D JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1792 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x17BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1870 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1884 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x189A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x18D2 DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0x2D7B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x18F9 DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0x2D7B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1907 DUP8 DUP8 PUSH2 0x33FB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x195B JUMPI PUSH2 0x1947 PUSH2 0x3E8 PUSH2 0x1939 PUSH2 0x1934 DUP7 DUP9 PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x3602 JUMP JUMPDEST PUSH2 0x2D7B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP9 POP PUSH2 0x1956 PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x3664 JUMP JUMPDEST PUSH2 0x19BE JUMP JUMPDEST PUSH2 0x19BB DUP9 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1982 DUP4 DUP8 PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x1989 JUMPI INVALID JUMPDEST DIV DUP9 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19AE DUP5 DUP8 PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x19B5 JUMPI INVALID JUMPDEST DIV PUSH2 0x377E JUMP JUMPDEST SWAP9 POP JUMPDEST PUSH1 0x0 DUP10 GT PUSH2 0x1A17 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3A2B PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A21 DUP11 DUP11 PUSH2 0x3664 JUMP JUMPDEST PUSH2 0x1A2D DUP7 DUP7 DUP11 DUP11 PUSH2 0x2DFE JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1AA5 JUMPI PUSH2 0x1A9E PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F DUP6 DUP6 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP PUSH1 0x1 PUSH1 0xC DUP2 SWAP1 SSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0xC SLOAD EQ PUSH2 0x1BC1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A204C4F434B45440000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH2 0x1BD4 PUSH2 0x126D JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CBA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1CD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D76 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1D8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x1DEF DUP9 DUP9 PUSH2 0x33FB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 POP DUP1 PUSH2 0x1E0B DUP7 DUP6 PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x1E12 JUMPI INVALID JUMPDEST DIV SWAP11 POP DUP1 PUSH2 0x1E29 DUP6 DUP6 PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x1E30 JUMPI INVALID JUMPDEST DIV SWAP10 POP PUSH1 0x0 DUP12 GT DUP1 ISZERO PUSH2 0x1E43 JUMPI POP PUSH1 0x0 DUP11 GT JUMPDEST PUSH2 0x1E98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x39E2 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1EA2 ADDRESS DUP5 PUSH2 0x3797 JUMP JUMPDEST PUSH2 0x1EAD DUP8 DUP14 DUP14 PUSH2 0x2A99 JUMP JUMPDEST PUSH2 0x1EB8 DUP7 DUP14 DUP13 PUSH2 0x2A99 JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F49 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP5 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1FEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2003 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2019 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP4 POP PUSH2 0x2038 DUP6 DUP6 DUP12 DUP12 PUSH2 0x2DFE JUMP JUMPDEST DUP2 ISZERO PUSH2 0x20B0 JUMPI PUSH2 0x20A9 PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP JUMPDEST DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDCCD412F0B1252819CB1FD330B93224CA42612892BB3F4F789976E6D81936496 DUP14 DUP14 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP PUSH1 0x1 PUSH1 0xC DUP2 SWAP1 SSTORE POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x446578537761702D4C5000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2179 CALLER DUP5 DUP5 PUSH2 0x3267 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xC SLOAD EQ PUSH2 0x2201 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A204C4F434B45440000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x2357 DUP3 DUP5 PUSH2 0x2352 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x231D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2D7B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2A99 JUMP JUMPDEST PUSH2 0x2457 DUP2 DUP5 PUSH2 0x2452 PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2409 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x241D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2433 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2D7B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2A99 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0xC DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x2526 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A204558504952454400000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP10 DUP10 DUP10 PUSH1 0x4 PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x26F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x276C JUMPI POP DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x27DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A20494E56414C49445F5349474E4154555245000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x27E9 DUP10 DUP10 DUP10 PUSH2 0x317C JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xC SLOAD EQ PUSH2 0x2891 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A204C4F434B45440000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH2 0x2A8F PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x293B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x294F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2965 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A29 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2A3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2DFE JUMP JUMPDEST PUSH1 0x1 PUSH1 0xC DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7472616E7366657228616464726573732C75696E743235362900000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x2BC6 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x2BA3 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2C28 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2C2D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x2C6D JUMPI POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x2C6C JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2C5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP JUMPDEST JUMPDEST PUSH2 0x2CDF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A205452414E534645525F4641494C45440000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EQ DUP1 PUSH2 0x2D03 JUMPI POP DUP3 DUP3 DUP4 DUP6 MUL SWAP3 POP DUP3 DUP2 PUSH2 0x2D00 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0x2D75 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D6D756C2D6F766572666C6F77000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 SUB SWAP2 POP DUP2 GT ISZERO PUSH2 0x2DF8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D7375622D756E646572666C6F770000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 GT ISZERO DUP1 ISZERO PUSH2 0x2E6E JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 GT ISZERO JUMPDEST PUSH2 0x2EE0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A204F564552464C4F57000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH5 0x100000000 TIMESTAMP DUP2 PUSH2 0x2EF0 JUMPI INVALID JUMPDEST MOD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP3 SUB SWAP1 POP PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x2F33 JUMPI POP PUSH1 0x0 DUP5 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2F50 JUMPI POP PUSH1 0x0 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x3032 JUMPI DUP1 PUSH4 0xFFFFFFFF AND PUSH2 0x2F95 DUP6 PUSH2 0x2F69 DUP7 PUSH2 0x38B1 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x38DC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH4 0xFFFFFFFF AND PUSH2 0x3003 DUP5 PUSH2 0x2FD7 DUP8 PUSH2 0x38B1 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x38DC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL PUSH1 0xA PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP6 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x8 PUSH1 0xE PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x8 PUSH1 0x1C PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x1C411E9A96E071241C2F21F7726B17AE89E3CAB4C78BE50E062B03A9FFFBBAD1 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x32B9 DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2D7B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x334E DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x393C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x17E7E58 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x347A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3490 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP2 POP PUSH1 0x0 PUSH1 0xB SLOAD SWAP1 POP DUP3 ISZERO PUSH2 0x35E8 JUMPI PUSH1 0x0 DUP2 EQ PUSH2 0x35E3 JUMPI PUSH1 0x0 PUSH2 0x3528 PUSH2 0x3523 DUP7 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x3602 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3535 DUP4 PUSH2 0x3602 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x35E0 JUMPI PUSH1 0x0 PUSH2 0x357B PUSH1 0x8 PUSH2 0x356D PUSH2 0x355C DUP6 DUP8 PUSH2 0x2D7B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x35B8 PUSH2 0x3596 PUSH1 0x8 DUP6 PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x35AA PUSH1 0x11 DUP8 PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x393C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 DUP2 PUSH2 0x35C5 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x35DC JUMPI PUSH2 0x35DB DUP8 DUP3 PUSH2 0x3664 JUMP JUMPDEST JUMPDEST POP POP POP JUMPDEST POP POP JUMPDEST PUSH2 0x35FA JUMP JUMPDEST PUSH1 0x0 DUP2 EQ PUSH2 0x35F9 JUMPI PUSH1 0x0 PUSH1 0xB DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x3651 JUMPI DUP2 SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 DUP5 DUP2 PUSH2 0x361E JUMPI INVALID JUMPDEST DIV ADD SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x364B JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 DUP2 PUSH2 0x363A JUMPI INVALID JUMPDEST DIV ADD DUP2 PUSH2 0x3643 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH2 0x3623 JUMP JUMPDEST POP PUSH2 0x365F JUMP JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x365E JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3679 DUP2 PUSH1 0x0 SLOAD PUSH2 0x393C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0x36D1 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x393C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x378D JUMPI DUP2 PUSH2 0x378F JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x37E9 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2D7B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x3841 DUP2 PUSH1 0x0 SLOAD PUSH2 0x2D7B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH15 0x10000000000000000000000000000 DUP3 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH2 0x3933 JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 ADD SWAP2 POP DUP2 LT ISZERO PUSH2 0x39B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D6164642D6F766572666C6F77000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID POP PUSH2 0x6E63 PUSH2 0x6B65 GASPRICE KECCAK256 0x49 0x4E MSTORE8 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x49 0x4E POP SSTORE SLOAD 0x5F COINBASE 0x4D 0x4F SSTORE 0x4E SLOAD POP PUSH2 0x6E63 PUSH2 0x6B65 GASPRICE KECCAK256 0x49 0x4E MSTORE8 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4C 0x49 MLOAD SSTORE 0x49 DIFFICULTY 0x49 SLOAD MSIZE 0x5F TIMESTAMP SSTORE MSTORE 0x4E GASLIMIT DIFFICULTY POP PUSH2 0x6E63 PUSH2 0x6B65 GASPRICE KECCAK256 0x49 0x4E MSTORE8 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4F SSTORE SLOAD POP SSTORE SLOAD 0x5F COINBASE 0x4D 0x4F SSTORE 0x4E SLOAD POP PUSH2 0x6E63 PUSH2 0x6B65 GASPRICE KECCAK256 0x49 0x4E MSTORE8 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4C 0x49 MLOAD SSTORE 0x49 DIFFICULTY 0x49 SLOAD MSIZE 0x5F 0x4D 0x49 0x4E SLOAD GASLIMIT DIFFICULTY LOG2 PUSH6 0x627A7A723158 KECCAK256 DELEGATECALL SWAP12 SAR 0x2B CALLDATACOPY 0xCD 0xCE 0xB4 0x23 0xB5 0xC1 0xA9 PUSH19 0x3E1A6DF0BE9A03694E4DE8E985D85DDE0554EB PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "318:9482:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;318:9482:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7365:1856;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7365:1856:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7365:1856:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7365:1856:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7365:1856:0;;;;;;;;;;;;:::i;:::-;;217:43:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;217:43:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1300:227:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2307:147:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2307:147:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;610:21:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;357:26:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2605:331;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2605:331:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;651:108;;;:::i;:::-;;;;;;;;;;;;;;;;;;;316:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;510:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2330:204:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2330:204:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;954:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;992;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4488:1217;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4488:1217:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;389:44:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;389:44:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1030:17:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;765:41:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;765:41:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5814:1442:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5814:1442:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;266:44:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;266:44:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2460:139;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2460:139:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;435:46:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9267:329;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9267:329:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;582:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;637:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2942:726:1;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2942:726:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;439:64;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;439:64:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9642:156:0;;;:::i;:::-;;7365:1856;1211:1;1199:8;;:13;1191:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1253:1;1242:8;:12;;;;7491:1;7478:10;:14;:32;;;;7509:1;7496:10;:14;7478:32;7470:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7561:17;7580;7602:13;:11;:13::i;:::-;7560:55;;;;;7661:9;7648:22;;:10;:22;:48;;;;;7687:9;7674:22;;:10;:22;7648:48;7640:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7743:13;7766;7854:15;7872:6;;;;;;;;;;;7854:24;;7888:15;7906:6;;;;;;;;;;;7888:24;;7936:7;7930:13;;:2;:13;;;;:30;;;;;7953:7;7947:13;;:2;:13;;;;7930:30;7922:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8011:1;7998:10;:14;7994:58;;;8014:38;8028:7;8037:2;8041:10;8014:13;:38::i;:::-;7994:58;8113:1;8100:10;:14;8096:58;;;8116:38;8130:7;8139:2;8143:10;8116:13;:38::i;:::-;8096:58;8216:1;8202:4;;:11;;:15;8198:93;;;8234:2;8219:30;;;8250:10;8262;8274;8286:4;;8219:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;8219:72:0;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8219:72:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8219:72:0;;;;8198:93;8319:7;8312:25;;;8346:4;8312:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8312:40:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8312:40:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8312:40:0;;;;;;;;;;;;;;;;8301:51;;8380:7;8373:25;;;8407:4;8373:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8373:40:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8373:40:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8373:40:0;;;;;;;;;;;;;;;;8362:51;;1264:1;;8433:14;8473:10;8461:9;:22;;;8450:8;:33;:75;;8524:1;8450:75;;;8510:10;8498:9;:22;;;8486:8;:35;8450:75;8433:92;;8535:14;8575:10;8563:9;:22;;;8552:8;:33;:75;;8626:1;8552:75;;;8612:10;8600:9;:22;;;8588:8;:35;8552:75;8535:92;;8657:1;8645:9;:13;:30;;;;8674:1;8662:9;:13;8645:30;8637:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8798:21;8823:42;8847:17;8861:2;8847:9;:13;;:17;;;;:::i;:::-;8823:19;8836:5;8823:8;:12;;:19;;;;:::i;:::-;:23;;:42;;;;:::i;:::-;8798:68;;8876:21;8901:42;8925:17;8939:2;8925:9;:13;;:17;;;;:::i;:::-;8901:19;8914:5;8901:8;:12;;:19;;;;:::i;:::-;:23;;:42;;;;:::i;:::-;8876:68;;9004:44;9039:8;9004:30;9024:9;9004:30;;9009:9;9004:15;;:19;;:30;;;;:::i;:::-;:34;;:44;;;;:::i;:::-;8962:38;8983:16;8962;:20;;:38;;;;:::i;:::-;:86;;8954:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1264:1;;9084:49;9092:8;9102;9112:9;9123;9084:7;:49::i;:::-;9211:2;9148:66;;9153:10;9148:66;;;9165:9;9176;9187:10;9199;9148:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1264:1;;;;;;1286;1275:8;:12;;;;7365:1856;;;;;:::o;217:43:1:-;;;;;;;;;;;;;;;;;;;:::o;1300:227:0:-;1344:17;1363;1382:26;1432:8;;;;;;;;;;;1420:20;;1462:8;;;;;;;;;;;1450:20;;1502:18;;;;;;;;;;;1480:40;;1300:227;;;:::o;2307:147:1:-;2374:4;2390:36;2399:10;2411:7;2420:5;2390:8;:36::i;:::-;2443:4;2436:11;;2307:147;;;;:::o;610:21:0:-;;;;;;;;;;;;;:::o;357:26:1:-;;;;:::o;2605:331::-;2716:4;2775:2;2736:9;:15;2746:4;2736:15;;;;;;;;;;;;;;;:27;2752:10;2736:27;;;;;;;;;;;;;;;;:42;2732:141;;2824:38;2856:5;2824:9;:15;2834:4;2824:15;;;;;;;;;;;;;;;:27;2840:10;2824:27;;;;;;;;;;;;;;;;:31;;:38;;;;:::i;:::-;2794:9;:15;2804:4;2794:15;;;;;;;;;;;;;;;:27;2810:10;2794:27;;;;;;;;;;;;;;;:68;;;;2732:141;2882:26;2892:4;2898:2;2902:5;2882:9;:26::i;:::-;2925:4;2918:11;;2605:331;;;;;:::o;651:108::-;693:66;651:108;;;:::o;316:35::-;349:2;316:35;:::o;510:31::-;;;;:::o;2330:204:0:-;2425:7;;;;;;;;;;;2411:21;;:10;:21;;;2403:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2494:7;2485:6;;:16;;;;;;;;;;;;;;;;;;2520:7;2511:6;;:16;;;;;;;;;;;;;;;;;;2330:204;;:::o;954:32::-;;;;:::o;992:::-;;;;:::o;4488:1217::-;4537:14;1211:1;1199:8;;:13;1191:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1253:1;1242:8;:12;;;;4564:17;4583;4605:13;:11;:13::i;:::-;4563:55;;;;;4643:13;4666:6;;;;;;;;;;;4659:24;;;4692:4;4659:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4659:39:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4659:39:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4659:39:0;;;;;;;;;;;;;;;;4643:55;;4708:13;4731:6;;;;;;;;;;;4724:24;;;4757:4;4724:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4724:39:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4724:39:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4724:39:0;;;;;;;;;;;;;;;;4708:55;;4773:12;4788:23;4801:9;4788:23;;:8;:12;;:23;;;;:::i;:::-;4773:38;;4821:12;4836:23;4849:9;4836:23;;:8;:12;;:23;;;;:::i;:::-;4821:38;;4870:10;4883:30;4892:9;4903;4883:8;:30::i;:::-;4870:43;;4923:17;4943:11;;4923:31;;5062:1;5046:12;:17;5042:347;;;5091:54;476:5;5091:31;5101:20;5113:7;5101;:11;;:20;;;;:::i;:::-;5091:9;:31::i;:::-;:35;;:54;;;;:::i;:::-;5079:66;;5158:36;5172:1;476:5;5158;:36::i;:::-;5042:347;;;5292:86;5329:9;5301:37;;:25;5313:12;5301:7;:11;;:25;;;;:::i;:::-;:37;;;;;;5368:9;5340:37;;:25;5352:12;5340:7;:11;;:25;;;;:::i;:::-;:37;;;;;;5292:8;:86::i;:::-;5280:98;;5042:347;5418:1;5406:9;:13;5398:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5472:20;5478:2;5482:9;5472:5;:20::i;:::-;5503:49;5511:8;5521;5531:9;5542;5503:7;:49::i;:::-;5566:5;5562:47;;;5581:28;5600:8;;;;;;;;;;;5581:28;;5586:8;;;;;;;;;;;5581:14;;:18;;:28;;;;:::i;:::-;5573:5;:36;;;;5562:47;5669:10;5664:34;;;5681:7;5690;5664:34;;;;;;;;;;;;;;;;;;;;;;;;1264:1;;;;;;;;1286;1275:8;:12;;;;4488:1217;;;:::o;389:44:1:-;;;;;;;;;;;;;;;;;:::o;1030:17:0:-;;;;:::o;765:41:1:-;;;;;;;;;;;;;;;;;:::o;5814:1442:0:-;5863:12;5877;1211:1;1199:8;;:13;1191:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1253:1;1242:8;:12;;;;5902:17;5921;5943:13;:11;:13::i;:::-;5901:55;;;;;5981:15;5999:6;;;;;;;;;;;5981:24;;6061:15;6079:6;;;;;;;;;;;6061:24;;6141:13;6164:7;6157:25;;;6191:4;6157:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6157:40:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6157:40:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6157:40:0;;;;;;;;;;;;;;;;6141:56;;6207:13;6230:7;6223:25;;;6257:4;6223:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6223:40:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6223:40:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6223:40:0;;;;;;;;;;;;;;;;6207:56;;6273:14;6290:9;:24;6308:4;6290:24;;;;;;;;;;;;;;;;6273:41;;6325:10;6338:30;6347:9;6358;6338:8;:30::i;:::-;6325:43;;6378:17;6398:11;;6378:31;;6533:12;6507:23;6521:8;6507:9;:13;;:23;;;;:::i;:::-;:38;;;;;;6497:48;;6639:12;6613:23;6627:8;6613:9;:13;;:23;;;;:::i;:::-;:38;;;;;;6603:48;;6727:1;6717:7;:11;:26;;;;;6742:1;6732:7;:11;6717:26;6709:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6796:31;6810:4;6817:9;6796:5;:31::i;:::-;6837:35;6851:7;6860:2;6864:7;6837:13;:35::i;:::-;6882;6896:7;6905:2;6909:7;6882:13;:35::i;:::-;6945:7;6938:25;;;6972:4;6938:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6938:40:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6938:40:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6938:40:0;;;;;;;;;;;;;;;;6927:51;;7006:7;6999:25;;;7033:4;6999:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6999:40:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6999:40:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6999:40:0;;;;;;;;;;;;;;;;6988:51;;7050:49;7058:8;7068;7078:9;7089;7050:7;:49::i;:::-;7113:5;7109:47;;;7128:28;7147:8;;;;;;;;;;;7128:28;;7133:8;;;;;;;;;;;7128:14;;:18;;:28;;;;:::i;:::-;7120:5;:36;;;;7109:47;7246:2;7211:38;;7216:10;7211:38;;;7228:7;7237;7211:38;;;;;;;;;;;;;;;;;;;;;;;;1264:1;;;;;;;;;1286;1275:8;:12;;;;5814:1442;;;:::o;266:44:1:-;;;;;;;;;;;;;;;;;;;:::o;2460:139::-;2523:4;2539:32;2549:10;2561:2;2565:5;2539:9;:32::i;:::-;2588:4;2581:11;;2460:139;;;;:::o;435:46:0:-;476:5;435:46;:::o;9267:329::-;1211:1;1199:8;;:13;1191:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1253:1;1242:8;:12;;;;9317:15;9335:6;;;;;;;;;;;9317:24;;9366:15;9384:6;;;;;;;;;;;9366:24;;9415:82;9429:7;9438:2;9442:54;9487:8;;;;;;;;;;;9442:54;;9449:7;9442:25;;;9476:4;9442:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9442:40:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9442:40:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9442:40:0;;;;;;;;;;;;;;;;:44;;:54;;;;:::i;:::-;9415:13;:82::i;:::-;9507;9521:7;9530:2;9534:54;9579:8;;;;;;;;;;;9534:54;;9541:7;9534:25;;;9568:4;9534:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9534:40:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9534:40:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9534:40:0;;;;;;;;;;;;;;;;:44;;:54;;;;:::i;:::-;9507:13;:82::i;:::-;1264:1;;1286;1275:8;:12;;;;9267:329;:::o;582:22::-;;;;;;;;;;;;;:::o;637:21::-;;;;;;;;;;;;;:::o;2942:726:1:-;3155:15;3143:8;:27;;3135:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3201:14;3303:16;;693:66;3358:15;;3375:5;3382:7;3391:5;3398:6;:13;3405:5;3398:13;;;;;;;;;;;;;;;;:15;;;;;;;;;;;;3415:8;3347:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3347:77:1;;;3337:88;;;;;;3241:198;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3241:198:1;;;3218:231;;;;;;3201:248;;3459:24;3486:26;3496:6;3504:1;3507;3510;3486:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3486:26:1;;;;;;;;3459:53;;3558:1;3530:30;;:16;:30;;;;:59;;;;;3584:5;3564:25;;:16;:25;;;3530:59;3522:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3630:31;3639:5;3646:7;3655:5;3630:8;:31::i;:::-;2942:726;;;;;;;;;:::o;439:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9642:156:0:-;1211:1;1199:8;;:13;1191:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1253:1;1242:8;:12;;;;9682:109;9697:6;;;;;;;;;;;9690:24;;;9723:4;9690:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9690:39:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9690:39:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9690:39:0;;;;;;;;;;;;;;;;9738:6;;;;;;;;;;;9731:24;;;9764:4;9731:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9731:39:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9731:39:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9731:39:0;;;;;;;;;;;;;;;;9772:8;;;;;;;;;;;9782;;;;;;;;;;;9682:7;:109::i;:::-;1286:1;1275:8;:12;;;;9642:156::o;1533:282::-;1614:12;1628:17;1649:5;:10;;539:34;;;;;;;;;;;;;;;;;529:45;;;;;;1693:2;1697:5;1660:43;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1660:43:0;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;1660:43:0;1649:55;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1649:55:0;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;1613:91:0;;;;1722:7;:57;;;;;1749:1;1734:4;:11;:16;:44;;;;1765:4;1754:24;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1754:24:0;;;;;;;;;;;;;;;;1734:44;1722:57;1714:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1533:282;;;;;:::o;481:149:8:-;539:9;573:1;568;:6;:30;;;;597:1;592;587;583;:5;579:9;;;578:15;;;;;;:20;568:30;560:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;481:149;;;;:::o;339:136::-;397:9;441:1;435;431;:5;427:9;;;426:16;;418:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;339:136;;;;:::o;2616:845:0:-;2747:2;2727:23;;:8;:23;;:50;;;;;2774:2;2754:23;;:8;:23;;2727:50;2719:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2809:21;2858:5;2840:15;:23;;;;;;2809:55;;2874:18;2912;;;;;;;;;;;2895:14;:35;2874:56;;2981:1;2967:11;:15;;;:33;;;;;2999:1;2986:9;:14;;;;2967:33;:51;;;;;3017:1;3004:9;:14;;;;2967:51;2963:332;;;3171:11;3118:64;;3123:44;3157:9;3123:27;3140:9;3123:16;:27::i;:::-;:33;;;;:44;;;;:::i;:::-;3118:50;;:64;3094:20;;:88;;;;;;;;;;;3273:11;3220:64;;3225:44;3259:9;3225:27;3242:9;3225:16;:27::i;:::-;:33;;;;:44;;;;:::i;:::-;3220:50;;:64;3196:20;;:88;;;;;;;;;;;2963:332;3323:8;3304;;:28;;;;;;;;;;;;;;;;;;3361:8;3342;;:28;;;;;;;;;;;;;;;;;;3401:14;3380:18;;:35;;;;;;;;;;;;;;;;;;3430:24;3435:8;;;;;;;;;;;3445;;;;;;;;;;;3430:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2616:845;;;;;;:::o;1847:199:1:-;1988:5;1960:9;:16;1970:5;1960:16;;;;;;;;;;;;;;;:25;1977:7;1960:25;;;;;;;;;;;;;;;:33;;;;2024:7;2008:31;;2017:5;2008:31;;;2033:5;2008:31;;;;;;;;;;;;;;;;;;1847:199;;;:::o;2052:249::-;2178:26;2198:5;2178:9;:15;2188:4;2178:15;;;;;;;;;;;;;;;;:19;;:26;;;;:::i;:::-;2160:9;:15;2170:4;2160:15;;;;;;;;;;;;;;;:44;;;;2230:24;2248:5;2230:9;:13;2240:2;2230:13;;;;;;;;;;;;;;;;:17;;:24;;;;:::i;:::-;2214:9;:13;2224:2;2214:13;;;;;;;;;;;;;;;:40;;;;2284:2;2269:25;;2278:4;2269:25;;;2288:5;2269:25;;;;;;;;;;;;;;;;;;2052:249;;;:::o;3547:832:0:-;3620:10;3642:13;3674:7;;;;;;;;;;;3658:30;;;:32;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3658:32:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3658:32:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3658:32:0;;;;;;;;;;;;;;;;3642:48;;3725:1;3708:19;;:5;:19;;;;3700:27;;3737:11;3751:5;;3737:19;;3785:5;3781:592;;;3820:1;3810:6;:11;3806:500;;3841:10;3854:41;3864:30;3884:9;3864:30;;3869:9;3864:15;;:19;;:30;;;;:::i;:::-;3854:9;:41::i;:::-;3841:54;;3913:14;3930:17;3940:6;3930:9;:17::i;:::-;3913:34;;3977:9;3969:5;:17;3965:327;;;4010:14;4027:44;4069:1;4027:37;4043:20;4053:9;4043:5;:9;;:20;;;;:::i;:::-;4027:11;;:15;;:37;;;;:::i;:::-;:41;;:44;;;;:::i;:::-;4010:61;;4093:16;4112:35;4130:16;4144:1;4130:9;:13;;:16;;;;:::i;:::-;4112:13;4122:2;4112:5;:9;;:13;;;;:::i;:::-;:17;;:35;;;;:::i;:::-;4093:54;;4169:14;4198:11;4186:9;:23;;;;;;4169:40;;4247:1;4235:9;:13;4231:42;;;4250:23;4256:5;4263:9;4250:5;:23::i;:::-;4231:42;3965:327;;;;3806:500;;;3781:592;;;4336:1;4326:6;:11;4322:51;;4361:1;4353:5;:9;;;;4322:51;3781:592;3547:832;;;;;;:::o;352:301:7:-;400:9;429:1;425;:5;421:226;;;450:1;446:5;;465:9;485:1;481;477;:5;;;;;;:9;465:21;;500:89;511:1;507;:5;500:89;;;536:1;532:5;;573:1;568;564;560;:5;;;;;;:9;559:15;;;;;;555:19;;500:89;;;421:226;;;;614:1;609;:6;605:42;;635:1;631:5;;605:42;421:226;352:301;;;:::o;1427:200:1:-;1502:22;1518:5;1502:11;;:15;;:22;;;;:::i;:::-;1488:11;:36;;;;1550:24;1568:5;1550:9;:13;1560:2;1550:13;;;;;;;;;;;;;;;;:17;;:24;;;;:::i;:::-;1534:9;:13;1544:2;1534:13;;;;;;;;;;;;;;;:40;;;;1610:2;1589:31;;1606:1;1589:31;;;1614:5;1589:31;;;;;;;;;;;;;;;;;;1427:200;;:::o;134:103:7:-;192:9;221:1;217;:5;:13;;229:1;217:13;;;225:1;217:13;213:17;;134:103;;;;:::o;1633:208:1:-;1714:26;1734:5;1714:9;:15;1724:4;1714:15;;;;;;;;;;;;;;;;:19;;:26;;;;:::i;:::-;1696:9;:15;1706:4;1696:15;;;;;;;;;;;;;;;:44;;;;1764:22;1780:5;1764:11;;:15;;:22;;;;:::i;:::-;1750:11;:36;;;;1824:1;1801:33;;1810:4;1801:33;;;1828:5;1801:33;;;;;;;;;;;;;;;;;;1633:208;;:::o;319:118:9:-;369:9;267:6;402:1;394:10;;:17;390:21;;319:118;;;:::o;505:106::-;565:9;602:1;594:10;;590:14;;:1;:14;;;;;;;;586:18;;505:106;;;;:::o;198:135:8:-;256:9;300:1;294;290;:5;286:9;;;285:16;;277:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;198:135;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2996200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "1050",
								"MINIMUM_LIQUIDITY()": "250",
								"PERMIT_TYPEHASH()": "279",
								"allowance(address,address)": "1355",
								"approve(address,uint256)": "22498",
								"balanceOf(address)": "1237",
								"burn(address)": "infinite",
								"decimals()": "307",
								"factory()": "1142",
								"getReserves()": "2993",
								"initialize(address,address)": "42940",
								"kLast()": "1095",
								"mint(address)": "infinite",
								"name()": "infinite",
								"nonces(address)": "1214",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"price0CumulativeLast()": "1094",
								"price1CumulativeLast()": "1116",
								"skim(address)": "infinite",
								"swap(uint256,uint256,address,bytes)": "infinite",
								"symbol()": "infinite",
								"sync()": "infinite",
								"token0()": "1165",
								"token1()": "1097",
								"totalSupply()": "1139",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_mintFee(uint112,uint112)": "infinite",
								"_safeTransfer(address,address,uint256)": "infinite",
								"_update(uint256,uint256,uint112,uint112)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 318,
									"end": 9800,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 318,
									"end": 9800,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 318,
									"end": 9800,
									"name": "MSTORE"
								},
								{
									"begin": 1158,
									"end": 1159,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1134,
									"end": 1159,
									"name": "PUSH",
									"value": "C"
								},
								{
									"begin": 1134,
									"end": 1159,
									"name": "SSTORE"
								},
								{
									"begin": 2210,
									"end": 2268,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 2210,
									"end": 2268,
									"name": "POP"
								},
								{
									"begin": 1005,
									"end": 1020,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1064,
									"end": 1071,
									"name": "CHAINID"
								},
								{
									"begin": 1053,
									"end": 1071,
									"name": "SWAP1"
								},
								{
									"begin": 1053,
									"end": 1071,
									"name": "POP"
								},
								{
									"begin": 1160,
									"end": 1255,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1160,
									"end": 1255,
									"name": "MLOAD"
								},
								{
									"begin": 1160,
									"end": 1255,
									"name": "DUP1"
								},
								{
									"begin": 1160,
									"end": 1255,
									"name": "DUP1"
								},
								{
									"begin": 1160,
									"end": 1255,
									"name": "PUSH data",
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 1160,
									"end": 1255,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1160,
									"end": 1255,
									"name": "SWAP2"
								},
								{
									"begin": 1160,
									"end": 1255,
									"name": "CODECOPY"
								},
								{
									"begin": 1160,
									"end": 1255,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1160,
									"end": 1255,
									"name": "ADD"
								},
								{
									"begin": 1160,
									"end": 1255,
									"name": "SWAP1"
								},
								{
									"begin": 1160,
									"end": 1255,
									"name": "POP"
								},
								{
									"begin": 1160,
									"end": 1255,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1160,
									"end": 1255,
									"name": "MLOAD"
								},
								{
									"begin": 1160,
									"end": 1255,
									"name": "DUP1"
								},
								{
									"begin": 1160,
									"end": 1255,
									"name": "SWAP2"
								},
								{
									"begin": 1160,
									"end": 1255,
									"name": "SUB"
								},
								{
									"begin": 1160,
									"end": 1255,
									"name": "SWAP1"
								},
								{
									"begin": 1160,
									"end": 1255,
									"name": "KECCAK256"
								},
								{
									"begin": 1289,
									"end": 1293,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1289,
									"end": 1293,
									"name": "MLOAD"
								},
								{
									"begin": 1289,
									"end": 1293,
									"name": "DUP1"
								},
								{
									"begin": 1289,
									"end": 1293,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1289,
									"end": 1293,
									"name": "ADD"
								},
								{
									"begin": 1289,
									"end": 1293,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1289,
									"end": 1293,
									"name": "MSTORE"
								},
								{
									"begin": 1289,
									"end": 1293,
									"name": "DUP1"
								},
								{
									"begin": 1289,
									"end": 1293,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 1289,
									"end": 1293,
									"name": "DUP2"
								},
								{
									"begin": 1289,
									"end": 1293,
									"name": "MSTORE"
								},
								{
									"begin": 1289,
									"end": 1293,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1289,
									"end": 1293,
									"name": "ADD"
								},
								{
									"begin": 1289,
									"end": 1293,
									"name": "PUSH",
									"value": "44657853776170204C5073000000000000000000000000000000000000000000"
								},
								{
									"begin": 1289,
									"end": 1293,
									"name": "DUP2"
								},
								{
									"begin": 1289,
									"end": 1293,
									"name": "MSTORE"
								},
								{
									"begin": 1289,
									"end": 1293,
									"name": "POP"
								},
								{
									"begin": 1273,
									"end": 1295,
									"name": "DUP1"
								},
								{
									"begin": 1273,
									"end": 1295,
									"name": "MLOAD"
								},
								{
									"begin": 1273,
									"end": 1295,
									"name": "SWAP1"
								},
								{
									"begin": 1273,
									"end": 1295,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1273,
									"end": 1295,
									"name": "ADD"
								},
								{
									"begin": 1273,
									"end": 1295,
									"name": "KECCAK256"
								},
								{
									"begin": 1323,
									"end": 1333,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1323,
									"end": 1333,
									"name": "MLOAD"
								},
								{
									"begin": 1323,
									"end": 1333,
									"name": "DUP1"
								},
								{
									"begin": 1323,
									"end": 1333,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1323,
									"end": 1333,
									"name": "ADD"
								},
								{
									"begin": 1323,
									"end": 1333,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1323,
									"end": 1333,
									"name": "MSTORE"
								},
								{
									"begin": 1323,
									"end": 1333,
									"name": "DUP1"
								},
								{
									"begin": 1323,
									"end": 1333,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1323,
									"end": 1333,
									"name": "DUP2"
								},
								{
									"begin": 1323,
									"end": 1333,
									"name": "MSTORE"
								},
								{
									"begin": 1323,
									"end": 1333,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1323,
									"end": 1333,
									"name": "ADD"
								},
								{
									"begin": 1323,
									"end": 1333,
									"name": "PUSH",
									"value": "3100000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1323,
									"end": 1333,
									"name": "DUP2"
								},
								{
									"begin": 1323,
									"end": 1333,
									"name": "MSTORE"
								},
								{
									"begin": 1323,
									"end": 1333,
									"name": "POP"
								},
								{
									"begin": 1313,
									"end": 1334,
									"name": "DUP1"
								},
								{
									"begin": 1313,
									"end": 1334,
									"name": "MLOAD"
								},
								{
									"begin": 1313,
									"end": 1334,
									"name": "SWAP1"
								},
								{
									"begin": 1313,
									"end": 1334,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1313,
									"end": 1334,
									"name": "ADD"
								},
								{
									"begin": 1313,
									"end": 1334,
									"name": "KECCAK256"
								},
								{
									"begin": 1352,
									"end": 1359,
									"name": "DUP4"
								},
								{
									"begin": 1385,
									"end": 1389,
									"name": "ADDRESS"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "MLOAD"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "ADD"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "DUP1"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "DUP7"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "DUP2"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "MSTORE"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "ADD"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "DUP6"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "DUP2"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "MSTORE"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "ADD"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "DUP5"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "DUP2"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "MSTORE"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "ADD"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "DUP4"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "DUP2"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "MSTORE"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "ADD"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "DUP3"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "AND"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "AND"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "DUP2"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "MSTORE"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "ADD"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "SWAP6"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "POP"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "POP"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "POP"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "POP"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "POP"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "POP"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "MLOAD"
								},
								{
									"begin": 49,
									"end": 53,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 39,
									"end": 46,
									"name": "DUP2"
								},
								{
									"begin": 30,
									"end": 37,
									"name": "DUP4"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "SUB"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "SUB"
								},
								{
									"begin": 13,
									"end": 20,
									"name": "DUP2"
								},
								{
									"begin": 6,
									"end": 55,
									"name": "MSTORE"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "SWAP1"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "MSTORE"
								},
								{
									"begin": 1109,
									"end": 1414,
									"name": "DUP1"
								},
								{
									"begin": 1109,
									"end": 1414,
									"name": "MLOAD"
								},
								{
									"begin": 1109,
									"end": 1414,
									"name": "SWAP1"
								},
								{
									"begin": 1109,
									"end": 1414,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1109,
									"end": 1414,
									"name": "ADD"
								},
								{
									"begin": 1109,
									"end": 1414,
									"name": "KECCAK256"
								},
								{
									"begin": 1090,
									"end": 1106,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 1090,
									"end": 1414,
									"name": "DUP2"
								},
								{
									"begin": 1090,
									"end": 1414,
									"name": "SWAP1"
								},
								{
									"begin": 1090,
									"end": 1414,
									"name": "SSTORE"
								},
								{
									"begin": 1090,
									"end": 1414,
									"name": "POP"
								},
								{
									"begin": 974,
									"end": 1421,
									"name": "POP"
								},
								{
									"begin": 2251,
									"end": 2261,
									"name": "CALLER"
								},
								{
									"begin": 2241,
									"end": 2248,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 2241,
									"end": 2248,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2241,
									"end": 2261,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 2241,
									"end": 2261,
									"name": "EXP"
								},
								{
									"begin": 2241,
									"end": 2261,
									"name": "DUP2"
								},
								{
									"begin": 2241,
									"end": 2261,
									"name": "SLOAD"
								},
								{
									"begin": 2241,
									"end": 2261,
									"name": "DUP2"
								},
								{
									"begin": 2241,
									"end": 2261,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2241,
									"end": 2261,
									"name": "MUL"
								},
								{
									"begin": 2241,
									"end": 2261,
									"name": "NOT"
								},
								{
									"begin": 2241,
									"end": 2261,
									"name": "AND"
								},
								{
									"begin": 2241,
									"end": 2261,
									"name": "SWAP1"
								},
								{
									"begin": 2241,
									"end": 2261,
									"name": "DUP4"
								},
								{
									"begin": 2241,
									"end": 2261,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2241,
									"end": 2261,
									"name": "AND"
								},
								{
									"begin": 2241,
									"end": 2261,
									"name": "MUL"
								},
								{
									"begin": 2241,
									"end": 2261,
									"name": "OR"
								},
								{
									"begin": 2241,
									"end": 2261,
									"name": "SWAP1"
								},
								{
									"begin": 2241,
									"end": 2261,
									"name": "SSTORE"
								},
								{
									"begin": 2241,
									"end": 2261,
									"name": "POP"
								},
								{
									"begin": 318,
									"end": 9800,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 318,
									"end": 9800,
									"name": "DUP1"
								},
								{
									"begin": 318,
									"end": 9800,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 318,
									"end": 9800,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 318,
									"end": 9800,
									"name": "CODECOPY"
								},
								{
									"begin": 318,
									"end": 9800,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 318,
									"end": 9800,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820f49b1d2b37cdceb423b5c1a9723e1a6df0be9a03694e4de8e985d85dde0554eb64736f6c63430005100032",
									".code": [
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "MSTORE"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "POP"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "LT"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "SHR"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH",
											"value": "6A627842"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "GT"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH",
											"value": "BA9A7A56"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "GT"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH",
											"value": "D21220A7"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "GT"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH",
											"value": "D21220A7"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH",
											"value": "D505ACCF"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH",
											"value": "FFF6CAE9"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "JUMP"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "JUMPDEST"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH",
											"value": "BA9A7A56"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH",
											"value": "BC25CF77"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH",
											"value": "C45A0155"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "JUMP"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "JUMPDEST"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH",
											"value": "7ECEBE00"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "GT"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH",
											"value": "7ECEBE00"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH",
											"value": "89AFCB44"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "JUMP"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "JUMPDEST"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH",
											"value": "6A627842"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH",
											"value": "7464FC3D"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "JUMP"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "JUMPDEST"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "GT"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH",
											"value": "3644E515"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "GT"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH",
											"value": "3644E515"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH",
											"value": "485CC955"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH",
											"value": "5909C0D5"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH",
											"value": "5A3D5493"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "JUMP"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "JUMPDEST"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH",
											"value": "30ADF81F"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "JUMP"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "JUMPDEST"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH",
											"value": "22C0D9F"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH",
											"value": "902F1AC"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH",
											"value": "DFE1681"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "JUMPDEST"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 9800,
											"name": "REVERT"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "JUMPDEST"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "DUP1"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "DUP2"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "ADD"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "SWAP1"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "DUP1"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "DUP1"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "SWAP1"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "ADD"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "SWAP1"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "SWAP3"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "SWAP2"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "SWAP1"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "DUP1"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "SWAP1"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "ADD"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "SWAP1"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "SWAP3"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "SWAP2"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "SWAP1"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "DUP1"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "AND"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "SWAP1"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "ADD"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "SWAP1"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "SWAP3"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "SWAP2"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "SWAP1"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "DUP1"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "SWAP1"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "ADD"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "DUP3"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "DUP1"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "SWAP1"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "ADD"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "SWAP2"
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1"
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "SWAP1"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "SWAP2"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "SWAP3"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "SWAP4"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "SWAP2"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "SWAP3"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "SWAP4"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "SWAP1"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "POP"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "POP"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "POP"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "JUMPDEST"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "STOP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "JUMPDEST"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "JUMPDEST"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "MLOAD"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "ADD"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP3"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SUB"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP3"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "MSTORE"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP4"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "MLOAD"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "MSTORE"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "ADD"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SWAP2"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "MLOAD"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SWAP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "ADD"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SWAP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP4"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SWAP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SWAP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "ADD"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SWAP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "AND"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "ISZERO"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "JUMPI"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP3"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SUB"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "MLOAD"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP4"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SUB"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "EXP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SUB"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "NOT"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "AND"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "MSTORE"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "ADD"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SWAP2"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "JUMPDEST"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SWAP3"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "MLOAD"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SWAP2"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SUB"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SWAP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "RETURN"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "JUMPDEST"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "JUMPDEST"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "MLOAD"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "DUP1"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "DUP5"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "AND"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "AND"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "DUP2"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "MSTORE"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "ADD"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "DUP4"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "AND"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "AND"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "DUP2"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "MSTORE"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "ADD"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "DUP3"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "AND"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "AND"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "DUP2"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "MSTORE"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "ADD"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "SWAP4"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "POP"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "POP"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "POP"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "POP"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "MLOAD"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "DUP1"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "SWAP2"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "SUB"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "SWAP1"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "RETURN"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "JUMPDEST"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "DUP1"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "DUP2"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "ADD"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "SWAP1"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "DUP1"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "DUP1"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "AND"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "SWAP1"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "ADD"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "SWAP1"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "SWAP3"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "SWAP2"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "SWAP1"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "DUP1"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "SWAP1"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "ADD"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "SWAP1"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "SWAP3"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "SWAP2"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "SWAP1"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "POP"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "POP"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "POP"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "JUMPDEST"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "MLOAD"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "DUP1"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "DUP3"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "ISZERO"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "ISZERO"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "ISZERO"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "ISZERO"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "DUP2"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "MSTORE"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "ADD"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "SWAP2"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "POP"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "POP"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "MLOAD"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "DUP1"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "SWAP2"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "SUB"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "SWAP1"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "RETURN"
										},
										{
											"begin": 610,
											"end": 631,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 610,
											"end": 631,
											"name": "JUMPDEST"
										},
										{
											"begin": 610,
											"end": 631,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 610,
											"end": 631,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 610,
											"end": 631,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 610,
											"end": 631,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 610,
											"end": 631,
											"name": "JUMPDEST"
										},
										{
											"begin": 610,
											"end": 631,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 610,
											"end": 631,
											"name": "MLOAD"
										},
										{
											"begin": 610,
											"end": 631,
											"name": "DUP1"
										},
										{
											"begin": 610,
											"end": 631,
											"name": "DUP3"
										},
										{
											"begin": 610,
											"end": 631,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 610,
											"end": 631,
											"name": "AND"
										},
										{
											"begin": 610,
											"end": 631,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 610,
											"end": 631,
											"name": "AND"
										},
										{
											"begin": 610,
											"end": 631,
											"name": "DUP2"
										},
										{
											"begin": 610,
											"end": 631,
											"name": "MSTORE"
										},
										{
											"begin": 610,
											"end": 631,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 610,
											"end": 631,
											"name": "ADD"
										},
										{
											"begin": 610,
											"end": 631,
											"name": "SWAP2"
										},
										{
											"begin": 610,
											"end": 631,
											"name": "POP"
										},
										{
											"begin": 610,
											"end": 631,
											"name": "POP"
										},
										{
											"begin": 610,
											"end": 631,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 610,
											"end": 631,
											"name": "MLOAD"
										},
										{
											"begin": 610,
											"end": 631,
											"name": "DUP1"
										},
										{
											"begin": 610,
											"end": 631,
											"name": "SWAP2"
										},
										{
											"begin": 610,
											"end": 631,
											"name": "SUB"
										},
										{
											"begin": 610,
											"end": 631,
											"name": "SWAP1"
										},
										{
											"begin": 610,
											"end": 631,
											"name": "RETURN"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "JUMPDEST"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "JUMPDEST"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "MLOAD"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "DUP1"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "DUP3"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "DUP2"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "MSTORE"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "ADD"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "SWAP2"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "POP"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "POP"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "MLOAD"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "DUP1"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "SWAP2"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "SUB"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "SWAP1"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "RETURN"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "JUMPDEST"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "DUP1"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "DUP2"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "ADD"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "SWAP1"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "DUP1"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "DUP1"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "AND"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "SWAP1"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "ADD"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "SWAP1"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "SWAP3"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "SWAP2"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "SWAP1"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "DUP1"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "AND"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "SWAP1"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "ADD"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "SWAP1"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "SWAP3"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "SWAP2"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "SWAP1"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "DUP1"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "SWAP1"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "ADD"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "SWAP1"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "SWAP3"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "SWAP2"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "SWAP1"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "POP"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "POP"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "POP"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "JUMPDEST"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "MLOAD"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "DUP1"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "DUP3"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "ISZERO"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "ISZERO"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "ISZERO"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "ISZERO"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "DUP2"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "MSTORE"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "ADD"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "SWAP2"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "POP"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "POP"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "MLOAD"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "DUP1"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "SWAP2"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "SUB"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "SWAP1"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "RETURN"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "JUMPDEST"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "JUMPDEST"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "MLOAD"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "DUP1"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "DUP3"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "DUP2"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "MSTORE"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "ADD"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "SWAP2"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "POP"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "POP"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "MLOAD"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "DUP1"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "SWAP2"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "SUB"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "SWAP1"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "RETURN"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "JUMPDEST"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "JUMPDEST"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "MLOAD"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "DUP1"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "DUP3"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "AND"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "AND"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "DUP2"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "MSTORE"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "ADD"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "SWAP2"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "POP"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "POP"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "MLOAD"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "DUP1"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "SWAP2"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "SUB"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "SWAP1"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "RETURN"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "JUMPDEST"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "JUMPDEST"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "MLOAD"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "DUP1"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "DUP3"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "DUP2"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "MSTORE"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "ADD"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "SWAP2"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "POP"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "POP"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "MLOAD"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "DUP1"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "SWAP2"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "SUB"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "SWAP1"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "RETURN"
										},
										{
											"begin": 2330,
											"end": 2534,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 2330,
											"end": 2534,
											"name": "JUMPDEST"
										},
										{
											"begin": 2330,
											"end": 2534,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2330,
											"end": 2534,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2330,
											"end": 2534,
											"name": "DUP1"
										},
										{
											"begin": 2330,
											"end": 2534,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2330,
											"end": 2534,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2330,
											"end": 2534,
											"name": "DUP2"
										},
										{
											"begin": 2330,
											"end": 2534,
											"name": "ADD"
										},
										{
											"begin": 2330,
											"end": 2534,
											"name": "SWAP1"
										},
										{
											"begin": 2330,
											"end": 2534,
											"name": "DUP1"
										},
										{
											"begin": 2330,
											"end": 2534,
											"name": "DUP1"
										},
										{
											"begin": 2330,
											"end": 2534,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2330,
											"end": 2534,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2330,
											"end": 2534,
											"name": "AND"
										},
										{
											"begin": 2330,
											"end": 2534,
											"name": "SWAP1"
										},
										{
											"begin": 2330,
											"end": 2534,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2330,
											"end": 2534,
											"name": "ADD"
										},
										{
											"begin": 2330,
											"end": 2534,
											"name": "SWAP1"
										},
										{
											"begin": 2330,
											"end": 2534,
											"name": "SWAP3"
										},
										{
											"begin": 2330,
											"end": 2534,
											"name": "SWAP2"
										},
										{
											"begin": 2330,
											"end": 2534,
											"name": "SWAP1"
										},
										{
											"begin": 2330,
											"end": 2534,
											"name": "DUP1"
										},
										{
											"begin": 2330,
											"end": 2534,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2330,
											"end": 2534,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2330,
											"end": 2534,
											"name": "AND"
										},
										{
											"begin": 2330,
											"end": 2534,
											"name": "SWAP1"
										},
										{
											"begin": 2330,
											"end": 2534,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2330,
											"end": 2534,
											"name": "ADD"
										},
										{
											"begin": 2330,
											"end": 2534,
											"name": "SWAP1"
										},
										{
											"begin": 2330,
											"end": 2534,
											"name": "SWAP3"
										},
										{
											"begin": 2330,
											"end": 2534,
											"name": "SWAP2"
										},
										{
											"begin": 2330,
											"end": 2534,
											"name": "SWAP1"
										},
										{
											"begin": 2330,
											"end": 2534,
											"name": "POP"
										},
										{
											"begin": 2330,
											"end": 2534,
											"name": "POP"
										},
										{
											"begin": 2330,
											"end": 2534,
											"name": "POP"
										},
										{
											"begin": 2330,
											"end": 2534,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 2330,
											"end": 2534,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2330,
											"end": 2534,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2330,
											"end": 2534,
											"name": "JUMPDEST"
										},
										{
											"begin": 2330,
											"end": 2534,
											"name": "STOP"
										},
										{
											"begin": 954,
											"end": 986,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 954,
											"end": 986,
											"name": "JUMPDEST"
										},
										{
											"begin": 954,
											"end": 986,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 954,
											"end": 986,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 954,
											"end": 986,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 954,
											"end": 986,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 954,
											"end": 986,
											"name": "JUMPDEST"
										},
										{
											"begin": 954,
											"end": 986,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 954,
											"end": 986,
											"name": "MLOAD"
										},
										{
											"begin": 954,
											"end": 986,
											"name": "DUP1"
										},
										{
											"begin": 954,
											"end": 986,
											"name": "DUP3"
										},
										{
											"begin": 954,
											"end": 986,
											"name": "DUP2"
										},
										{
											"begin": 954,
											"end": 986,
											"name": "MSTORE"
										},
										{
											"begin": 954,
											"end": 986,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 954,
											"end": 986,
											"name": "ADD"
										},
										{
											"begin": 954,
											"end": 986,
											"name": "SWAP2"
										},
										{
											"begin": 954,
											"end": 986,
											"name": "POP"
										},
										{
											"begin": 954,
											"end": 986,
											"name": "POP"
										},
										{
											"begin": 954,
											"end": 986,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 954,
											"end": 986,
											"name": "MLOAD"
										},
										{
											"begin": 954,
											"end": 986,
											"name": "DUP1"
										},
										{
											"begin": 954,
											"end": 986,
											"name": "SWAP2"
										},
										{
											"begin": 954,
											"end": 986,
											"name": "SUB"
										},
										{
											"begin": 954,
											"end": 986,
											"name": "SWAP1"
										},
										{
											"begin": 954,
											"end": 986,
											"name": "RETURN"
										},
										{
											"begin": 992,
											"end": 1024,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 992,
											"end": 1024,
											"name": "JUMPDEST"
										},
										{
											"begin": 992,
											"end": 1024,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 992,
											"end": 1024,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 992,
											"end": 1024,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 992,
											"end": 1024,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 992,
											"end": 1024,
											"name": "JUMPDEST"
										},
										{
											"begin": 992,
											"end": 1024,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 992,
											"end": 1024,
											"name": "MLOAD"
										},
										{
											"begin": 992,
											"end": 1024,
											"name": "DUP1"
										},
										{
											"begin": 992,
											"end": 1024,
											"name": "DUP3"
										},
										{
											"begin": 992,
											"end": 1024,
											"name": "DUP2"
										},
										{
											"begin": 992,
											"end": 1024,
											"name": "MSTORE"
										},
										{
											"begin": 992,
											"end": 1024,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 992,
											"end": 1024,
											"name": "ADD"
										},
										{
											"begin": 992,
											"end": 1024,
											"name": "SWAP2"
										},
										{
											"begin": 992,
											"end": 1024,
											"name": "POP"
										},
										{
											"begin": 992,
											"end": 1024,
											"name": "POP"
										},
										{
											"begin": 992,
											"end": 1024,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 992,
											"end": 1024,
											"name": "MLOAD"
										},
										{
											"begin": 992,
											"end": 1024,
											"name": "DUP1"
										},
										{
											"begin": 992,
											"end": 1024,
											"name": "SWAP2"
										},
										{
											"begin": 992,
											"end": 1024,
											"name": "SUB"
										},
										{
											"begin": 992,
											"end": 1024,
											"name": "SWAP1"
										},
										{
											"begin": 992,
											"end": 1024,
											"name": "RETURN"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "JUMPDEST"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "DUP1"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "DUP2"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "ADD"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "SWAP1"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "DUP1"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "DUP1"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "AND"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "SWAP1"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "ADD"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "SWAP1"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "SWAP3"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "SWAP2"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "SWAP1"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "POP"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "POP"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "POP"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "JUMPDEST"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "MLOAD"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "DUP1"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "DUP3"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "DUP2"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "MSTORE"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "ADD"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "SWAP2"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "POP"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "POP"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "MLOAD"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "DUP1"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "SWAP2"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "SUB"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "SWAP1"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "RETURN"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "JUMPDEST"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "DUP1"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "DUP2"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "ADD"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "SWAP1"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "DUP1"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "DUP1"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "SWAP1"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "ADD"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "SWAP1"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "SWAP3"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "SWAP2"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "SWAP1"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "POP"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "POP"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "POP"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "JUMPDEST"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "MLOAD"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "DUP1"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "DUP3"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "DUP2"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "MSTORE"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "ADD"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "SWAP2"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "POP"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "POP"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "MLOAD"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "DUP1"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "SWAP2"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "SUB"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "SWAP1"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "RETURN"
										},
										{
											"begin": 1030,
											"end": 1047,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 1030,
											"end": 1047,
											"name": "JUMPDEST"
										},
										{
											"begin": 1030,
											"end": 1047,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 1030,
											"end": 1047,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 1030,
											"end": 1047,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1030,
											"end": 1047,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 1030,
											"end": 1047,
											"name": "JUMPDEST"
										},
										{
											"begin": 1030,
											"end": 1047,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1030,
											"end": 1047,
											"name": "MLOAD"
										},
										{
											"begin": 1030,
											"end": 1047,
											"name": "DUP1"
										},
										{
											"begin": 1030,
											"end": 1047,
											"name": "DUP3"
										},
										{
											"begin": 1030,
											"end": 1047,
											"name": "DUP2"
										},
										{
											"begin": 1030,
											"end": 1047,
											"name": "MSTORE"
										},
										{
											"begin": 1030,
											"end": 1047,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1030,
											"end": 1047,
											"name": "ADD"
										},
										{
											"begin": 1030,
											"end": 1047,
											"name": "SWAP2"
										},
										{
											"begin": 1030,
											"end": 1047,
											"name": "POP"
										},
										{
											"begin": 1030,
											"end": 1047,
											"name": "POP"
										},
										{
											"begin": 1030,
											"end": 1047,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1030,
											"end": 1047,
											"name": "MLOAD"
										},
										{
											"begin": 1030,
											"end": 1047,
											"name": "DUP1"
										},
										{
											"begin": 1030,
											"end": 1047,
											"name": "SWAP2"
										},
										{
											"begin": 1030,
											"end": 1047,
											"name": "SUB"
										},
										{
											"begin": 1030,
											"end": 1047,
											"name": "SWAP1"
										},
										{
											"begin": 1030,
											"end": 1047,
											"name": "RETURN"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "JUMPDEST"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "DUP1"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "DUP2"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "ADD"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "SWAP1"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "DUP1"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "DUP1"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "AND"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "SWAP1"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "ADD"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "SWAP1"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "SWAP3"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "SWAP2"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "SWAP1"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "POP"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "POP"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "POP"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "JUMPDEST"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "MLOAD"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "DUP1"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "DUP3"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "DUP2"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "MSTORE"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "ADD"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "SWAP2"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "POP"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "POP"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "MLOAD"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "DUP1"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "SWAP2"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "SUB"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "SWAP1"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "RETURN"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "JUMPDEST"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "DUP1"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "DUP2"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "ADD"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "SWAP1"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "DUP1"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "DUP1"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "AND"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "SWAP1"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "ADD"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "SWAP1"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "SWAP3"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "SWAP2"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "SWAP1"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "POP"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "POP"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "POP"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "JUMPDEST"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "MLOAD"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "DUP1"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "DUP4"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "DUP2"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "MSTORE"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "ADD"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "DUP3"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "DUP2"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "MSTORE"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "ADD"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "SWAP3"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "POP"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "POP"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "POP"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "MLOAD"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "DUP1"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "SWAP2"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "SUB"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "SWAP1"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "RETURN"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "JUMPDEST"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "JUMPDEST"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "MLOAD"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "ADD"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP3"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP2"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "SUB"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP3"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "MSTORE"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP4"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP2"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP2"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "MLOAD"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP2"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "MSTORE"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "ADD"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "SWAP2"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "POP"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "MLOAD"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "ADD"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP4"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "POP"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "POP"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "POP"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "POP"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP2"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "ADD"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "AND"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "ISZERO"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "JUMPI"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP3"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "SUB"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "MLOAD"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP4"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "SUB"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "EXP"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "SUB"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "NOT"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "AND"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP2"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "MSTORE"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "ADD"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "SWAP2"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "POP"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "JUMPDEST"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "POP"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "SWAP3"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "POP"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "POP"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "POP"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "MLOAD"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "SWAP2"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "SUB"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "RETURN"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "JUMPDEST"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "DUP1"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "DUP2"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "ADD"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "SWAP1"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "DUP1"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "DUP1"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "AND"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "SWAP1"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "ADD"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "SWAP1"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "SWAP3"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "SWAP2"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "SWAP1"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "DUP1"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "SWAP1"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "ADD"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "SWAP1"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "SWAP3"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "SWAP2"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "SWAP1"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "POP"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "POP"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "POP"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "JUMPDEST"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "MLOAD"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "DUP1"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "DUP3"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "ISZERO"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "ISZERO"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "ISZERO"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "ISZERO"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "DUP2"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "MSTORE"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "ADD"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "SWAP2"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "POP"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "POP"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "MLOAD"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "DUP1"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "SWAP2"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "SUB"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "SWAP1"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "RETURN"
										},
										{
											"begin": 435,
											"end": 481,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 435,
											"end": 481,
											"name": "JUMPDEST"
										},
										{
											"begin": 435,
											"end": 481,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 435,
											"end": 481,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 435,
											"end": 481,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 435,
											"end": 481,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 435,
											"end": 481,
											"name": "JUMPDEST"
										},
										{
											"begin": 435,
											"end": 481,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 435,
											"end": 481,
											"name": "MLOAD"
										},
										{
											"begin": 435,
											"end": 481,
											"name": "DUP1"
										},
										{
											"begin": 435,
											"end": 481,
											"name": "DUP3"
										},
										{
											"begin": 435,
											"end": 481,
											"name": "DUP2"
										},
										{
											"begin": 435,
											"end": 481,
											"name": "MSTORE"
										},
										{
											"begin": 435,
											"end": 481,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 435,
											"end": 481,
											"name": "ADD"
										},
										{
											"begin": 435,
											"end": 481,
											"name": "SWAP2"
										},
										{
											"begin": 435,
											"end": 481,
											"name": "POP"
										},
										{
											"begin": 435,
											"end": 481,
											"name": "POP"
										},
										{
											"begin": 435,
											"end": 481,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 435,
											"end": 481,
											"name": "MLOAD"
										},
										{
											"begin": 435,
											"end": 481,
											"name": "DUP1"
										},
										{
											"begin": 435,
											"end": 481,
											"name": "SWAP2"
										},
										{
											"begin": 435,
											"end": 481,
											"name": "SUB"
										},
										{
											"begin": 435,
											"end": 481,
											"name": "SWAP1"
										},
										{
											"begin": 435,
											"end": 481,
											"name": "RETURN"
										},
										{
											"begin": 9267,
											"end": 9596,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 9267,
											"end": 9596,
											"name": "JUMPDEST"
										},
										{
											"begin": 9267,
											"end": 9596,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 9267,
											"end": 9596,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9267,
											"end": 9596,
											"name": "DUP1"
										},
										{
											"begin": 9267,
											"end": 9596,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 9267,
											"end": 9596,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 9267,
											"end": 9596,
											"name": "DUP2"
										},
										{
											"begin": 9267,
											"end": 9596,
											"name": "ADD"
										},
										{
											"begin": 9267,
											"end": 9596,
											"name": "SWAP1"
										},
										{
											"begin": 9267,
											"end": 9596,
											"name": "DUP1"
										},
										{
											"begin": 9267,
											"end": 9596,
											"name": "DUP1"
										},
										{
											"begin": 9267,
											"end": 9596,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9267,
											"end": 9596,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9267,
											"end": 9596,
											"name": "AND"
										},
										{
											"begin": 9267,
											"end": 9596,
											"name": "SWAP1"
										},
										{
											"begin": 9267,
											"end": 9596,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9267,
											"end": 9596,
											"name": "ADD"
										},
										{
											"begin": 9267,
											"end": 9596,
											"name": "SWAP1"
										},
										{
											"begin": 9267,
											"end": 9596,
											"name": "SWAP3"
										},
										{
											"begin": 9267,
											"end": 9596,
											"name": "SWAP2"
										},
										{
											"begin": 9267,
											"end": 9596,
											"name": "SWAP1"
										},
										{
											"begin": 9267,
											"end": 9596,
											"name": "POP"
										},
										{
											"begin": 9267,
											"end": 9596,
											"name": "POP"
										},
										{
											"begin": 9267,
											"end": 9596,
											"name": "POP"
										},
										{
											"begin": 9267,
											"end": 9596,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 9267,
											"end": 9596,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9267,
											"end": 9596,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 9267,
											"end": 9596,
											"name": "JUMPDEST"
										},
										{
											"begin": 9267,
											"end": 9596,
											"name": "STOP"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "JUMPDEST"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "JUMPDEST"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "MLOAD"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "DUP1"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "DUP3"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "AND"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "AND"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "DUP2"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "MSTORE"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "ADD"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "SWAP2"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "POP"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "POP"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "MLOAD"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "DUP1"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "SWAP2"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "SUB"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "SWAP1"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "RETURN"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "JUMPDEST"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "JUMPDEST"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "MLOAD"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "DUP1"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "DUP3"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "AND"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "AND"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "DUP2"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "MSTORE"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "ADD"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "SWAP2"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "POP"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "POP"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "MLOAD"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "DUP1"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "SWAP2"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "SUB"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "SWAP1"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "RETURN"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "JUMPDEST"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "DUP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "DUP2"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "ADD"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "DUP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "DUP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "AND"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "ADD"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP3"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP2"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "DUP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "AND"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "ADD"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP3"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP2"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "DUP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "ADD"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP3"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP2"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "DUP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "ADD"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP3"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP2"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "DUP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "AND"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "ADD"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP3"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP2"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "DUP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "ADD"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP3"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP2"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "DUP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "ADD"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP3"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP2"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "POP"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "POP"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "POP"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "JUMPDEST"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "STOP"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "JUMPDEST"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "DUP1"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "DUP2"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "ADD"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "SWAP1"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "DUP1"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "DUP1"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "AND"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "SWAP1"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "ADD"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "SWAP1"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "SWAP3"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "SWAP2"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "SWAP1"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "DUP1"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "AND"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "SWAP1"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "ADD"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "SWAP1"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "SWAP3"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "SWAP2"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "SWAP1"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "POP"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "POP"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "POP"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "JUMPDEST"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "MLOAD"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "DUP1"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "DUP3"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "DUP2"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "MSTORE"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "ADD"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "SWAP2"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "POP"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "POP"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "MLOAD"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "DUP1"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "SWAP2"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "SUB"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "SWAP1"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "RETURN"
										},
										{
											"begin": 9642,
											"end": 9798,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 9642,
											"end": 9798,
											"name": "JUMPDEST"
										},
										{
											"begin": 9642,
											"end": 9798,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 9642,
											"end": 9798,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 9642,
											"end": 9798,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9642,
											"end": 9798,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 9642,
											"end": 9798,
											"name": "JUMPDEST"
										},
										{
											"begin": 9642,
											"end": 9798,
											"name": "STOP"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "JUMPDEST"
										},
										{
											"begin": 1211,
											"end": 1212,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1199,
											"end": 1207,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1199,
											"end": 1207,
											"name": "SLOAD"
										},
										{
											"begin": 1199,
											"end": 1212,
											"name": "EQ"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "JUMPI"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "MLOAD"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "DUP2"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "MSTORE"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "ADD"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "DUP1"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "DUP1"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "ADD"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "DUP3"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "DUP2"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "SUB"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "DUP3"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "MSTORE"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "DUP2"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "MSTORE"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "ADD"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "DUP1"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "PUSH",
											"value": "50616E63616B653A204C4F434B45440000000000000000000000000000000000"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "DUP2"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "MSTORE"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "POP"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "ADD"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "SWAP2"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "POP"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "POP"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "MLOAD"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "DUP1"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "SWAP2"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "SUB"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "SWAP1"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "REVERT"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "JUMPDEST"
										},
										{
											"begin": 1253,
											"end": 1254,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1250,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1242,
											"end": 1254,
											"name": "DUP2"
										},
										{
											"begin": 1242,
											"end": 1254,
											"name": "SWAP1"
										},
										{
											"begin": 1242,
											"end": 1254,
											"name": "SSTORE"
										},
										{
											"begin": 1242,
											"end": 1254,
											"name": "POP"
										},
										{
											"begin": 7491,
											"end": 7492,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7478,
											"end": 7488,
											"name": "DUP6"
										},
										{
											"begin": 7478,
											"end": 7492,
											"name": "GT"
										},
										{
											"begin": 7478,
											"end": 7510,
											"name": "DUP1"
										},
										{
											"begin": 7478,
											"end": 7510,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 7478,
											"end": 7510,
											"name": "JUMPI"
										},
										{
											"begin": 7478,
											"end": 7510,
											"name": "POP"
										},
										{
											"begin": 7509,
											"end": 7510,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7496,
											"end": 7506,
											"name": "DUP5"
										},
										{
											"begin": 7496,
											"end": 7510,
											"name": "GT"
										},
										{
											"begin": 7478,
											"end": 7510,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 7478,
											"end": 7510,
											"name": "JUMPDEST"
										},
										{
											"begin": 7470,
											"end": 7550,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 7470,
											"end": 7550,
											"name": "JUMPI"
										},
										{
											"begin": 7470,
											"end": 7550,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7470,
											"end": 7550,
											"name": "MLOAD"
										},
										{
											"begin": 7470,
											"end": 7550,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7470,
											"end": 7550,
											"name": "DUP2"
										},
										{
											"begin": 7470,
											"end": 7550,
											"name": "MSTORE"
										},
										{
											"begin": 7470,
											"end": 7550,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7470,
											"end": 7550,
											"name": "ADD"
										},
										{
											"begin": 7470,
											"end": 7550,
											"name": "DUP1"
										},
										{
											"begin": 7470,
											"end": 7550,
											"name": "DUP1"
										},
										{
											"begin": 7470,
											"end": 7550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7470,
											"end": 7550,
											"name": "ADD"
										},
										{
											"begin": 7470,
											"end": 7550,
											"name": "DUP3"
										},
										{
											"begin": 7470,
											"end": 7550,
											"name": "DUP2"
										},
										{
											"begin": 7470,
											"end": 7550,
											"name": "SUB"
										},
										{
											"begin": 7470,
											"end": 7550,
											"name": "DUP3"
										},
										{
											"begin": 7470,
											"end": 7550,
											"name": "MSTORE"
										},
										{
											"begin": 7470,
											"end": 7550,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 7470,
											"end": 7550,
											"name": "DUP2"
										},
										{
											"begin": 7470,
											"end": 7550,
											"name": "MSTORE"
										},
										{
											"begin": 7470,
											"end": 7550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7470,
											"end": 7550,
											"name": "ADD"
										},
										{
											"begin": 7470,
											"end": 7550,
											"name": "DUP1"
										},
										{
											"begin": 7470,
											"end": 7550,
											"name": "PUSH data",
											"value": "C654718515B5F98052EB92744D97D32CCCABF6E8B2BAE886738591C9B906CFD8"
										},
										{
											"begin": 7470,
											"end": 7550,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 7470,
											"end": 7550,
											"name": "SWAP2"
										},
										{
											"begin": 7470,
											"end": 7550,
											"name": "CODECOPY"
										},
										{
											"begin": 7470,
											"end": 7550,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7470,
											"end": 7550,
											"name": "ADD"
										},
										{
											"begin": 7470,
											"end": 7550,
											"name": "SWAP2"
										},
										{
											"begin": 7470,
											"end": 7550,
											"name": "POP"
										},
										{
											"begin": 7470,
											"end": 7550,
											"name": "POP"
										},
										{
											"begin": 7470,
											"end": 7550,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7470,
											"end": 7550,
											"name": "MLOAD"
										},
										{
											"begin": 7470,
											"end": 7550,
											"name": "DUP1"
										},
										{
											"begin": 7470,
											"end": 7550,
											"name": "SWAP2"
										},
										{
											"begin": 7470,
											"end": 7550,
											"name": "SUB"
										},
										{
											"begin": 7470,
											"end": 7550,
											"name": "SWAP1"
										},
										{
											"begin": 7470,
											"end": 7550,
											"name": "REVERT"
										},
										{
											"begin": 7470,
											"end": 7550,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 7470,
											"end": 7550,
											"name": "JUMPDEST"
										},
										{
											"begin": 7561,
											"end": 7578,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7580,
											"end": 7597,
											"name": "DUP1"
										},
										{
											"begin": 7602,
											"end": 7615,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 7602,
											"end": 7613,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 7602,
											"end": 7615,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7602,
											"end": 7615,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 7602,
											"end": 7615,
											"name": "JUMPDEST"
										},
										{
											"begin": 7560,
											"end": 7615,
											"name": "POP"
										},
										{
											"begin": 7560,
											"end": 7615,
											"name": "SWAP2"
										},
										{
											"begin": 7560,
											"end": 7615,
											"name": "POP"
										},
										{
											"begin": 7560,
											"end": 7615,
											"name": "SWAP2"
										},
										{
											"begin": 7560,
											"end": 7615,
											"name": "POP"
										},
										{
											"begin": 7661,
											"end": 7670,
											"name": "DUP2"
										},
										{
											"begin": 7648,
											"end": 7670,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7648,
											"end": 7670,
											"name": "AND"
										},
										{
											"begin": 7648,
											"end": 7658,
											"name": "DUP8"
										},
										{
											"begin": 7648,
											"end": 7670,
											"name": "LT"
										},
										{
											"begin": 7648,
											"end": 7696,
											"name": "DUP1"
										},
										{
											"begin": 7648,
											"end": 7696,
											"name": "ISZERO"
										},
										{
											"begin": 7648,
											"end": 7696,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 7648,
											"end": 7696,
											"name": "JUMPI"
										},
										{
											"begin": 7648,
											"end": 7696,
											"name": "POP"
										},
										{
											"begin": 7687,
											"end": 7696,
											"name": "DUP1"
										},
										{
											"begin": 7674,
											"end": 7696,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7674,
											"end": 7696,
											"name": "AND"
										},
										{
											"begin": 7674,
											"end": 7684,
											"name": "DUP7"
										},
										{
											"begin": 7674,
											"end": 7696,
											"name": "LT"
										},
										{
											"begin": 7648,
											"end": 7696,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 7648,
											"end": 7696,
											"name": "JUMPDEST"
										},
										{
											"begin": 7640,
											"end": 7732,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 7640,
											"end": 7732,
											"name": "JUMPI"
										},
										{
											"begin": 7640,
											"end": 7732,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7640,
											"end": 7732,
											"name": "MLOAD"
										},
										{
											"begin": 7640,
											"end": 7732,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7640,
											"end": 7732,
											"name": "DUP2"
										},
										{
											"begin": 7640,
											"end": 7732,
											"name": "MSTORE"
										},
										{
											"begin": 7640,
											"end": 7732,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7640,
											"end": 7732,
											"name": "ADD"
										},
										{
											"begin": 7640,
											"end": 7732,
											"name": "DUP1"
										},
										{
											"begin": 7640,
											"end": 7732,
											"name": "DUP1"
										},
										{
											"begin": 7640,
											"end": 7732,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7640,
											"end": 7732,
											"name": "ADD"
										},
										{
											"begin": 7640,
											"end": 7732,
											"name": "DUP3"
										},
										{
											"begin": 7640,
											"end": 7732,
											"name": "DUP2"
										},
										{
											"begin": 7640,
											"end": 7732,
											"name": "SUB"
										},
										{
											"begin": 7640,
											"end": 7732,
											"name": "DUP3"
										},
										{
											"begin": 7640,
											"end": 7732,
											"name": "MSTORE"
										},
										{
											"begin": 7640,
											"end": 7732,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 7640,
											"end": 7732,
											"name": "DUP2"
										},
										{
											"begin": 7640,
											"end": 7732,
											"name": "MSTORE"
										},
										{
											"begin": 7640,
											"end": 7732,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7640,
											"end": 7732,
											"name": "ADD"
										},
										{
											"begin": 7640,
											"end": 7732,
											"name": "DUP1"
										},
										{
											"begin": 7640,
											"end": 7732,
											"name": "PUSH",
											"value": "50616E63616B653A20494E53554646494349454E545F4C495155494449545900"
										},
										{
											"begin": 7640,
											"end": 7732,
											"name": "DUP2"
										},
										{
											"begin": 7640,
											"end": 7732,
											"name": "MSTORE"
										},
										{
											"begin": 7640,
											"end": 7732,
											"name": "POP"
										},
										{
											"begin": 7640,
											"end": 7732,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7640,
											"end": 7732,
											"name": "ADD"
										},
										{
											"begin": 7640,
											"end": 7732,
											"name": "SWAP2"
										},
										{
											"begin": 7640,
											"end": 7732,
											"name": "POP"
										},
										{
											"begin": 7640,
											"end": 7732,
											"name": "POP"
										},
										{
											"begin": 7640,
											"end": 7732,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7640,
											"end": 7732,
											"name": "MLOAD"
										},
										{
											"begin": 7640,
											"end": 7732,
											"name": "DUP1"
										},
										{
											"begin": 7640,
											"end": 7732,
											"name": "SWAP2"
										},
										{
											"begin": 7640,
											"end": 7732,
											"name": "SUB"
										},
										{
											"begin": 7640,
											"end": 7732,
											"name": "SWAP1"
										},
										{
											"begin": 7640,
											"end": 7732,
											"name": "REVERT"
										},
										{
											"begin": 7640,
											"end": 7732,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 7640,
											"end": 7732,
											"name": "JUMPDEST"
										},
										{
											"begin": 7743,
											"end": 7756,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7766,
											"end": 7779,
											"name": "DUP1"
										},
										{
											"begin": 7854,
											"end": 7869,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7872,
											"end": 7878,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 7872,
											"end": 7878,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7872,
											"end": 7878,
											"name": "SWAP1"
										},
										{
											"begin": 7872,
											"end": 7878,
											"name": "SLOAD"
										},
										{
											"begin": 7872,
											"end": 7878,
											"name": "SWAP1"
										},
										{
											"begin": 7872,
											"end": 7878,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7872,
											"end": 7878,
											"name": "EXP"
										},
										{
											"begin": 7872,
											"end": 7878,
											"name": "SWAP1"
										},
										{
											"begin": 7872,
											"end": 7878,
											"name": "DIV"
										},
										{
											"begin": 7872,
											"end": 7878,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7872,
											"end": 7878,
											"name": "AND"
										},
										{
											"begin": 7854,
											"end": 7878,
											"name": "SWAP1"
										},
										{
											"begin": 7854,
											"end": 7878,
											"name": "POP"
										},
										{
											"begin": 7888,
											"end": 7903,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7906,
											"end": 7912,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 7906,
											"end": 7912,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7906,
											"end": 7912,
											"name": "SWAP1"
										},
										{
											"begin": 7906,
											"end": 7912,
											"name": "SLOAD"
										},
										{
											"begin": 7906,
											"end": 7912,
											"name": "SWAP1"
										},
										{
											"begin": 7906,
											"end": 7912,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7906,
											"end": 7912,
											"name": "EXP"
										},
										{
											"begin": 7906,
											"end": 7912,
											"name": "SWAP1"
										},
										{
											"begin": 7906,
											"end": 7912,
											"name": "DIV"
										},
										{
											"begin": 7906,
											"end": 7912,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7906,
											"end": 7912,
											"name": "AND"
										},
										{
											"begin": 7888,
											"end": 7912,
											"name": "SWAP1"
										},
										{
											"begin": 7888,
											"end": 7912,
											"name": "POP"
										},
										{
											"begin": 7936,
											"end": 7943,
											"name": "DUP2"
										},
										{
											"begin": 7930,
											"end": 7943,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7930,
											"end": 7943,
											"name": "AND"
										},
										{
											"begin": 7930,
											"end": 7932,
											"name": "DUP10"
										},
										{
											"begin": 7930,
											"end": 7943,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7930,
											"end": 7943,
											"name": "AND"
										},
										{
											"begin": 7930,
											"end": 7943,
											"name": "EQ"
										},
										{
											"begin": 7930,
											"end": 7943,
											"name": "ISZERO"
										},
										{
											"begin": 7930,
											"end": 7960,
											"name": "DUP1"
										},
										{
											"begin": 7930,
											"end": 7960,
											"name": "ISZERO"
										},
										{
											"begin": 7930,
											"end": 7960,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 7930,
											"end": 7960,
											"name": "JUMPI"
										},
										{
											"begin": 7930,
											"end": 7960,
											"name": "POP"
										},
										{
											"begin": 7953,
											"end": 7960,
											"name": "DUP1"
										},
										{
											"begin": 7947,
											"end": 7960,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7947,
											"end": 7960,
											"name": "AND"
										},
										{
											"begin": 7947,
											"end": 7949,
											"name": "DUP10"
										},
										{
											"begin": 7947,
											"end": 7960,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7947,
											"end": 7960,
											"name": "AND"
										},
										{
											"begin": 7947,
											"end": 7960,
											"name": "EQ"
										},
										{
											"begin": 7947,
											"end": 7960,
											"name": "ISZERO"
										},
										{
											"begin": 7930,
											"end": 7960,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 7930,
											"end": 7960,
											"name": "JUMPDEST"
										},
										{
											"begin": 7922,
											"end": 7984,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 7922,
											"end": 7984,
											"name": "JUMPI"
										},
										{
											"begin": 7922,
											"end": 7984,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7922,
											"end": 7984,
											"name": "MLOAD"
										},
										{
											"begin": 7922,
											"end": 7984,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7922,
											"end": 7984,
											"name": "DUP2"
										},
										{
											"begin": 7922,
											"end": 7984,
											"name": "MSTORE"
										},
										{
											"begin": 7922,
											"end": 7984,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7922,
											"end": 7984,
											"name": "ADD"
										},
										{
											"begin": 7922,
											"end": 7984,
											"name": "DUP1"
										},
										{
											"begin": 7922,
											"end": 7984,
											"name": "DUP1"
										},
										{
											"begin": 7922,
											"end": 7984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7922,
											"end": 7984,
											"name": "ADD"
										},
										{
											"begin": 7922,
											"end": 7984,
											"name": "DUP3"
										},
										{
											"begin": 7922,
											"end": 7984,
											"name": "DUP2"
										},
										{
											"begin": 7922,
											"end": 7984,
											"name": "SUB"
										},
										{
											"begin": 7922,
											"end": 7984,
											"name": "DUP3"
										},
										{
											"begin": 7922,
											"end": 7984,
											"name": "MSTORE"
										},
										{
											"begin": 7922,
											"end": 7984,
											"name": "PUSH",
											"value": "13"
										},
										{
											"begin": 7922,
											"end": 7984,
											"name": "DUP2"
										},
										{
											"begin": 7922,
											"end": 7984,
											"name": "MSTORE"
										},
										{
											"begin": 7922,
											"end": 7984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7922,
											"end": 7984,
											"name": "ADD"
										},
										{
											"begin": 7922,
											"end": 7984,
											"name": "DUP1"
										},
										{
											"begin": 7922,
											"end": 7984,
											"name": "PUSH",
											"value": "50616E63616B653A20494E56414C49445F544F00000000000000000000000000"
										},
										{
											"begin": 7922,
											"end": 7984,
											"name": "DUP2"
										},
										{
											"begin": 7922,
											"end": 7984,
											"name": "MSTORE"
										},
										{
											"begin": 7922,
											"end": 7984,
											"name": "POP"
										},
										{
											"begin": 7922,
											"end": 7984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7922,
											"end": 7984,
											"name": "ADD"
										},
										{
											"begin": 7922,
											"end": 7984,
											"name": "SWAP2"
										},
										{
											"begin": 7922,
											"end": 7984,
											"name": "POP"
										},
										{
											"begin": 7922,
											"end": 7984,
											"name": "POP"
										},
										{
											"begin": 7922,
											"end": 7984,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7922,
											"end": 7984,
											"name": "MLOAD"
										},
										{
											"begin": 7922,
											"end": 7984,
											"name": "DUP1"
										},
										{
											"begin": 7922,
											"end": 7984,
											"name": "SWAP2"
										},
										{
											"begin": 7922,
											"end": 7984,
											"name": "SUB"
										},
										{
											"begin": 7922,
											"end": 7984,
											"name": "SWAP1"
										},
										{
											"begin": 7922,
											"end": 7984,
											"name": "REVERT"
										},
										{
											"begin": 7922,
											"end": 7984,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 7922,
											"end": 7984,
											"name": "JUMPDEST"
										},
										{
											"begin": 8011,
											"end": 8012,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7998,
											"end": 8008,
											"name": "DUP12"
										},
										{
											"begin": 7998,
											"end": 8012,
											"name": "GT"
										},
										{
											"begin": 7994,
											"end": 8052,
											"name": "ISZERO"
										},
										{
											"begin": 7994,
											"end": 8052,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 7994,
											"end": 8052,
											"name": "JUMPI"
										},
										{
											"begin": 8014,
											"end": 8052,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 8028,
											"end": 8035,
											"name": "DUP3"
										},
										{
											"begin": 8037,
											"end": 8039,
											"name": "DUP11"
										},
										{
											"begin": 8041,
											"end": 8051,
											"name": "DUP14"
										},
										{
											"begin": 8014,
											"end": 8027,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 8014,
											"end": 8052,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8014,
											"end": 8052,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 8014,
											"end": 8052,
											"name": "JUMPDEST"
										},
										{
											"begin": 7994,
											"end": 8052,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 7994,
											"end": 8052,
											"name": "JUMPDEST"
										},
										{
											"begin": 8113,
											"end": 8114,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8100,
											"end": 8110,
											"name": "DUP11"
										},
										{
											"begin": 8100,
											"end": 8114,
											"name": "GT"
										},
										{
											"begin": 8096,
											"end": 8154,
											"name": "ISZERO"
										},
										{
											"begin": 8096,
											"end": 8154,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 8096,
											"end": 8154,
											"name": "JUMPI"
										},
										{
											"begin": 8116,
											"end": 8154,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 8130,
											"end": 8137,
											"name": "DUP2"
										},
										{
											"begin": 8139,
											"end": 8141,
											"name": "DUP11"
										},
										{
											"begin": 8143,
											"end": 8153,
											"name": "DUP13"
										},
										{
											"begin": 8116,
											"end": 8129,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 8116,
											"end": 8154,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8116,
											"end": 8154,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 8116,
											"end": 8154,
											"name": "JUMPDEST"
										},
										{
											"begin": 8096,
											"end": 8154,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 8096,
											"end": 8154,
											"name": "JUMPDEST"
										},
										{
											"begin": 8216,
											"end": 8217,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8202,
											"end": 8206,
											"name": "DUP9"
										},
										{
											"begin": 8202,
											"end": 8206,
											"name": "DUP9"
										},
										{
											"begin": 8202,
											"end": 8213,
											"name": "SWAP1"
										},
										{
											"begin": 8202,
											"end": 8213,
											"name": "POP"
										},
										{
											"begin": 8202,
											"end": 8217,
											"name": "GT"
										},
										{
											"begin": 8198,
											"end": 8291,
											"name": "ISZERO"
										},
										{
											"begin": 8198,
											"end": 8291,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 8198,
											"end": 8291,
											"name": "JUMPI"
										},
										{
											"begin": 8234,
											"end": 8236,
											"name": "DUP9"
										},
										{
											"begin": 8219,
											"end": 8249,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8219,
											"end": 8249,
											"name": "AND"
										},
										{
											"begin": 8219,
											"end": 8249,
											"name": "PUSH",
											"value": "84800812"
										},
										{
											"begin": 8250,
											"end": 8260,
											"name": "CALLER"
										},
										{
											"begin": 8262,
											"end": 8272,
											"name": "DUP14"
										},
										{
											"begin": 8274,
											"end": 8284,
											"name": "DUP14"
										},
										{
											"begin": 8286,
											"end": 8290,
											"name": "DUP13"
										},
										{
											"begin": 8286,
											"end": 8290,
											"name": "DUP13"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "MLOAD"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "DUP7"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "AND"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "SHL"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "DUP2"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "MSTORE"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "ADD"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "DUP1"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "DUP7"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "AND"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "AND"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "DUP2"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "MSTORE"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "ADD"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "DUP6"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "DUP2"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "MSTORE"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "ADD"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "DUP5"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "DUP2"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "MSTORE"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "ADD"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "DUP1"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "ADD"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "DUP3"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "DUP2"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "SUB"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "DUP3"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "MSTORE"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "DUP5"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "DUP5"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "DUP3"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "DUP2"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "DUP2"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "MSTORE"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "ADD"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "SWAP3"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "POP"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "POP"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "POP"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "SWAP7"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "POP"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "POP"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "POP"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "POP"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "POP"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "POP"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "POP"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "MLOAD"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "DUP1"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "DUP4"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "SUB"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "DUP2"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "DUP8"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "DUP1"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "POP"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "GAS"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "CALL"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "POP"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "POP"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "POP"
										},
										{
											"begin": 8219,
											"end": 8291,
											"name": "POP"
										},
										{
											"begin": 8198,
											"end": 8291,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 8198,
											"end": 8291,
											"name": "JUMPDEST"
										},
										{
											"begin": 8319,
											"end": 8326,
											"name": "DUP2"
										},
										{
											"begin": 8312,
											"end": 8337,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8312,
											"end": 8337,
											"name": "AND"
										},
										{
											"begin": 8312,
											"end": 8337,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 8346,
											"end": 8350,
											"name": "ADDRESS"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "MLOAD"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "DUP3"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "AND"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "SHL"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "DUP2"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "MSTORE"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "ADD"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "DUP1"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "DUP3"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "AND"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "AND"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "DUP2"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "MSTORE"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "ADD"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "SWAP2"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "POP"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "POP"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "MLOAD"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "DUP1"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "DUP4"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "SUB"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "DUP2"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "DUP7"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "DUP1"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "POP"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "GAS"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "STATICCALL"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "POP"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "POP"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "POP"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "POP"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "MLOAD"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "DUP2"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "ADD"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "SWAP1"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "DUP1"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "DUP1"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "MLOAD"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "SWAP1"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "ADD"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "SWAP1"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "SWAP3"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "SWAP2"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "SWAP1"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "POP"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "POP"
										},
										{
											"begin": 8312,
											"end": 8352,
											"name": "POP"
										},
										{
											"begin": 8301,
											"end": 8352,
											"name": "SWAP4"
										},
										{
											"begin": 8301,
											"end": 8352,
											"name": "POP"
										},
										{
											"begin": 8380,
											"end": 8387,
											"name": "DUP1"
										},
										{
											"begin": 8373,
											"end": 8398,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8373,
											"end": 8398,
											"name": "AND"
										},
										{
											"begin": 8373,
											"end": 8398,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 8407,
											"end": 8411,
											"name": "ADDRESS"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "MLOAD"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "DUP3"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "AND"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "SHL"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "DUP2"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "MSTORE"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "ADD"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "DUP1"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "DUP3"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "AND"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "AND"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "DUP2"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "MSTORE"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "ADD"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "SWAP2"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "POP"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "POP"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "MLOAD"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "DUP1"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "DUP4"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "SUB"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "DUP2"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "DUP7"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "DUP1"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "POP"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "GAS"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "STATICCALL"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "POP"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "POP"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "POP"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "POP"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "MLOAD"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "DUP2"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "ADD"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "SWAP1"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "DUP1"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "DUP1"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "MLOAD"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "SWAP1"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "ADD"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "SWAP1"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "SWAP3"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "SWAP2"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "SWAP1"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "POP"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "POP"
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "POP"
										},
										{
											"begin": 8362,
											"end": 8413,
											"name": "SWAP3"
										},
										{
											"begin": 8362,
											"end": 8413,
											"name": "POP"
										},
										{
											"begin": 1264,
											"end": 1265,
											"name": "POP"
										},
										{
											"begin": 1264,
											"end": 1265,
											"name": "POP"
										},
										{
											"begin": 8433,
											"end": 8447,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8473,
											"end": 8483,
											"name": "DUP10"
										},
										{
											"begin": 8461,
											"end": 8470,
											"name": "DUP6"
										},
										{
											"begin": 8461,
											"end": 8483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8461,
											"end": 8483,
											"name": "AND"
										},
										{
											"begin": 8461,
											"end": 8483,
											"name": "SUB"
										},
										{
											"begin": 8450,
											"end": 8458,
											"name": "DUP4"
										},
										{
											"begin": 8450,
											"end": 8483,
											"name": "GT"
										},
										{
											"begin": 8450,
											"end": 8525,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 8450,
											"end": 8525,
											"name": "JUMPI"
										},
										{
											"begin": 8524,
											"end": 8525,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8450,
											"end": 8525,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 8450,
											"end": 8525,
											"name": "JUMP"
										},
										{
											"begin": 8450,
											"end": 8525,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 8450,
											"end": 8525,
											"name": "JUMPDEST"
										},
										{
											"begin": 8510,
											"end": 8520,
											"name": "DUP10"
										},
										{
											"begin": 8498,
											"end": 8507,
											"name": "DUP6"
										},
										{
											"begin": 8498,
											"end": 8520,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8498,
											"end": 8520,
											"name": "AND"
										},
										{
											"begin": 8498,
											"end": 8520,
											"name": "SUB"
										},
										{
											"begin": 8486,
											"end": 8494,
											"name": "DUP4"
										},
										{
											"begin": 8486,
											"end": 8521,
											"name": "SUB"
										},
										{
											"begin": 8450,
											"end": 8525,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 8450,
											"end": 8525,
											"name": "JUMPDEST"
										},
										{
											"begin": 8433,
											"end": 8525,
											"name": "SWAP1"
										},
										{
											"begin": 8433,
											"end": 8525,
											"name": "POP"
										},
										{
											"begin": 8535,
											"end": 8549,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8575,
											"end": 8585,
											"name": "DUP10"
										},
										{
											"begin": 8563,
											"end": 8572,
											"name": "DUP6"
										},
										{
											"begin": 8563,
											"end": 8585,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8563,
											"end": 8585,
											"name": "AND"
										},
										{
											"begin": 8563,
											"end": 8585,
											"name": "SUB"
										},
										{
											"begin": 8552,
											"end": 8560,
											"name": "DUP4"
										},
										{
											"begin": 8552,
											"end": 8585,
											"name": "GT"
										},
										{
											"begin": 8552,
											"end": 8627,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 8552,
											"end": 8627,
											"name": "JUMPI"
										},
										{
											"begin": 8626,
											"end": 8627,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8552,
											"end": 8627,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 8552,
											"end": 8627,
											"name": "JUMP"
										},
										{
											"begin": 8552,
											"end": 8627,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 8552,
											"end": 8627,
											"name": "JUMPDEST"
										},
										{
											"begin": 8612,
											"end": 8622,
											"name": "DUP10"
										},
										{
											"begin": 8600,
											"end": 8609,
											"name": "DUP6"
										},
										{
											"begin": 8600,
											"end": 8622,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8600,
											"end": 8622,
											"name": "AND"
										},
										{
											"begin": 8600,
											"end": 8622,
											"name": "SUB"
										},
										{
											"begin": 8588,
											"end": 8596,
											"name": "DUP4"
										},
										{
											"begin": 8588,
											"end": 8623,
											"name": "SUB"
										},
										{
											"begin": 8552,
											"end": 8627,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 8552,
											"end": 8627,
											"name": "JUMPDEST"
										},
										{
											"begin": 8535,
											"end": 8627,
											"name": "SWAP1"
										},
										{
											"begin": 8535,
											"end": 8627,
											"name": "POP"
										},
										{
											"begin": 8657,
											"end": 8658,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8645,
											"end": 8654,
											"name": "DUP3"
										},
										{
											"begin": 8645,
											"end": 8658,
											"name": "GT"
										},
										{
											"begin": 8645,
											"end": 8675,
											"name": "DUP1"
										},
										{
											"begin": 8645,
											"end": 8675,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 8645,
											"end": 8675,
											"name": "JUMPI"
										},
										{
											"begin": 8645,
											"end": 8675,
											"name": "POP"
										},
										{
											"begin": 8674,
											"end": 8675,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8662,
											"end": 8671,
											"name": "DUP2"
										},
										{
											"begin": 8662,
											"end": 8675,
											"name": "GT"
										},
										{
											"begin": 8645,
											"end": 8675,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 8645,
											"end": 8675,
											"name": "JUMPDEST"
										},
										{
											"begin": 8637,
											"end": 8714,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 8637,
											"end": 8714,
											"name": "JUMPI"
										},
										{
											"begin": 8637,
											"end": 8714,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8637,
											"end": 8714,
											"name": "MLOAD"
										},
										{
											"begin": 8637,
											"end": 8714,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8637,
											"end": 8714,
											"name": "DUP2"
										},
										{
											"begin": 8637,
											"end": 8714,
											"name": "MSTORE"
										},
										{
											"begin": 8637,
											"end": 8714,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8637,
											"end": 8714,
											"name": "ADD"
										},
										{
											"begin": 8637,
											"end": 8714,
											"name": "DUP1"
										},
										{
											"begin": 8637,
											"end": 8714,
											"name": "DUP1"
										},
										{
											"begin": 8637,
											"end": 8714,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8637,
											"end": 8714,
											"name": "ADD"
										},
										{
											"begin": 8637,
											"end": 8714,
											"name": "DUP3"
										},
										{
											"begin": 8637,
											"end": 8714,
											"name": "DUP2"
										},
										{
											"begin": 8637,
											"end": 8714,
											"name": "SUB"
										},
										{
											"begin": 8637,
											"end": 8714,
											"name": "DUP3"
										},
										{
											"begin": 8637,
											"end": 8714,
											"name": "MSTORE"
										},
										{
											"begin": 8637,
											"end": 8714,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 8637,
											"end": 8714,
											"name": "DUP2"
										},
										{
											"begin": 8637,
											"end": 8714,
											"name": "MSTORE"
										},
										{
											"begin": 8637,
											"end": 8714,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8637,
											"end": 8714,
											"name": "ADD"
										},
										{
											"begin": 8637,
											"end": 8714,
											"name": "DUP1"
										},
										{
											"begin": 8637,
											"end": 8714,
											"name": "PUSH data",
											"value": "50B0A6DD250A09C1CD083AD4BF9F97424665D60E7BC0A208A1151C7D0051999C"
										},
										{
											"begin": 8637,
											"end": 8714,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 8637,
											"end": 8714,
											"name": "SWAP2"
										},
										{
											"begin": 8637,
											"end": 8714,
											"name": "CODECOPY"
										},
										{
											"begin": 8637,
											"end": 8714,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8637,
											"end": 8714,
											"name": "ADD"
										},
										{
											"begin": 8637,
											"end": 8714,
											"name": "SWAP2"
										},
										{
											"begin": 8637,
											"end": 8714,
											"name": "POP"
										},
										{
											"begin": 8637,
											"end": 8714,
											"name": "POP"
										},
										{
											"begin": 8637,
											"end": 8714,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8637,
											"end": 8714,
											"name": "MLOAD"
										},
										{
											"begin": 8637,
											"end": 8714,
											"name": "DUP1"
										},
										{
											"begin": 8637,
											"end": 8714,
											"name": "SWAP2"
										},
										{
											"begin": 8637,
											"end": 8714,
											"name": "SUB"
										},
										{
											"begin": 8637,
											"end": 8714,
											"name": "SWAP1"
										},
										{
											"begin": 8637,
											"end": 8714,
											"name": "REVERT"
										},
										{
											"begin": 8637,
											"end": 8714,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 8637,
											"end": 8714,
											"name": "JUMPDEST"
										},
										{
											"begin": 8798,
											"end": 8819,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8823,
											"end": 8865,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 8847,
											"end": 8864,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 8861,
											"end": 8863,
											"name": "PUSH",
											"value": "19"
										},
										{
											"begin": 8847,
											"end": 8856,
											"name": "DUP6"
										},
										{
											"begin": 8847,
											"end": 8860,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 8847,
											"end": 8860,
											"name": "SWAP1"
										},
										{
											"begin": 8847,
											"end": 8864,
											"name": "SWAP2"
										},
										{
											"begin": 8847,
											"end": 8864,
											"name": "SWAP1"
										},
										{
											"begin": 8847,
											"end": 8864,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8847,
											"end": 8864,
											"name": "AND"
										},
										{
											"begin": 8847,
											"end": 8864,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8847,
											"end": 8864,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 8847,
											"end": 8864,
											"name": "JUMPDEST"
										},
										{
											"begin": 8823,
											"end": 8842,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 8836,
											"end": 8841,
											"name": "PUSH",
											"value": "2710"
										},
										{
											"begin": 8823,
											"end": 8831,
											"name": "DUP9"
										},
										{
											"begin": 8823,
											"end": 8835,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 8823,
											"end": 8835,
											"name": "SWAP1"
										},
										{
											"begin": 8823,
											"end": 8842,
											"name": "SWAP2"
										},
										{
											"begin": 8823,
											"end": 8842,
											"name": "SWAP1"
										},
										{
											"begin": 8823,
											"end": 8842,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8823,
											"end": 8842,
											"name": "AND"
										},
										{
											"begin": 8823,
											"end": 8842,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8823,
											"end": 8842,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 8823,
											"end": 8842,
											"name": "JUMPDEST"
										},
										{
											"begin": 8823,
											"end": 8846,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 8823,
											"end": 8846,
											"name": "SWAP1"
										},
										{
											"begin": 8823,
											"end": 8865,
											"name": "SWAP2"
										},
										{
											"begin": 8823,
											"end": 8865,
											"name": "SWAP1"
										},
										{
											"begin": 8823,
											"end": 8865,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8823,
											"end": 8865,
											"name": "AND"
										},
										{
											"begin": 8823,
											"end": 8865,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8823,
											"end": 8865,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 8823,
											"end": 8865,
											"name": "JUMPDEST"
										},
										{
											"begin": 8798,
											"end": 8866,
											"name": "SWAP1"
										},
										{
											"begin": 8798,
											"end": 8866,
											"name": "POP"
										},
										{
											"begin": 8876,
											"end": 8897,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8901,
											"end": 8943,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 8925,
											"end": 8942,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 8939,
											"end": 8941,
											"name": "PUSH",
											"value": "19"
										},
										{
											"begin": 8925,
											"end": 8934,
											"name": "DUP6"
										},
										{
											"begin": 8925,
											"end": 8938,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 8925,
											"end": 8938,
											"name": "SWAP1"
										},
										{
											"begin": 8925,
											"end": 8942,
											"name": "SWAP2"
										},
										{
											"begin": 8925,
											"end": 8942,
											"name": "SWAP1"
										},
										{
											"begin": 8925,
											"end": 8942,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8925,
											"end": 8942,
											"name": "AND"
										},
										{
											"begin": 8925,
											"end": 8942,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8925,
											"end": 8942,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 8925,
											"end": 8942,
											"name": "JUMPDEST"
										},
										{
											"begin": 8901,
											"end": 8920,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 8914,
											"end": 8919,
											"name": "PUSH",
											"value": "2710"
										},
										{
											"begin": 8901,
											"end": 8909,
											"name": "DUP9"
										},
										{
											"begin": 8901,
											"end": 8913,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 8901,
											"end": 8913,
											"name": "SWAP1"
										},
										{
											"begin": 8901,
											"end": 8920,
											"name": "SWAP2"
										},
										{
											"begin": 8901,
											"end": 8920,
											"name": "SWAP1"
										},
										{
											"begin": 8901,
											"end": 8920,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8901,
											"end": 8920,
											"name": "AND"
										},
										{
											"begin": 8901,
											"end": 8920,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8901,
											"end": 8920,
											"name": "tag",
											"value": "150"
										},
										{
											"begin": 8901,
											"end": 8920,
											"name": "JUMPDEST"
										},
										{
											"begin": 8901,
											"end": 8924,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 8901,
											"end": 8924,
											"name": "SWAP1"
										},
										{
											"begin": 8901,
											"end": 8943,
											"name": "SWAP2"
										},
										{
											"begin": 8901,
											"end": 8943,
											"name": "SWAP1"
										},
										{
											"begin": 8901,
											"end": 8943,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8901,
											"end": 8943,
											"name": "AND"
										},
										{
											"begin": 8901,
											"end": 8943,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8901,
											"end": 8943,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 8901,
											"end": 8943,
											"name": "JUMPDEST"
										},
										{
											"begin": 8876,
											"end": 8944,
											"name": "SWAP1"
										},
										{
											"begin": 8876,
											"end": 8944,
											"name": "POP"
										},
										{
											"begin": 9004,
											"end": 9048,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 9039,
											"end": 9047,
											"name": "PUSH",
											"value": "5F5E100"
										},
										{
											"begin": 9004,
											"end": 9034,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 9024,
											"end": 9033,
											"name": "DUP10"
										},
										{
											"begin": 9004,
											"end": 9034,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9004,
											"end": 9034,
											"name": "AND"
										},
										{
											"begin": 9009,
											"end": 9018,
											"name": "DUP12"
										},
										{
											"begin": 9004,
											"end": 9019,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9004,
											"end": 9019,
											"name": "AND"
										},
										{
											"begin": 9004,
											"end": 9023,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 9004,
											"end": 9023,
											"name": "SWAP1"
										},
										{
											"begin": 9004,
											"end": 9034,
											"name": "SWAP2"
										},
										{
											"begin": 9004,
											"end": 9034,
											"name": "SWAP1"
										},
										{
											"begin": 9004,
											"end": 9034,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9004,
											"end": 9034,
											"name": "AND"
										},
										{
											"begin": 9004,
											"end": 9034,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9004,
											"end": 9034,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 9004,
											"end": 9034,
											"name": "JUMPDEST"
										},
										{
											"begin": 9004,
											"end": 9038,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 9004,
											"end": 9038,
											"name": "SWAP1"
										},
										{
											"begin": 9004,
											"end": 9048,
											"name": "SWAP2"
										},
										{
											"begin": 9004,
											"end": 9048,
											"name": "SWAP1"
										},
										{
											"begin": 9004,
											"end": 9048,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9004,
											"end": 9048,
											"name": "AND"
										},
										{
											"begin": 9004,
											"end": 9048,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9004,
											"end": 9048,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 9004,
											"end": 9048,
											"name": "JUMPDEST"
										},
										{
											"begin": 8962,
											"end": 9000,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 8983,
											"end": 8999,
											"name": "DUP3"
										},
										{
											"begin": 8962,
											"end": 8978,
											"name": "DUP5"
										},
										{
											"begin": 8962,
											"end": 8982,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 8962,
											"end": 8982,
											"name": "SWAP1"
										},
										{
											"begin": 8962,
											"end": 9000,
											"name": "SWAP2"
										},
										{
											"begin": 8962,
											"end": 9000,
											"name": "SWAP1"
										},
										{
											"begin": 8962,
											"end": 9000,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8962,
											"end": 9000,
											"name": "AND"
										},
										{
											"begin": 8962,
											"end": 9000,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8962,
											"end": 9000,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 8962,
											"end": 9000,
											"name": "JUMPDEST"
										},
										{
											"begin": 8962,
											"end": 9048,
											"name": "LT"
										},
										{
											"begin": 8962,
											"end": 9048,
											"name": "ISZERO"
										},
										{
											"begin": 8954,
											"end": 9063,
											"name": "PUSH [tag]",
											"value": "154"
										},
										{
											"begin": 8954,
											"end": 9063,
											"name": "JUMPI"
										},
										{
											"begin": 8954,
											"end": 9063,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8954,
											"end": 9063,
											"name": "MLOAD"
										},
										{
											"begin": 8954,
											"end": 9063,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8954,
											"end": 9063,
											"name": "DUP2"
										},
										{
											"begin": 8954,
											"end": 9063,
											"name": "MSTORE"
										},
										{
											"begin": 8954,
											"end": 9063,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8954,
											"end": 9063,
											"name": "ADD"
										},
										{
											"begin": 8954,
											"end": 9063,
											"name": "DUP1"
										},
										{
											"begin": 8954,
											"end": 9063,
											"name": "DUP1"
										},
										{
											"begin": 8954,
											"end": 9063,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8954,
											"end": 9063,
											"name": "ADD"
										},
										{
											"begin": 8954,
											"end": 9063,
											"name": "DUP3"
										},
										{
											"begin": 8954,
											"end": 9063,
											"name": "DUP2"
										},
										{
											"begin": 8954,
											"end": 9063,
											"name": "SUB"
										},
										{
											"begin": 8954,
											"end": 9063,
											"name": "DUP3"
										},
										{
											"begin": 8954,
											"end": 9063,
											"name": "MSTORE"
										},
										{
											"begin": 8954,
											"end": 9063,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 8954,
											"end": 9063,
											"name": "DUP2"
										},
										{
											"begin": 8954,
											"end": 9063,
											"name": "MSTORE"
										},
										{
											"begin": 8954,
											"end": 9063,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8954,
											"end": 9063,
											"name": "ADD"
										},
										{
											"begin": 8954,
											"end": 9063,
											"name": "DUP1"
										},
										{
											"begin": 8954,
											"end": 9063,
											"name": "PUSH",
											"value": "50616E63616B653A204B00000000000000000000000000000000000000000000"
										},
										{
											"begin": 8954,
											"end": 9063,
											"name": "DUP2"
										},
										{
											"begin": 8954,
											"end": 9063,
											"name": "MSTORE"
										},
										{
											"begin": 8954,
											"end": 9063,
											"name": "POP"
										},
										{
											"begin": 8954,
											"end": 9063,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8954,
											"end": 9063,
											"name": "ADD"
										},
										{
											"begin": 8954,
											"end": 9063,
											"name": "SWAP2"
										},
										{
											"begin": 8954,
											"end": 9063,
											"name": "POP"
										},
										{
											"begin": 8954,
											"end": 9063,
											"name": "POP"
										},
										{
											"begin": 8954,
											"end": 9063,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8954,
											"end": 9063,
											"name": "MLOAD"
										},
										{
											"begin": 8954,
											"end": 9063,
											"name": "DUP1"
										},
										{
											"begin": 8954,
											"end": 9063,
											"name": "SWAP2"
										},
										{
											"begin": 8954,
											"end": 9063,
											"name": "SUB"
										},
										{
											"begin": 8954,
											"end": 9063,
											"name": "SWAP1"
										},
										{
											"begin": 8954,
											"end": 9063,
											"name": "REVERT"
										},
										{
											"begin": 8954,
											"end": 9063,
											"name": "tag",
											"value": "154"
										},
										{
											"begin": 8954,
											"end": 9063,
											"name": "JUMPDEST"
										},
										{
											"begin": 1264,
											"end": 1265,
											"name": "POP"
										},
										{
											"begin": 1264,
											"end": 1265,
											"name": "POP"
										},
										{
											"begin": 9084,
											"end": 9133,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 9092,
											"end": 9100,
											"name": "DUP5"
										},
										{
											"begin": 9102,
											"end": 9110,
											"name": "DUP5"
										},
										{
											"begin": 9112,
											"end": 9121,
											"name": "DUP9"
										},
										{
											"begin": 9123,
											"end": 9132,
											"name": "DUP9"
										},
										{
											"begin": 9084,
											"end": 9091,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 9084,
											"end": 9133,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9084,
											"end": 9133,
											"name": "tag",
											"value": "155"
										},
										{
											"begin": 9084,
											"end": 9133,
											"name": "JUMPDEST"
										},
										{
											"begin": 9211,
											"end": 9213,
											"name": "DUP9"
										},
										{
											"begin": 9148,
											"end": 9214,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9148,
											"end": 9214,
											"name": "AND"
										},
										{
											"begin": 9153,
											"end": 9163,
											"name": "CALLER"
										},
										{
											"begin": 9148,
											"end": 9214,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9148,
											"end": 9214,
											"name": "AND"
										},
										{
											"begin": 9148,
											"end": 9214,
											"name": "PUSH",
											"value": "D78AD95FA46C994B6551D0DA85FC275FE613CE37657FB8D5E3D130840159D822"
										},
										{
											"begin": 9165,
											"end": 9174,
											"name": "DUP5"
										},
										{
											"begin": 9176,
											"end": 9185,
											"name": "DUP5"
										},
										{
											"begin": 9187,
											"end": 9197,
											"name": "DUP16"
										},
										{
											"begin": 9199,
											"end": 9209,
											"name": "DUP16"
										},
										{
											"begin": 9148,
											"end": 9214,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9148,
											"end": 9214,
											"name": "MLOAD"
										},
										{
											"begin": 9148,
											"end": 9214,
											"name": "DUP1"
										},
										{
											"begin": 9148,
											"end": 9214,
											"name": "DUP6"
										},
										{
											"begin": 9148,
											"end": 9214,
											"name": "DUP2"
										},
										{
											"begin": 9148,
											"end": 9214,
											"name": "MSTORE"
										},
										{
											"begin": 9148,
											"end": 9214,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9148,
											"end": 9214,
											"name": "ADD"
										},
										{
											"begin": 9148,
											"end": 9214,
											"name": "DUP5"
										},
										{
											"begin": 9148,
											"end": 9214,
											"name": "DUP2"
										},
										{
											"begin": 9148,
											"end": 9214,
											"name": "MSTORE"
										},
										{
											"begin": 9148,
											"end": 9214,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9148,
											"end": 9214,
											"name": "ADD"
										},
										{
											"begin": 9148,
											"end": 9214,
											"name": "DUP4"
										},
										{
											"begin": 9148,
											"end": 9214,
											"name": "DUP2"
										},
										{
											"begin": 9148,
											"end": 9214,
											"name": "MSTORE"
										},
										{
											"begin": 9148,
											"end": 9214,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9148,
											"end": 9214,
											"name": "ADD"
										},
										{
											"begin": 9148,
											"end": 9214,
											"name": "DUP3"
										},
										{
											"begin": 9148,
											"end": 9214,
											"name": "DUP2"
										},
										{
											"begin": 9148,
											"end": 9214,
											"name": "MSTORE"
										},
										{
											"begin": 9148,
											"end": 9214,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9148,
											"end": 9214,
											"name": "ADD"
										},
										{
											"begin": 9148,
											"end": 9214,
											"name": "SWAP5"
										},
										{
											"begin": 9148,
											"end": 9214,
											"name": "POP"
										},
										{
											"begin": 9148,
											"end": 9214,
											"name": "POP"
										},
										{
											"begin": 9148,
											"end": 9214,
											"name": "POP"
										},
										{
											"begin": 9148,
											"end": 9214,
											"name": "POP"
										},
										{
											"begin": 9148,
											"end": 9214,
											"name": "POP"
										},
										{
											"begin": 9148,
											"end": 9214,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9148,
											"end": 9214,
											"name": "MLOAD"
										},
										{
											"begin": 9148,
											"end": 9214,
											"name": "DUP1"
										},
										{
											"begin": 9148,
											"end": 9214,
											"name": "SWAP2"
										},
										{
											"begin": 9148,
											"end": 9214,
											"name": "SUB"
										},
										{
											"begin": 9148,
											"end": 9214,
											"name": "SWAP1"
										},
										{
											"begin": 9148,
											"end": 9214,
											"name": "LOG3"
										},
										{
											"begin": 1264,
											"end": 1265,
											"name": "POP"
										},
										{
											"begin": 1264,
											"end": 1265,
											"name": "POP"
										},
										{
											"begin": 1264,
											"end": 1265,
											"name": "POP"
										},
										{
											"begin": 1264,
											"end": 1265,
											"name": "POP"
										},
										{
											"begin": 1264,
											"end": 1265,
											"name": "POP"
										},
										{
											"begin": 1264,
											"end": 1265,
											"name": "POP"
										},
										{
											"begin": 1286,
											"end": 1287,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1275,
											"end": 1283,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "DUP2"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "SWAP1"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "SSTORE"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "POP"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "POP"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "POP"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "POP"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "POP"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "POP"
										},
										{
											"begin": 7365,
											"end": 9221,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "JUMPDEST"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "MLOAD"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "ADD"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "MSTORE"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "MSTORE"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "ADD"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "44657853776170204C5073000000000000000000000000000000000000000000"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "MSTORE"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "JUMPDEST"
										},
										{
											"begin": 1344,
											"end": 1361,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1363,
											"end": 1380,
											"name": "DUP1"
										},
										{
											"begin": 1382,
											"end": 1408,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1432,
											"end": 1440,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 1432,
											"end": 1440,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1432,
											"end": 1440,
											"name": "SWAP1"
										},
										{
											"begin": 1432,
											"end": 1440,
											"name": "SLOAD"
										},
										{
											"begin": 1432,
											"end": 1440,
											"name": "SWAP1"
										},
										{
											"begin": 1432,
											"end": 1440,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1432,
											"end": 1440,
											"name": "EXP"
										},
										{
											"begin": 1432,
											"end": 1440,
											"name": "SWAP1"
										},
										{
											"begin": 1432,
											"end": 1440,
											"name": "DIV"
										},
										{
											"begin": 1432,
											"end": 1440,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1432,
											"end": 1440,
											"name": "AND"
										},
										{
											"begin": 1420,
											"end": 1440,
											"name": "SWAP3"
										},
										{
											"begin": 1420,
											"end": 1440,
											"name": "POP"
										},
										{
											"begin": 1462,
											"end": 1470,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 1462,
											"end": 1470,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 1462,
											"end": 1470,
											"name": "SWAP1"
										},
										{
											"begin": 1462,
											"end": 1470,
											"name": "SLOAD"
										},
										{
											"begin": 1462,
											"end": 1470,
											"name": "SWAP1"
										},
										{
											"begin": 1462,
											"end": 1470,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1462,
											"end": 1470,
											"name": "EXP"
										},
										{
											"begin": 1462,
											"end": 1470,
											"name": "SWAP1"
										},
										{
											"begin": 1462,
											"end": 1470,
											"name": "DIV"
										},
										{
											"begin": 1462,
											"end": 1470,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1462,
											"end": 1470,
											"name": "AND"
										},
										{
											"begin": 1450,
											"end": 1470,
											"name": "SWAP2"
										},
										{
											"begin": 1450,
											"end": 1470,
											"name": "POP"
										},
										{
											"begin": 1502,
											"end": 1520,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 1502,
											"end": 1520,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 1502,
											"end": 1520,
											"name": "SWAP1"
										},
										{
											"begin": 1502,
											"end": 1520,
											"name": "SLOAD"
										},
										{
											"begin": 1502,
											"end": 1520,
											"name": "SWAP1"
										},
										{
											"begin": 1502,
											"end": 1520,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1502,
											"end": 1520,
											"name": "EXP"
										},
										{
											"begin": 1502,
											"end": 1520,
											"name": "SWAP1"
										},
										{
											"begin": 1502,
											"end": 1520,
											"name": "DIV"
										},
										{
											"begin": 1502,
											"end": 1520,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1502,
											"end": 1520,
											"name": "AND"
										},
										{
											"begin": 1480,
											"end": 1520,
											"name": "SWAP1"
										},
										{
											"begin": 1480,
											"end": 1520,
											"name": "POP"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "SWAP1"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "SWAP2"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "SWAP3"
										},
										{
											"begin": 1300,
											"end": 1527,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "JUMPDEST"
										},
										{
											"begin": 2374,
											"end": 2378,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2390,
											"end": 2426,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 2399,
											"end": 2409,
											"name": "CALLER"
										},
										{
											"begin": 2411,
											"end": 2418,
											"name": "DUP5"
										},
										{
											"begin": 2420,
											"end": 2425,
											"name": "DUP5"
										},
										{
											"begin": 2390,
											"end": 2398,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 2390,
											"end": 2426,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2390,
											"end": 2426,
											"name": "tag",
											"value": "159"
										},
										{
											"begin": 2390,
											"end": 2426,
											"name": "JUMPDEST"
										},
										{
											"begin": 2443,
											"end": 2447,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2436,
											"end": 2447,
											"name": "SWAP1"
										},
										{
											"begin": 2436,
											"end": 2447,
											"name": "POP"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "SWAP3"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "SWAP2"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "POP"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "POP"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 610,
											"end": 631,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 610,
											"end": 631,
											"name": "JUMPDEST"
										},
										{
											"begin": 610,
											"end": 631,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 610,
											"end": 631,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 610,
											"end": 631,
											"name": "SWAP1"
										},
										{
											"begin": 610,
											"end": 631,
											"name": "SLOAD"
										},
										{
											"begin": 610,
											"end": 631,
											"name": "SWAP1"
										},
										{
											"begin": 610,
											"end": 631,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 610,
											"end": 631,
											"name": "EXP"
										},
										{
											"begin": 610,
											"end": 631,
											"name": "SWAP1"
										},
										{
											"begin": 610,
											"end": 631,
											"name": "DIV"
										},
										{
											"begin": 610,
											"end": 631,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 610,
											"end": 631,
											"name": "AND"
										},
										{
											"begin": 610,
											"end": 631,
											"name": "DUP2"
										},
										{
											"begin": 610,
											"end": 631,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "JUMPDEST"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "SLOAD"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "DUP2"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "JUMPDEST"
										},
										{
											"begin": 2716,
											"end": 2720,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2775,
											"end": 2777,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2736,
											"end": 2745,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2736,
											"end": 2751,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2746,
											"end": 2750,
											"name": "DUP7"
										},
										{
											"begin": 2736,
											"end": 2751,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2736,
											"end": 2751,
											"name": "AND"
										},
										{
											"begin": 2736,
											"end": 2751,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2736,
											"end": 2751,
											"name": "AND"
										},
										{
											"begin": 2736,
											"end": 2751,
											"name": "DUP2"
										},
										{
											"begin": 2736,
											"end": 2751,
											"name": "MSTORE"
										},
										{
											"begin": 2736,
											"end": 2751,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2736,
											"end": 2751,
											"name": "ADD"
										},
										{
											"begin": 2736,
											"end": 2751,
											"name": "SWAP1"
										},
										{
											"begin": 2736,
											"end": 2751,
											"name": "DUP2"
										},
										{
											"begin": 2736,
											"end": 2751,
											"name": "MSTORE"
										},
										{
											"begin": 2736,
											"end": 2751,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2736,
											"end": 2751,
											"name": "ADD"
										},
										{
											"begin": 2736,
											"end": 2751,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2736,
											"end": 2751,
											"name": "KECCAK256"
										},
										{
											"begin": 2736,
											"end": 2763,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2752,
											"end": 2762,
											"name": "CALLER"
										},
										{
											"begin": 2736,
											"end": 2763,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2736,
											"end": 2763,
											"name": "AND"
										},
										{
											"begin": 2736,
											"end": 2763,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2736,
											"end": 2763,
											"name": "AND"
										},
										{
											"begin": 2736,
											"end": 2763,
											"name": "DUP2"
										},
										{
											"begin": 2736,
											"end": 2763,
											"name": "MSTORE"
										},
										{
											"begin": 2736,
											"end": 2763,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2736,
											"end": 2763,
											"name": "ADD"
										},
										{
											"begin": 2736,
											"end": 2763,
											"name": "SWAP1"
										},
										{
											"begin": 2736,
											"end": 2763,
											"name": "DUP2"
										},
										{
											"begin": 2736,
											"end": 2763,
											"name": "MSTORE"
										},
										{
											"begin": 2736,
											"end": 2763,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2736,
											"end": 2763,
											"name": "ADD"
										},
										{
											"begin": 2736,
											"end": 2763,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2736,
											"end": 2763,
											"name": "KECCAK256"
										},
										{
											"begin": 2736,
											"end": 2763,
											"name": "SLOAD"
										},
										{
											"begin": 2736,
											"end": 2778,
											"name": "EQ"
										},
										{
											"begin": 2732,
											"end": 2873,
											"name": "PUSH [tag]",
											"value": "162"
										},
										{
											"begin": 2732,
											"end": 2873,
											"name": "JUMPI"
										},
										{
											"begin": 2824,
											"end": 2862,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 2856,
											"end": 2861,
											"name": "DUP3"
										},
										{
											"begin": 2824,
											"end": 2833,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2824,
											"end": 2839,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2834,
											"end": 2838,
											"name": "DUP8"
										},
										{
											"begin": 2824,
											"end": 2839,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2824,
											"end": 2839,
											"name": "AND"
										},
										{
											"begin": 2824,
											"end": 2839,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2824,
											"end": 2839,
											"name": "AND"
										},
										{
											"begin": 2824,
											"end": 2839,
											"name": "DUP2"
										},
										{
											"begin": 2824,
											"end": 2839,
											"name": "MSTORE"
										},
										{
											"begin": 2824,
											"end": 2839,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2824,
											"end": 2839,
											"name": "ADD"
										},
										{
											"begin": 2824,
											"end": 2839,
											"name": "SWAP1"
										},
										{
											"begin": 2824,
											"end": 2839,
											"name": "DUP2"
										},
										{
											"begin": 2824,
											"end": 2839,
											"name": "MSTORE"
										},
										{
											"begin": 2824,
											"end": 2839,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2824,
											"end": 2839,
											"name": "ADD"
										},
										{
											"begin": 2824,
											"end": 2839,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2824,
											"end": 2839,
											"name": "KECCAK256"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2840,
											"end": 2850,
											"name": "CALLER"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "AND"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "AND"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "DUP2"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "MSTORE"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "ADD"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "SWAP1"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "DUP2"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "MSTORE"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "ADD"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "KECCAK256"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "SLOAD"
										},
										{
											"begin": 2824,
											"end": 2855,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 2824,
											"end": 2855,
											"name": "SWAP1"
										},
										{
											"begin": 2824,
											"end": 2862,
											"name": "SWAP2"
										},
										{
											"begin": 2824,
											"end": 2862,
											"name": "SWAP1"
										},
										{
											"begin": 2824,
											"end": 2862,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2824,
											"end": 2862,
											"name": "AND"
										},
										{
											"begin": 2824,
											"end": 2862,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2824,
											"end": 2862,
											"name": "tag",
											"value": "163"
										},
										{
											"begin": 2824,
											"end": 2862,
											"name": "JUMPDEST"
										},
										{
											"begin": 2794,
											"end": 2803,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2794,
											"end": 2809,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2804,
											"end": 2808,
											"name": "DUP7"
										},
										{
											"begin": 2794,
											"end": 2809,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2794,
											"end": 2809,
											"name": "AND"
										},
										{
											"begin": 2794,
											"end": 2809,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2794,
											"end": 2809,
											"name": "AND"
										},
										{
											"begin": 2794,
											"end": 2809,
											"name": "DUP2"
										},
										{
											"begin": 2794,
											"end": 2809,
											"name": "MSTORE"
										},
										{
											"begin": 2794,
											"end": 2809,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2809,
											"name": "ADD"
										},
										{
											"begin": 2794,
											"end": 2809,
											"name": "SWAP1"
										},
										{
											"begin": 2794,
											"end": 2809,
											"name": "DUP2"
										},
										{
											"begin": 2794,
											"end": 2809,
											"name": "MSTORE"
										},
										{
											"begin": 2794,
											"end": 2809,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2809,
											"name": "ADD"
										},
										{
											"begin": 2794,
											"end": 2809,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2794,
											"end": 2809,
											"name": "KECCAK256"
										},
										{
											"begin": 2794,
											"end": 2821,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2810,
											"end": 2820,
											"name": "CALLER"
										},
										{
											"begin": 2794,
											"end": 2821,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2794,
											"end": 2821,
											"name": "AND"
										},
										{
											"begin": 2794,
											"end": 2821,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2794,
											"end": 2821,
											"name": "AND"
										},
										{
											"begin": 2794,
											"end": 2821,
											"name": "DUP2"
										},
										{
											"begin": 2794,
											"end": 2821,
											"name": "MSTORE"
										},
										{
											"begin": 2794,
											"end": 2821,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2821,
											"name": "ADD"
										},
										{
											"begin": 2794,
											"end": 2821,
											"name": "SWAP1"
										},
										{
											"begin": 2794,
											"end": 2821,
											"name": "DUP2"
										},
										{
											"begin": 2794,
											"end": 2821,
											"name": "MSTORE"
										},
										{
											"begin": 2794,
											"end": 2821,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2821,
											"name": "ADD"
										},
										{
											"begin": 2794,
											"end": 2821,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2794,
											"end": 2821,
											"name": "KECCAK256"
										},
										{
											"begin": 2794,
											"end": 2862,
											"name": "DUP2"
										},
										{
											"begin": 2794,
											"end": 2862,
											"name": "SWAP1"
										},
										{
											"begin": 2794,
											"end": 2862,
											"name": "SSTORE"
										},
										{
											"begin": 2794,
											"end": 2862,
											"name": "POP"
										},
										{
											"begin": 2732,
											"end": 2873,
											"name": "tag",
											"value": "162"
										},
										{
											"begin": 2732,
											"end": 2873,
											"name": "JUMPDEST"
										},
										{
											"begin": 2882,
											"end": 2908,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 2892,
											"end": 2896,
											"name": "DUP5"
										},
										{
											"begin": 2898,
											"end": 2900,
											"name": "DUP5"
										},
										{
											"begin": 2902,
											"end": 2907,
											"name": "DUP5"
										},
										{
											"begin": 2882,
											"end": 2891,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 2882,
											"end": 2908,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2882,
											"end": 2908,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 2882,
											"end": 2908,
											"name": "JUMPDEST"
										},
										{
											"begin": 2925,
											"end": 2929,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2918,
											"end": 2929,
											"name": "SWAP1"
										},
										{
											"begin": 2918,
											"end": 2929,
											"name": "POP"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "SWAP4"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "SWAP3"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "POP"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "POP"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "POP"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "JUMPDEST"
										},
										{
											"begin": 693,
											"end": 759,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "SHL"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "DUP2"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "JUMPDEST"
										},
										{
											"begin": 349,
											"end": 351,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "DUP2"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "JUMPDEST"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "SLOAD"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "DUP2"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2330,
											"end": 2534,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 2330,
											"end": 2534,
											"name": "JUMPDEST"
										},
										{
											"begin": 2425,
											"end": 2432,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 2425,
											"end": 2432,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2425,
											"end": 2432,
											"name": "SWAP1"
										},
										{
											"begin": 2425,
											"end": 2432,
											"name": "SLOAD"
										},
										{
											"begin": 2425,
											"end": 2432,
											"name": "SWAP1"
										},
										{
											"begin": 2425,
											"end": 2432,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2425,
											"end": 2432,
											"name": "EXP"
										},
										{
											"begin": 2425,
											"end": 2432,
											"name": "SWAP1"
										},
										{
											"begin": 2425,
											"end": 2432,
											"name": "DIV"
										},
										{
											"begin": 2425,
											"end": 2432,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2425,
											"end": 2432,
											"name": "AND"
										},
										{
											"begin": 2411,
											"end": 2432,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2411,
											"end": 2432,
											"name": "AND"
										},
										{
											"begin": 2411,
											"end": 2421,
											"name": "CALLER"
										},
										{
											"begin": 2411,
											"end": 2432,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2411,
											"end": 2432,
											"name": "AND"
										},
										{
											"begin": 2411,
											"end": 2432,
											"name": "EQ"
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "JUMPI"
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "MLOAD"
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "DUP2"
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "MSTORE"
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "ADD"
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "DUP1"
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "DUP1"
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "ADD"
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "DUP3"
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "DUP2"
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "SUB"
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "DUP3"
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "MSTORE"
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "DUP2"
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "MSTORE"
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "ADD"
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "DUP1"
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "PUSH",
											"value": "50616E63616B653A20464F5242494444454E0000000000000000000000000000"
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "DUP2"
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "MSTORE"
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "POP"
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "ADD"
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "SWAP2"
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "POP"
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "POP"
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "MLOAD"
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "DUP1"
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "SWAP2"
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "SUB"
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "SWAP1"
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "REVERT"
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "tag",
											"value": "167"
										},
										{
											"begin": 2403,
											"end": 2455,
											"name": "JUMPDEST"
										},
										{
											"begin": 2494,
											"end": 2501,
											"name": "DUP2"
										},
										{
											"begin": 2485,
											"end": 2491,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 2485,
											"end": 2491,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2485,
											"end": 2501,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2485,
											"end": 2501,
											"name": "EXP"
										},
										{
											"begin": 2485,
											"end": 2501,
											"name": "DUP2"
										},
										{
											"begin": 2485,
											"end": 2501,
											"name": "SLOAD"
										},
										{
											"begin": 2485,
											"end": 2501,
											"name": "DUP2"
										},
										{
											"begin": 2485,
											"end": 2501,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2485,
											"end": 2501,
											"name": "MUL"
										},
										{
											"begin": 2485,
											"end": 2501,
											"name": "NOT"
										},
										{
											"begin": 2485,
											"end": 2501,
											"name": "AND"
										},
										{
											"begin": 2485,
											"end": 2501,
											"name": "SWAP1"
										},
										{
											"begin": 2485,
											"end": 2501,
											"name": "DUP4"
										},
										{
											"begin": 2485,
											"end": 2501,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2485,
											"end": 2501,
											"name": "AND"
										},
										{
											"begin": 2485,
											"end": 2501,
											"name": "MUL"
										},
										{
											"begin": 2485,
											"end": 2501,
											"name": "OR"
										},
										{
											"begin": 2485,
											"end": 2501,
											"name": "SWAP1"
										},
										{
											"begin": 2485,
											"end": 2501,
											"name": "SSTORE"
										},
										{
											"begin": 2485,
											"end": 2501,
											"name": "POP"
										},
										{
											"begin": 2520,
											"end": 2527,
											"name": "DUP1"
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2511,
											"end": 2527,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2511,
											"end": 2527,
											"name": "EXP"
										},
										{
											"begin": 2511,
											"end": 2527,
											"name": "DUP2"
										},
										{
											"begin": 2511,
											"end": 2527,
											"name": "SLOAD"
										},
										{
											"begin": 2511,
											"end": 2527,
											"name": "DUP2"
										},
										{
											"begin": 2511,
											"end": 2527,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2511,
											"end": 2527,
											"name": "MUL"
										},
										{
											"begin": 2511,
											"end": 2527,
											"name": "NOT"
										},
										{
											"begin": 2511,
											"end": 2527,
											"name": "AND"
										},
										{
											"begin": 2511,
											"end": 2527,
											"name": "SWAP1"
										},
										{
											"begin": 2511,
											"end": 2527,
											"name": "DUP4"
										},
										{
											"begin": 2511,
											"end": 2527,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2511,
											"end": 2527,
											"name": "AND"
										},
										{
											"begin": 2511,
											"end": 2527,
											"name": "MUL"
										},
										{
											"begin": 2511,
											"end": 2527,
											"name": "OR"
										},
										{
											"begin": 2511,
											"end": 2527,
											"name": "SWAP1"
										},
										{
											"begin": 2511,
											"end": 2527,
											"name": "SSTORE"
										},
										{
											"begin": 2511,
											"end": 2527,
											"name": "POP"
										},
										{
											"begin": 2330,
											"end": 2534,
											"name": "POP"
										},
										{
											"begin": 2330,
											"end": 2534,
											"name": "POP"
										},
										{
											"begin": 2330,
											"end": 2534,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 954,
											"end": 986,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 954,
											"end": 986,
											"name": "JUMPDEST"
										},
										{
											"begin": 954,
											"end": 986,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 954,
											"end": 986,
											"name": "SLOAD"
										},
										{
											"begin": 954,
											"end": 986,
											"name": "DUP2"
										},
										{
											"begin": 954,
											"end": 986,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 992,
											"end": 1024,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 992,
											"end": 1024,
											"name": "JUMPDEST"
										},
										{
											"begin": 992,
											"end": 1024,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 992,
											"end": 1024,
											"name": "SLOAD"
										},
										{
											"begin": 992,
											"end": 1024,
											"name": "DUP2"
										},
										{
											"begin": 992,
											"end": 1024,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "JUMPDEST"
										},
										{
											"begin": 4537,
											"end": 4551,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1211,
											"end": 1212,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1199,
											"end": 1207,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1199,
											"end": 1207,
											"name": "SLOAD"
										},
										{
											"begin": 1199,
											"end": 1212,
											"name": "EQ"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "JUMPI"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "MLOAD"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "DUP2"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "MSTORE"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "ADD"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "DUP1"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "DUP1"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "ADD"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "DUP3"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "DUP2"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "SUB"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "DUP3"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "MSTORE"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "DUP2"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "MSTORE"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "ADD"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "DUP1"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "PUSH",
											"value": "50616E63616B653A204C4F434B45440000000000000000000000000000000000"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "DUP2"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "MSTORE"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "POP"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "ADD"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "SWAP2"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "POP"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "POP"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "MLOAD"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "DUP1"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "SWAP2"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "SUB"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "SWAP1"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "REVERT"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "JUMPDEST"
										},
										{
											"begin": 1253,
											"end": 1254,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1250,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1242,
											"end": 1254,
											"name": "DUP2"
										},
										{
											"begin": 1242,
											"end": 1254,
											"name": "SWAP1"
										},
										{
											"begin": 1242,
											"end": 1254,
											"name": "SSTORE"
										},
										{
											"begin": 1242,
											"end": 1254,
											"name": "POP"
										},
										{
											"begin": 4564,
											"end": 4581,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4583,
											"end": 4600,
											"name": "DUP1"
										},
										{
											"begin": 4605,
											"end": 4618,
											"name": "PUSH [tag]",
											"value": "171"
										},
										{
											"begin": 4605,
											"end": 4616,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 4605,
											"end": 4618,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4605,
											"end": 4618,
											"name": "tag",
											"value": "171"
										},
										{
											"begin": 4605,
											"end": 4618,
											"name": "JUMPDEST"
										},
										{
											"begin": 4563,
											"end": 4618,
											"name": "POP"
										},
										{
											"begin": 4563,
											"end": 4618,
											"name": "SWAP2"
										},
										{
											"begin": 4563,
											"end": 4618,
											"name": "POP"
										},
										{
											"begin": 4563,
											"end": 4618,
											"name": "SWAP2"
										},
										{
											"begin": 4563,
											"end": 4618,
											"name": "POP"
										},
										{
											"begin": 4643,
											"end": 4656,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4666,
											"end": 4672,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 4666,
											"end": 4672,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4666,
											"end": 4672,
											"name": "SWAP1"
										},
										{
											"begin": 4666,
											"end": 4672,
											"name": "SLOAD"
										},
										{
											"begin": 4666,
											"end": 4672,
											"name": "SWAP1"
										},
										{
											"begin": 4666,
											"end": 4672,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4666,
											"end": 4672,
											"name": "EXP"
										},
										{
											"begin": 4666,
											"end": 4672,
											"name": "SWAP1"
										},
										{
											"begin": 4666,
											"end": 4672,
											"name": "DIV"
										},
										{
											"begin": 4666,
											"end": 4672,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4666,
											"end": 4672,
											"name": "AND"
										},
										{
											"begin": 4659,
											"end": 4683,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4659,
											"end": 4683,
											"name": "AND"
										},
										{
											"begin": 4659,
											"end": 4683,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 4692,
											"end": 4696,
											"name": "ADDRESS"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "MLOAD"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "DUP3"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "AND"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "SHL"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "DUP2"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "MSTORE"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "ADD"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "DUP1"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "DUP3"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "AND"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "AND"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "DUP2"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "MSTORE"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "ADD"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "SWAP2"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "POP"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "POP"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "MLOAD"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "DUP1"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "DUP4"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "SUB"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "DUP2"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "DUP7"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "DUP1"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "172"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "POP"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "GAS"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "STATICCALL"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "173"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "POP"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "POP"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "POP"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "POP"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "MLOAD"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "174"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "DUP2"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "ADD"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "SWAP1"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "DUP1"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "DUP1"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "MLOAD"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "SWAP1"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "ADD"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "SWAP1"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "SWAP3"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "SWAP2"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "SWAP1"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "POP"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "POP"
										},
										{
											"begin": 4659,
											"end": 4698,
											"name": "POP"
										},
										{
											"begin": 4643,
											"end": 4698,
											"name": "SWAP1"
										},
										{
											"begin": 4643,
											"end": 4698,
											"name": "POP"
										},
										{
											"begin": 4708,
											"end": 4721,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4731,
											"end": 4737,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 4731,
											"end": 4737,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4731,
											"end": 4737,
											"name": "SWAP1"
										},
										{
											"begin": 4731,
											"end": 4737,
											"name": "SLOAD"
										},
										{
											"begin": 4731,
											"end": 4737,
											"name": "SWAP1"
										},
										{
											"begin": 4731,
											"end": 4737,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4731,
											"end": 4737,
											"name": "EXP"
										},
										{
											"begin": 4731,
											"end": 4737,
											"name": "SWAP1"
										},
										{
											"begin": 4731,
											"end": 4737,
											"name": "DIV"
										},
										{
											"begin": 4731,
											"end": 4737,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4731,
											"end": 4737,
											"name": "AND"
										},
										{
											"begin": 4724,
											"end": 4748,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4724,
											"end": 4748,
											"name": "AND"
										},
										{
											"begin": 4724,
											"end": 4748,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 4757,
											"end": 4761,
											"name": "ADDRESS"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "MLOAD"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "DUP3"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "AND"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "SHL"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "DUP2"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "MSTORE"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "ADD"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "DUP1"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "DUP3"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "AND"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "AND"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "DUP2"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "MSTORE"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "ADD"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "SWAP2"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "POP"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "POP"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "MLOAD"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "DUP1"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "DUP4"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "SUB"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "DUP2"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "DUP7"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "DUP1"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "175"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "POP"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "GAS"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "STATICCALL"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "176"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "176"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "POP"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "POP"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "POP"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "POP"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "MLOAD"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "177"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "DUP2"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "ADD"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "SWAP1"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "DUP1"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "DUP1"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "MLOAD"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "SWAP1"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "ADD"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "SWAP1"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "SWAP3"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "SWAP2"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "SWAP1"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "POP"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "POP"
										},
										{
											"begin": 4724,
											"end": 4763,
											"name": "POP"
										},
										{
											"begin": 4708,
											"end": 4763,
											"name": "SWAP1"
										},
										{
											"begin": 4708,
											"end": 4763,
											"name": "POP"
										},
										{
											"begin": 4773,
											"end": 4785,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4788,
											"end": 4811,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 4801,
											"end": 4810,
											"name": "DUP6"
										},
										{
											"begin": 4788,
											"end": 4811,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4788,
											"end": 4811,
											"name": "AND"
										},
										{
											"begin": 4788,
											"end": 4796,
											"name": "DUP5"
										},
										{
											"begin": 4788,
											"end": 4800,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 4788,
											"end": 4800,
											"name": "SWAP1"
										},
										{
											"begin": 4788,
											"end": 4811,
											"name": "SWAP2"
										},
										{
											"begin": 4788,
											"end": 4811,
											"name": "SWAP1"
										},
										{
											"begin": 4788,
											"end": 4811,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4788,
											"end": 4811,
											"name": "AND"
										},
										{
											"begin": 4788,
											"end": 4811,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4788,
											"end": 4811,
											"name": "tag",
											"value": "178"
										},
										{
											"begin": 4788,
											"end": 4811,
											"name": "JUMPDEST"
										},
										{
											"begin": 4773,
											"end": 4811,
											"name": "SWAP1"
										},
										{
											"begin": 4773,
											"end": 4811,
											"name": "POP"
										},
										{
											"begin": 4821,
											"end": 4833,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4836,
											"end": 4859,
											"name": "PUSH [tag]",
											"value": "179"
										},
										{
											"begin": 4849,
											"end": 4858,
											"name": "DUP6"
										},
										{
											"begin": 4836,
											"end": 4859,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4836,
											"end": 4859,
											"name": "AND"
										},
										{
											"begin": 4836,
											"end": 4844,
											"name": "DUP5"
										},
										{
											"begin": 4836,
											"end": 4848,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 4836,
											"end": 4848,
											"name": "SWAP1"
										},
										{
											"begin": 4836,
											"end": 4859,
											"name": "SWAP2"
										},
										{
											"begin": 4836,
											"end": 4859,
											"name": "SWAP1"
										},
										{
											"begin": 4836,
											"end": 4859,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4836,
											"end": 4859,
											"name": "AND"
										},
										{
											"begin": 4836,
											"end": 4859,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4836,
											"end": 4859,
											"name": "tag",
											"value": "179"
										},
										{
											"begin": 4836,
											"end": 4859,
											"name": "JUMPDEST"
										},
										{
											"begin": 4821,
											"end": 4859,
											"name": "SWAP1"
										},
										{
											"begin": 4821,
											"end": 4859,
											"name": "POP"
										},
										{
											"begin": 4870,
											"end": 4880,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4883,
											"end": 4913,
											"name": "PUSH [tag]",
											"value": "180"
										},
										{
											"begin": 4892,
											"end": 4901,
											"name": "DUP8"
										},
										{
											"begin": 4903,
											"end": 4912,
											"name": "DUP8"
										},
										{
											"begin": 4883,
											"end": 4891,
											"name": "PUSH [tag]",
											"value": "181"
										},
										{
											"begin": 4883,
											"end": 4913,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4883,
											"end": 4913,
											"name": "tag",
											"value": "180"
										},
										{
											"begin": 4883,
											"end": 4913,
											"name": "JUMPDEST"
										},
										{
											"begin": 4870,
											"end": 4913,
											"name": "SWAP1"
										},
										{
											"begin": 4870,
											"end": 4913,
											"name": "POP"
										},
										{
											"begin": 4923,
											"end": 4940,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4943,
											"end": 4954,
											"name": "DUP1"
										},
										{
											"begin": 4943,
											"end": 4954,
											"name": "SLOAD"
										},
										{
											"begin": 4923,
											"end": 4954,
											"name": "SWAP1"
										},
										{
											"begin": 4923,
											"end": 4954,
											"name": "POP"
										},
										{
											"begin": 5062,
											"end": 5063,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5046,
											"end": 5058,
											"name": "DUP2"
										},
										{
											"begin": 5046,
											"end": 5063,
											"name": "EQ"
										},
										{
											"begin": 5042,
											"end": 5389,
											"name": "ISZERO"
										},
										{
											"begin": 5042,
											"end": 5389,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 5042,
											"end": 5389,
											"name": "JUMPI"
										},
										{
											"begin": 5091,
											"end": 5145,
											"name": "PUSH [tag]",
											"value": "183"
										},
										{
											"begin": 476,
											"end": 481,
											"name": "PUSH",
											"value": "3E8"
										},
										{
											"begin": 5091,
											"end": 5122,
											"name": "PUSH [tag]",
											"value": "184"
										},
										{
											"begin": 5101,
											"end": 5121,
											"name": "PUSH [tag]",
											"value": "185"
										},
										{
											"begin": 5113,
											"end": 5120,
											"name": "DUP7"
										},
										{
											"begin": 5101,
											"end": 5108,
											"name": "DUP9"
										},
										{
											"begin": 5101,
											"end": 5112,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 5101,
											"end": 5112,
											"name": "SWAP1"
										},
										{
											"begin": 5101,
											"end": 5121,
											"name": "SWAP2"
										},
										{
											"begin": 5101,
											"end": 5121,
											"name": "SWAP1"
										},
										{
											"begin": 5101,
											"end": 5121,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5101,
											"end": 5121,
											"name": "AND"
										},
										{
											"begin": 5101,
											"end": 5121,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5101,
											"end": 5121,
											"name": "tag",
											"value": "185"
										},
										{
											"begin": 5101,
											"end": 5121,
											"name": "JUMPDEST"
										},
										{
											"begin": 5091,
											"end": 5100,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 5091,
											"end": 5122,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5091,
											"end": 5122,
											"name": "tag",
											"value": "184"
										},
										{
											"begin": 5091,
											"end": 5122,
											"name": "JUMPDEST"
										},
										{
											"begin": 5091,
											"end": 5126,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 5091,
											"end": 5126,
											"name": "SWAP1"
										},
										{
											"begin": 5091,
											"end": 5145,
											"name": "SWAP2"
										},
										{
											"begin": 5091,
											"end": 5145,
											"name": "SWAP1"
										},
										{
											"begin": 5091,
											"end": 5145,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5091,
											"end": 5145,
											"name": "AND"
										},
										{
											"begin": 5091,
											"end": 5145,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5091,
											"end": 5145,
											"name": "tag",
											"value": "183"
										},
										{
											"begin": 5091,
											"end": 5145,
											"name": "JUMPDEST"
										},
										{
											"begin": 5079,
											"end": 5145,
											"name": "SWAP9"
										},
										{
											"begin": 5079,
											"end": 5145,
											"name": "POP"
										},
										{
											"begin": 5158,
											"end": 5194,
											"name": "PUSH [tag]",
											"value": "187"
										},
										{
											"begin": 5172,
											"end": 5173,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 476,
											"end": 481,
											"name": "PUSH",
											"value": "3E8"
										},
										{
											"begin": 5158,
											"end": 5163,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 5158,
											"end": 5194,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5158,
											"end": 5194,
											"name": "tag",
											"value": "187"
										},
										{
											"begin": 5158,
											"end": 5194,
											"name": "JUMPDEST"
										},
										{
											"begin": 5042,
											"end": 5389,
											"name": "PUSH [tag]",
											"value": "189"
										},
										{
											"begin": 5042,
											"end": 5389,
											"name": "JUMP"
										},
										{
											"begin": 5042,
											"end": 5389,
											"name": "tag",
											"value": "182"
										},
										{
											"begin": 5042,
											"end": 5389,
											"name": "JUMPDEST"
										},
										{
											"begin": 5292,
											"end": 5378,
											"name": "PUSH [tag]",
											"value": "190"
										},
										{
											"begin": 5329,
											"end": 5338,
											"name": "DUP9"
										},
										{
											"begin": 5301,
											"end": 5338,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5301,
											"end": 5338,
											"name": "AND"
										},
										{
											"begin": 5301,
											"end": 5326,
											"name": "PUSH [tag]",
											"value": "191"
										},
										{
											"begin": 5313,
											"end": 5325,
											"name": "DUP4"
										},
										{
											"begin": 5301,
											"end": 5308,
											"name": "DUP8"
										},
										{
											"begin": 5301,
											"end": 5312,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 5301,
											"end": 5312,
											"name": "SWAP1"
										},
										{
											"begin": 5301,
											"end": 5326,
											"name": "SWAP2"
										},
										{
											"begin": 5301,
											"end": 5326,
											"name": "SWAP1"
										},
										{
											"begin": 5301,
											"end": 5326,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5301,
											"end": 5326,
											"name": "AND"
										},
										{
											"begin": 5301,
											"end": 5326,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5301,
											"end": 5326,
											"name": "tag",
											"value": "191"
										},
										{
											"begin": 5301,
											"end": 5326,
											"name": "JUMPDEST"
										},
										{
											"begin": 5301,
											"end": 5338,
											"name": "DUP2"
										},
										{
											"begin": 5301,
											"end": 5338,
											"name": "PUSH [tag]",
											"value": "192"
										},
										{
											"begin": 5301,
											"end": 5338,
											"name": "JUMPI"
										},
										{
											"begin": 5301,
											"end": 5338,
											"name": "INVALID"
										},
										{
											"begin": 5301,
											"end": 5338,
											"name": "tag",
											"value": "192"
										},
										{
											"begin": 5301,
											"end": 5338,
											"name": "JUMPDEST"
										},
										{
											"begin": 5301,
											"end": 5338,
											"name": "DIV"
										},
										{
											"begin": 5368,
											"end": 5377,
											"name": "DUP9"
										},
										{
											"begin": 5340,
											"end": 5377,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5340,
											"end": 5377,
											"name": "AND"
										},
										{
											"begin": 5340,
											"end": 5365,
											"name": "PUSH [tag]",
											"value": "193"
										},
										{
											"begin": 5352,
											"end": 5364,
											"name": "DUP5"
										},
										{
											"begin": 5340,
											"end": 5347,
											"name": "DUP8"
										},
										{
											"begin": 5340,
											"end": 5351,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 5340,
											"end": 5351,
											"name": "SWAP1"
										},
										{
											"begin": 5340,
											"end": 5365,
											"name": "SWAP2"
										},
										{
											"begin": 5340,
											"end": 5365,
											"name": "SWAP1"
										},
										{
											"begin": 5340,
											"end": 5365,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5340,
											"end": 5365,
											"name": "AND"
										},
										{
											"begin": 5340,
											"end": 5365,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5340,
											"end": 5365,
											"name": "tag",
											"value": "193"
										},
										{
											"begin": 5340,
											"end": 5365,
											"name": "JUMPDEST"
										},
										{
											"begin": 5340,
											"end": 5377,
											"name": "DUP2"
										},
										{
											"begin": 5340,
											"end": 5377,
											"name": "PUSH [tag]",
											"value": "194"
										},
										{
											"begin": 5340,
											"end": 5377,
											"name": "JUMPI"
										},
										{
											"begin": 5340,
											"end": 5377,
											"name": "INVALID"
										},
										{
											"begin": 5340,
											"end": 5377,
											"name": "tag",
											"value": "194"
										},
										{
											"begin": 5340,
											"end": 5377,
											"name": "JUMPDEST"
										},
										{
											"begin": 5340,
											"end": 5377,
											"name": "DIV"
										},
										{
											"begin": 5292,
											"end": 5300,
											"name": "PUSH [tag]",
											"value": "195"
										},
										{
											"begin": 5292,
											"end": 5378,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5292,
											"end": 5378,
											"name": "tag",
											"value": "190"
										},
										{
											"begin": 5292,
											"end": 5378,
											"name": "JUMPDEST"
										},
										{
											"begin": 5280,
											"end": 5378,
											"name": "SWAP9"
										},
										{
											"begin": 5280,
											"end": 5378,
											"name": "POP"
										},
										{
											"begin": 5042,
											"end": 5389,
											"name": "tag",
											"value": "189"
										},
										{
											"begin": 5042,
											"end": 5389,
											"name": "JUMPDEST"
										},
										{
											"begin": 5418,
											"end": 5419,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5406,
											"end": 5415,
											"name": "DUP10"
										},
										{
											"begin": 5406,
											"end": 5419,
											"name": "GT"
										},
										{
											"begin": 5398,
											"end": 5462,
											"name": "PUSH [tag]",
											"value": "196"
										},
										{
											"begin": 5398,
											"end": 5462,
											"name": "JUMPI"
										},
										{
											"begin": 5398,
											"end": 5462,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5398,
											"end": 5462,
											"name": "MLOAD"
										},
										{
											"begin": 5398,
											"end": 5462,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5398,
											"end": 5462,
											"name": "DUP2"
										},
										{
											"begin": 5398,
											"end": 5462,
											"name": "MSTORE"
										},
										{
											"begin": 5398,
											"end": 5462,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5398,
											"end": 5462,
											"name": "ADD"
										},
										{
											"begin": 5398,
											"end": 5462,
											"name": "DUP1"
										},
										{
											"begin": 5398,
											"end": 5462,
											"name": "DUP1"
										},
										{
											"begin": 5398,
											"end": 5462,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5398,
											"end": 5462,
											"name": "ADD"
										},
										{
											"begin": 5398,
											"end": 5462,
											"name": "DUP3"
										},
										{
											"begin": 5398,
											"end": 5462,
											"name": "DUP2"
										},
										{
											"begin": 5398,
											"end": 5462,
											"name": "SUB"
										},
										{
											"begin": 5398,
											"end": 5462,
											"name": "DUP3"
										},
										{
											"begin": 5398,
											"end": 5462,
											"name": "MSTORE"
										},
										{
											"begin": 5398,
											"end": 5462,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 5398,
											"end": 5462,
											"name": "DUP2"
										},
										{
											"begin": 5398,
											"end": 5462,
											"name": "MSTORE"
										},
										{
											"begin": 5398,
											"end": 5462,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5398,
											"end": 5462,
											"name": "ADD"
										},
										{
											"begin": 5398,
											"end": 5462,
											"name": "DUP1"
										},
										{
											"begin": 5398,
											"end": 5462,
											"name": "PUSH data",
											"value": "EF633320352A650C1D75752F13E6C73D8D8F7F26A5596A6D026C1BF50D2F7713"
										},
										{
											"begin": 5398,
											"end": 5462,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 5398,
											"end": 5462,
											"name": "SWAP2"
										},
										{
											"begin": 5398,
											"end": 5462,
											"name": "CODECOPY"
										},
										{
											"begin": 5398,
											"end": 5462,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5398,
											"end": 5462,
											"name": "ADD"
										},
										{
											"begin": 5398,
											"end": 5462,
											"name": "SWAP2"
										},
										{
											"begin": 5398,
											"end": 5462,
											"name": "POP"
										},
										{
											"begin": 5398,
											"end": 5462,
											"name": "POP"
										},
										{
											"begin": 5398,
											"end": 5462,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5398,
											"end": 5462,
											"name": "MLOAD"
										},
										{
											"begin": 5398,
											"end": 5462,
											"name": "DUP1"
										},
										{
											"begin": 5398,
											"end": 5462,
											"name": "SWAP2"
										},
										{
											"begin": 5398,
											"end": 5462,
											"name": "SUB"
										},
										{
											"begin": 5398,
											"end": 5462,
											"name": "SWAP1"
										},
										{
											"begin": 5398,
											"end": 5462,
											"name": "REVERT"
										},
										{
											"begin": 5398,
											"end": 5462,
											"name": "tag",
											"value": "196"
										},
										{
											"begin": 5398,
											"end": 5462,
											"name": "JUMPDEST"
										},
										{
											"begin": 5472,
											"end": 5492,
											"name": "PUSH [tag]",
											"value": "197"
										},
										{
											"begin": 5478,
											"end": 5480,
											"name": "DUP11"
										},
										{
											"begin": 5482,
											"end": 5491,
											"name": "DUP11"
										},
										{
											"begin": 5472,
											"end": 5477,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 5472,
											"end": 5492,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5472,
											"end": 5492,
											"name": "tag",
											"value": "197"
										},
										{
											"begin": 5472,
											"end": 5492,
											"name": "JUMPDEST"
										},
										{
											"begin": 5503,
											"end": 5552,
											"name": "PUSH [tag]",
											"value": "198"
										},
										{
											"begin": 5511,
											"end": 5519,
											"name": "DUP7"
										},
										{
											"begin": 5521,
											"end": 5529,
											"name": "DUP7"
										},
										{
											"begin": 5531,
											"end": 5540,
											"name": "DUP11"
										},
										{
											"begin": 5542,
											"end": 5551,
											"name": "DUP11"
										},
										{
											"begin": 5503,
											"end": 5510,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 5503,
											"end": 5552,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5503,
											"end": 5552,
											"name": "tag",
											"value": "198"
										},
										{
											"begin": 5503,
											"end": 5552,
											"name": "JUMPDEST"
										},
										{
											"begin": 5566,
											"end": 5571,
											"name": "DUP2"
										},
										{
											"begin": 5562,
											"end": 5609,
											"name": "ISZERO"
										},
										{
											"begin": 5562,
											"end": 5609,
											"name": "PUSH [tag]",
											"value": "199"
										},
										{
											"begin": 5562,
											"end": 5609,
											"name": "JUMPI"
										},
										{
											"begin": 5581,
											"end": 5609,
											"name": "PUSH [tag]",
											"value": "200"
										},
										{
											"begin": 5600,
											"end": 5608,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 5600,
											"end": 5608,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 5600,
											"end": 5608,
											"name": "SWAP1"
										},
										{
											"begin": 5600,
											"end": 5608,
											"name": "SLOAD"
										},
										{
											"begin": 5600,
											"end": 5608,
											"name": "SWAP1"
										},
										{
											"begin": 5600,
											"end": 5608,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5600,
											"end": 5608,
											"name": "EXP"
										},
										{
											"begin": 5600,
											"end": 5608,
											"name": "SWAP1"
										},
										{
											"begin": 5600,
											"end": 5608,
											"name": "DIV"
										},
										{
											"begin": 5600,
											"end": 5608,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5600,
											"end": 5608,
											"name": "AND"
										},
										{
											"begin": 5581,
											"end": 5609,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5581,
											"end": 5609,
											"name": "AND"
										},
										{
											"begin": 5586,
											"end": 5594,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 5586,
											"end": 5594,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5586,
											"end": 5594,
											"name": "SWAP1"
										},
										{
											"begin": 5586,
											"end": 5594,
											"name": "SLOAD"
										},
										{
											"begin": 5586,
											"end": 5594,
											"name": "SWAP1"
										},
										{
											"begin": 5586,
											"end": 5594,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5586,
											"end": 5594,
											"name": "EXP"
										},
										{
											"begin": 5586,
											"end": 5594,
											"name": "SWAP1"
										},
										{
											"begin": 5586,
											"end": 5594,
											"name": "DIV"
										},
										{
											"begin": 5586,
											"end": 5594,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5586,
											"end": 5594,
											"name": "AND"
										},
										{
											"begin": 5581,
											"end": 5595,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5581,
											"end": 5595,
											"name": "AND"
										},
										{
											"begin": 5581,
											"end": 5599,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 5581,
											"end": 5599,
											"name": "SWAP1"
										},
										{
											"begin": 5581,
											"end": 5609,
											"name": "SWAP2"
										},
										{
											"begin": 5581,
											"end": 5609,
											"name": "SWAP1"
										},
										{
											"begin": 5581,
											"end": 5609,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5581,
											"end": 5609,
											"name": "AND"
										},
										{
											"begin": 5581,
											"end": 5609,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5581,
											"end": 5609,
											"name": "tag",
											"value": "200"
										},
										{
											"begin": 5581,
											"end": 5609,
											"name": "JUMPDEST"
										},
										{
											"begin": 5573,
											"end": 5578,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 5573,
											"end": 5609,
											"name": "DUP2"
										},
										{
											"begin": 5573,
											"end": 5609,
											"name": "SWAP1"
										},
										{
											"begin": 5573,
											"end": 5609,
											"name": "SSTORE"
										},
										{
											"begin": 5573,
											"end": 5609,
											"name": "POP"
										},
										{
											"begin": 5562,
											"end": 5609,
											"name": "tag",
											"value": "199"
										},
										{
											"begin": 5562,
											"end": 5609,
											"name": "JUMPDEST"
										},
										{
											"begin": 5669,
											"end": 5679,
											"name": "CALLER"
										},
										{
											"begin": 5664,
											"end": 5698,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5664,
											"end": 5698,
											"name": "AND"
										},
										{
											"begin": 5664,
											"end": 5698,
											"name": "PUSH",
											"value": "4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F"
										},
										{
											"begin": 5681,
											"end": 5688,
											"name": "DUP6"
										},
										{
											"begin": 5690,
											"end": 5697,
											"name": "DUP6"
										},
										{
											"begin": 5664,
											"end": 5698,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5664,
											"end": 5698,
											"name": "MLOAD"
										},
										{
											"begin": 5664,
											"end": 5698,
											"name": "DUP1"
										},
										{
											"begin": 5664,
											"end": 5698,
											"name": "DUP4"
										},
										{
											"begin": 5664,
											"end": 5698,
											"name": "DUP2"
										},
										{
											"begin": 5664,
											"end": 5698,
											"name": "MSTORE"
										},
										{
											"begin": 5664,
											"end": 5698,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5664,
											"end": 5698,
											"name": "ADD"
										},
										{
											"begin": 5664,
											"end": 5698,
											"name": "DUP3"
										},
										{
											"begin": 5664,
											"end": 5698,
											"name": "DUP2"
										},
										{
											"begin": 5664,
											"end": 5698,
											"name": "MSTORE"
										},
										{
											"begin": 5664,
											"end": 5698,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5664,
											"end": 5698,
											"name": "ADD"
										},
										{
											"begin": 5664,
											"end": 5698,
											"name": "SWAP3"
										},
										{
											"begin": 5664,
											"end": 5698,
											"name": "POP"
										},
										{
											"begin": 5664,
											"end": 5698,
											"name": "POP"
										},
										{
											"begin": 5664,
											"end": 5698,
											"name": "POP"
										},
										{
											"begin": 5664,
											"end": 5698,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5664,
											"end": 5698,
											"name": "MLOAD"
										},
										{
											"begin": 5664,
											"end": 5698,
											"name": "DUP1"
										},
										{
											"begin": 5664,
											"end": 5698,
											"name": "SWAP2"
										},
										{
											"begin": 5664,
											"end": 5698,
											"name": "SUB"
										},
										{
											"begin": 5664,
											"end": 5698,
											"name": "SWAP1"
										},
										{
											"begin": 5664,
											"end": 5698,
											"name": "LOG2"
										},
										{
											"begin": 1264,
											"end": 1265,
											"name": "POP"
										},
										{
											"begin": 1264,
											"end": 1265,
											"name": "POP"
										},
										{
											"begin": 1264,
											"end": 1265,
											"name": "POP"
										},
										{
											"begin": 1264,
											"end": 1265,
											"name": "POP"
										},
										{
											"begin": 1264,
											"end": 1265,
											"name": "POP"
										},
										{
											"begin": 1264,
											"end": 1265,
											"name": "POP"
										},
										{
											"begin": 1264,
											"end": 1265,
											"name": "POP"
										},
										{
											"begin": 1264,
											"end": 1265,
											"name": "POP"
										},
										{
											"begin": 1286,
											"end": 1287,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1275,
											"end": 1283,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "DUP2"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "SWAP1"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "SSTORE"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "POP"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "SWAP2"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "SWAP1"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "POP"
										},
										{
											"begin": 4488,
											"end": 5705,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "JUMPDEST"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "MSTORE"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "DUP1"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "MSTORE"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "KECCAK256"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "SWAP2"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "POP"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "SWAP1"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "POP"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "SLOAD"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "DUP2"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1030,
											"end": 1047,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 1030,
											"end": 1047,
											"name": "JUMPDEST"
										},
										{
											"begin": 1030,
											"end": 1047,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 1030,
											"end": 1047,
											"name": "SLOAD"
										},
										{
											"begin": 1030,
											"end": 1047,
											"name": "DUP2"
										},
										{
											"begin": 1030,
											"end": 1047,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "JUMPDEST"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "MSTORE"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "DUP1"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "MSTORE"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "KECCAK256"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "SWAP2"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "POP"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "SWAP1"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "POP"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "SLOAD"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "DUP2"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "JUMPDEST"
										},
										{
											"begin": 5863,
											"end": 5875,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5877,
											"end": 5889,
											"name": "DUP1"
										},
										{
											"begin": 1211,
											"end": 1212,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1199,
											"end": 1207,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1199,
											"end": 1207,
											"name": "SLOAD"
										},
										{
											"begin": 1199,
											"end": 1212,
											"name": "EQ"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "PUSH [tag]",
											"value": "202"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "JUMPI"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "MLOAD"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "DUP2"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "MSTORE"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "ADD"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "DUP1"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "DUP1"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "ADD"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "DUP3"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "DUP2"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "SUB"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "DUP3"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "MSTORE"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "DUP2"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "MSTORE"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "ADD"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "DUP1"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "PUSH",
											"value": "50616E63616B653A204C4F434B45440000000000000000000000000000000000"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "DUP2"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "MSTORE"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "POP"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "ADD"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "SWAP2"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "POP"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "POP"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "MLOAD"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "DUP1"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "SWAP2"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "SUB"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "SWAP1"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "REVERT"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "tag",
											"value": "202"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "JUMPDEST"
										},
										{
											"begin": 1253,
											"end": 1254,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1250,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1242,
											"end": 1254,
											"name": "DUP2"
										},
										{
											"begin": 1242,
											"end": 1254,
											"name": "SWAP1"
										},
										{
											"begin": 1242,
											"end": 1254,
											"name": "SSTORE"
										},
										{
											"begin": 1242,
											"end": 1254,
											"name": "POP"
										},
										{
											"begin": 5902,
											"end": 5919,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5921,
											"end": 5938,
											"name": "DUP1"
										},
										{
											"begin": 5943,
											"end": 5956,
											"name": "PUSH [tag]",
											"value": "204"
										},
										{
											"begin": 5943,
											"end": 5954,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 5943,
											"end": 5956,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5943,
											"end": 5956,
											"name": "tag",
											"value": "204"
										},
										{
											"begin": 5943,
											"end": 5956,
											"name": "JUMPDEST"
										},
										{
											"begin": 5901,
											"end": 5956,
											"name": "POP"
										},
										{
											"begin": 5901,
											"end": 5956,
											"name": "SWAP2"
										},
										{
											"begin": 5901,
											"end": 5956,
											"name": "POP"
										},
										{
											"begin": 5901,
											"end": 5956,
											"name": "SWAP2"
										},
										{
											"begin": 5901,
											"end": 5956,
											"name": "POP"
										},
										{
											"begin": 5981,
											"end": 5996,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5999,
											"end": 6005,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 5999,
											"end": 6005,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5999,
											"end": 6005,
											"name": "SWAP1"
										},
										{
											"begin": 5999,
											"end": 6005,
											"name": "SLOAD"
										},
										{
											"begin": 5999,
											"end": 6005,
											"name": "SWAP1"
										},
										{
											"begin": 5999,
											"end": 6005,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5999,
											"end": 6005,
											"name": "EXP"
										},
										{
											"begin": 5999,
											"end": 6005,
											"name": "SWAP1"
										},
										{
											"begin": 5999,
											"end": 6005,
											"name": "DIV"
										},
										{
											"begin": 5999,
											"end": 6005,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5999,
											"end": 6005,
											"name": "AND"
										},
										{
											"begin": 5981,
											"end": 6005,
											"name": "SWAP1"
										},
										{
											"begin": 5981,
											"end": 6005,
											"name": "POP"
										},
										{
											"begin": 6061,
											"end": 6076,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6079,
											"end": 6085,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 6079,
											"end": 6085,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6079,
											"end": 6085,
											"name": "SWAP1"
										},
										{
											"begin": 6079,
											"end": 6085,
											"name": "SLOAD"
										},
										{
											"begin": 6079,
											"end": 6085,
											"name": "SWAP1"
										},
										{
											"begin": 6079,
											"end": 6085,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 6079,
											"end": 6085,
											"name": "EXP"
										},
										{
											"begin": 6079,
											"end": 6085,
											"name": "SWAP1"
										},
										{
											"begin": 6079,
											"end": 6085,
											"name": "DIV"
										},
										{
											"begin": 6079,
											"end": 6085,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6079,
											"end": 6085,
											"name": "AND"
										},
										{
											"begin": 6061,
											"end": 6085,
											"name": "SWAP1"
										},
										{
											"begin": 6061,
											"end": 6085,
											"name": "POP"
										},
										{
											"begin": 6141,
											"end": 6154,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6164,
											"end": 6171,
											"name": "DUP3"
										},
										{
											"begin": 6157,
											"end": 6182,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6157,
											"end": 6182,
											"name": "AND"
										},
										{
											"begin": 6157,
											"end": 6182,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 6191,
											"end": 6195,
											"name": "ADDRESS"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "MLOAD"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "DUP3"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "AND"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "SHL"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "DUP2"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "MSTORE"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "ADD"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "DUP1"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "DUP3"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "AND"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "AND"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "DUP2"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "MSTORE"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "ADD"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "SWAP2"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "POP"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "POP"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "MLOAD"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "DUP1"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "DUP4"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "SUB"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "DUP2"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "DUP7"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "DUP1"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "205"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "205"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "POP"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "GAS"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "STATICCALL"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "206"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "206"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "POP"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "POP"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "POP"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "POP"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "MLOAD"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "207"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "207"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "DUP2"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "ADD"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "SWAP1"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "DUP1"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "DUP1"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "MLOAD"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "SWAP1"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "ADD"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "SWAP1"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "SWAP3"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "SWAP2"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "SWAP1"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "POP"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "POP"
										},
										{
											"begin": 6157,
											"end": 6197,
											"name": "POP"
										},
										{
											"begin": 6141,
											"end": 6197,
											"name": "SWAP1"
										},
										{
											"begin": 6141,
											"end": 6197,
											"name": "POP"
										},
										{
											"begin": 6207,
											"end": 6220,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6230,
											"end": 6237,
											"name": "DUP3"
										},
										{
											"begin": 6223,
											"end": 6248,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6223,
											"end": 6248,
											"name": "AND"
										},
										{
											"begin": 6223,
											"end": 6248,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 6257,
											"end": 6261,
											"name": "ADDRESS"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "MLOAD"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "DUP3"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "AND"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "SHL"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "DUP2"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "MSTORE"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "ADD"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "DUP1"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "DUP3"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "AND"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "AND"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "DUP2"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "MSTORE"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "ADD"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "SWAP2"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "POP"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "POP"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "MLOAD"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "DUP1"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "DUP4"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "SUB"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "DUP2"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "DUP7"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "DUP1"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "208"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "208"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "POP"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "GAS"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "STATICCALL"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "209"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "209"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "POP"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "POP"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "POP"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "POP"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "MLOAD"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "210"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "210"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "DUP2"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "ADD"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "SWAP1"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "DUP1"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "DUP1"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "MLOAD"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "SWAP1"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "ADD"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "SWAP1"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "SWAP3"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "SWAP2"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "SWAP1"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "POP"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "POP"
										},
										{
											"begin": 6223,
											"end": 6263,
											"name": "POP"
										},
										{
											"begin": 6207,
											"end": 6263,
											"name": "SWAP1"
										},
										{
											"begin": 6207,
											"end": 6263,
											"name": "POP"
										},
										{
											"begin": 6273,
											"end": 6287,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6290,
											"end": 6299,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6290,
											"end": 6314,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6308,
											"end": 6312,
											"name": "ADDRESS"
										},
										{
											"begin": 6290,
											"end": 6314,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6290,
											"end": 6314,
											"name": "AND"
										},
										{
											"begin": 6290,
											"end": 6314,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6290,
											"end": 6314,
											"name": "AND"
										},
										{
											"begin": 6290,
											"end": 6314,
											"name": "DUP2"
										},
										{
											"begin": 6290,
											"end": 6314,
											"name": "MSTORE"
										},
										{
											"begin": 6290,
											"end": 6314,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6290,
											"end": 6314,
											"name": "ADD"
										},
										{
											"begin": 6290,
											"end": 6314,
											"name": "SWAP1"
										},
										{
											"begin": 6290,
											"end": 6314,
											"name": "DUP2"
										},
										{
											"begin": 6290,
											"end": 6314,
											"name": "MSTORE"
										},
										{
											"begin": 6290,
											"end": 6314,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6290,
											"end": 6314,
											"name": "ADD"
										},
										{
											"begin": 6290,
											"end": 6314,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6290,
											"end": 6314,
											"name": "KECCAK256"
										},
										{
											"begin": 6290,
											"end": 6314,
											"name": "SLOAD"
										},
										{
											"begin": 6273,
											"end": 6314,
											"name": "SWAP1"
										},
										{
											"begin": 6273,
											"end": 6314,
											"name": "POP"
										},
										{
											"begin": 6325,
											"end": 6335,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6338,
											"end": 6368,
											"name": "PUSH [tag]",
											"value": "211"
										},
										{
											"begin": 6347,
											"end": 6356,
											"name": "DUP9"
										},
										{
											"begin": 6358,
											"end": 6367,
											"name": "DUP9"
										},
										{
											"begin": 6338,
											"end": 6346,
											"name": "PUSH [tag]",
											"value": "181"
										},
										{
											"begin": 6338,
											"end": 6368,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6338,
											"end": 6368,
											"name": "tag",
											"value": "211"
										},
										{
											"begin": 6338,
											"end": 6368,
											"name": "JUMPDEST"
										},
										{
											"begin": 6325,
											"end": 6368,
											"name": "SWAP1"
										},
										{
											"begin": 6325,
											"end": 6368,
											"name": "POP"
										},
										{
											"begin": 6378,
											"end": 6395,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6398,
											"end": 6409,
											"name": "DUP1"
										},
										{
											"begin": 6398,
											"end": 6409,
											"name": "SLOAD"
										},
										{
											"begin": 6378,
											"end": 6409,
											"name": "SWAP1"
										},
										{
											"begin": 6378,
											"end": 6409,
											"name": "POP"
										},
										{
											"begin": 6533,
											"end": 6545,
											"name": "DUP1"
										},
										{
											"begin": 6507,
											"end": 6530,
											"name": "PUSH [tag]",
											"value": "212"
										},
										{
											"begin": 6521,
											"end": 6529,
											"name": "DUP7"
										},
										{
											"begin": 6507,
											"end": 6516,
											"name": "DUP6"
										},
										{
											"begin": 6507,
											"end": 6520,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 6507,
											"end": 6520,
											"name": "SWAP1"
										},
										{
											"begin": 6507,
											"end": 6530,
											"name": "SWAP2"
										},
										{
											"begin": 6507,
											"end": 6530,
											"name": "SWAP1"
										},
										{
											"begin": 6507,
											"end": 6530,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6507,
											"end": 6530,
											"name": "AND"
										},
										{
											"begin": 6507,
											"end": 6530,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6507,
											"end": 6530,
											"name": "tag",
											"value": "212"
										},
										{
											"begin": 6507,
											"end": 6530,
											"name": "JUMPDEST"
										},
										{
											"begin": 6507,
											"end": 6545,
											"name": "DUP2"
										},
										{
											"begin": 6507,
											"end": 6545,
											"name": "PUSH [tag]",
											"value": "213"
										},
										{
											"begin": 6507,
											"end": 6545,
											"name": "JUMPI"
										},
										{
											"begin": 6507,
											"end": 6545,
											"name": "INVALID"
										},
										{
											"begin": 6507,
											"end": 6545,
											"name": "tag",
											"value": "213"
										},
										{
											"begin": 6507,
											"end": 6545,
											"name": "JUMPDEST"
										},
										{
											"begin": 6507,
											"end": 6545,
											"name": "DIV"
										},
										{
											"begin": 6497,
											"end": 6545,
											"name": "SWAP11"
										},
										{
											"begin": 6497,
											"end": 6545,
											"name": "POP"
										},
										{
											"begin": 6639,
											"end": 6651,
											"name": "DUP1"
										},
										{
											"begin": 6613,
											"end": 6636,
											"name": "PUSH [tag]",
											"value": "214"
										},
										{
											"begin": 6627,
											"end": 6635,
											"name": "DUP6"
										},
										{
											"begin": 6613,
											"end": 6622,
											"name": "DUP6"
										},
										{
											"begin": 6613,
											"end": 6626,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 6613,
											"end": 6626,
											"name": "SWAP1"
										},
										{
											"begin": 6613,
											"end": 6636,
											"name": "SWAP2"
										},
										{
											"begin": 6613,
											"end": 6636,
											"name": "SWAP1"
										},
										{
											"begin": 6613,
											"end": 6636,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6613,
											"end": 6636,
											"name": "AND"
										},
										{
											"begin": 6613,
											"end": 6636,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6613,
											"end": 6636,
											"name": "tag",
											"value": "214"
										},
										{
											"begin": 6613,
											"end": 6636,
											"name": "JUMPDEST"
										},
										{
											"begin": 6613,
											"end": 6651,
											"name": "DUP2"
										},
										{
											"begin": 6613,
											"end": 6651,
											"name": "PUSH [tag]",
											"value": "215"
										},
										{
											"begin": 6613,
											"end": 6651,
											"name": "JUMPI"
										},
										{
											"begin": 6613,
											"end": 6651,
											"name": "INVALID"
										},
										{
											"begin": 6613,
											"end": 6651,
											"name": "tag",
											"value": "215"
										},
										{
											"begin": 6613,
											"end": 6651,
											"name": "JUMPDEST"
										},
										{
											"begin": 6613,
											"end": 6651,
											"name": "DIV"
										},
										{
											"begin": 6603,
											"end": 6651,
											"name": "SWAP10"
										},
										{
											"begin": 6603,
											"end": 6651,
											"name": "POP"
										},
										{
											"begin": 6727,
											"end": 6728,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6717,
											"end": 6724,
											"name": "DUP12"
										},
										{
											"begin": 6717,
											"end": 6728,
											"name": "GT"
										},
										{
											"begin": 6717,
											"end": 6743,
											"name": "DUP1"
										},
										{
											"begin": 6717,
											"end": 6743,
											"name": "ISZERO"
										},
										{
											"begin": 6717,
											"end": 6743,
											"name": "PUSH [tag]",
											"value": "216"
										},
										{
											"begin": 6717,
											"end": 6743,
											"name": "JUMPI"
										},
										{
											"begin": 6717,
											"end": 6743,
											"name": "POP"
										},
										{
											"begin": 6742,
											"end": 6743,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6732,
											"end": 6739,
											"name": "DUP11"
										},
										{
											"begin": 6732,
											"end": 6743,
											"name": "GT"
										},
										{
											"begin": 6717,
											"end": 6743,
											"name": "tag",
											"value": "216"
										},
										{
											"begin": 6717,
											"end": 6743,
											"name": "JUMPDEST"
										},
										{
											"begin": 6709,
											"end": 6786,
											"name": "PUSH [tag]",
											"value": "217"
										},
										{
											"begin": 6709,
											"end": 6786,
											"name": "JUMPI"
										},
										{
											"begin": 6709,
											"end": 6786,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6709,
											"end": 6786,
											"name": "MLOAD"
										},
										{
											"begin": 6709,
											"end": 6786,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6709,
											"end": 6786,
											"name": "DUP2"
										},
										{
											"begin": 6709,
											"end": 6786,
											"name": "MSTORE"
										},
										{
											"begin": 6709,
											"end": 6786,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6709,
											"end": 6786,
											"name": "ADD"
										},
										{
											"begin": 6709,
											"end": 6786,
											"name": "DUP1"
										},
										{
											"begin": 6709,
											"end": 6786,
											"name": "DUP1"
										},
										{
											"begin": 6709,
											"end": 6786,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6709,
											"end": 6786,
											"name": "ADD"
										},
										{
											"begin": 6709,
											"end": 6786,
											"name": "DUP3"
										},
										{
											"begin": 6709,
											"end": 6786,
											"name": "DUP2"
										},
										{
											"begin": 6709,
											"end": 6786,
											"name": "SUB"
										},
										{
											"begin": 6709,
											"end": 6786,
											"name": "DUP3"
										},
										{
											"begin": 6709,
											"end": 6786,
											"name": "MSTORE"
										},
										{
											"begin": 6709,
											"end": 6786,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 6709,
											"end": 6786,
											"name": "DUP2"
										},
										{
											"begin": 6709,
											"end": 6786,
											"name": "MSTORE"
										},
										{
											"begin": 6709,
											"end": 6786,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6709,
											"end": 6786,
											"name": "ADD"
										},
										{
											"begin": 6709,
											"end": 6786,
											"name": "DUP1"
										},
										{
											"begin": 6709,
											"end": 6786,
											"name": "PUSH data",
											"value": "6C050B0A8D3F2D18D11271EE0A551B7748437B8FA9A6165C561190D34A2947D6"
										},
										{
											"begin": 6709,
											"end": 6786,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 6709,
											"end": 6786,
											"name": "SWAP2"
										},
										{
											"begin": 6709,
											"end": 6786,
											"name": "CODECOPY"
										},
										{
											"begin": 6709,
											"end": 6786,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6709,
											"end": 6786,
											"name": "ADD"
										},
										{
											"begin": 6709,
											"end": 6786,
											"name": "SWAP2"
										},
										{
											"begin": 6709,
											"end": 6786,
											"name": "POP"
										},
										{
											"begin": 6709,
											"end": 6786,
											"name": "POP"
										},
										{
											"begin": 6709,
											"end": 6786,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6709,
											"end": 6786,
											"name": "MLOAD"
										},
										{
											"begin": 6709,
											"end": 6786,
											"name": "DUP1"
										},
										{
											"begin": 6709,
											"end": 6786,
											"name": "SWAP2"
										},
										{
											"begin": 6709,
											"end": 6786,
											"name": "SUB"
										},
										{
											"begin": 6709,
											"end": 6786,
											"name": "SWAP1"
										},
										{
											"begin": 6709,
											"end": 6786,
											"name": "REVERT"
										},
										{
											"begin": 6709,
											"end": 6786,
											"name": "tag",
											"value": "217"
										},
										{
											"begin": 6709,
											"end": 6786,
											"name": "JUMPDEST"
										},
										{
											"begin": 6796,
											"end": 6827,
											"name": "PUSH [tag]",
											"value": "218"
										},
										{
											"begin": 6810,
											"end": 6814,
											"name": "ADDRESS"
										},
										{
											"begin": 6817,
											"end": 6826,
											"name": "DUP5"
										},
										{
											"begin": 6796,
											"end": 6801,
											"name": "PUSH [tag]",
											"value": "219"
										},
										{
											"begin": 6796,
											"end": 6827,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6796,
											"end": 6827,
											"name": "tag",
											"value": "218"
										},
										{
											"begin": 6796,
											"end": 6827,
											"name": "JUMPDEST"
										},
										{
											"begin": 6837,
											"end": 6872,
											"name": "PUSH [tag]",
											"value": "220"
										},
										{
											"begin": 6851,
											"end": 6858,
											"name": "DUP8"
										},
										{
											"begin": 6860,
											"end": 6862,
											"name": "DUP14"
										},
										{
											"begin": 6864,
											"end": 6871,
											"name": "DUP14"
										},
										{
											"begin": 6837,
											"end": 6850,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 6837,
											"end": 6872,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6837,
											"end": 6872,
											"name": "tag",
											"value": "220"
										},
										{
											"begin": 6837,
											"end": 6872,
											"name": "JUMPDEST"
										},
										{
											"begin": 6882,
											"end": 6917,
											"name": "PUSH [tag]",
											"value": "221"
										},
										{
											"begin": 6896,
											"end": 6903,
											"name": "DUP7"
										},
										{
											"begin": 6905,
											"end": 6907,
											"name": "DUP14"
										},
										{
											"begin": 6909,
											"end": 6916,
											"name": "DUP13"
										},
										{
											"begin": 6882,
											"end": 6895,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 6882,
											"end": 6917,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6882,
											"end": 6917,
											"name": "tag",
											"value": "221"
										},
										{
											"begin": 6882,
											"end": 6917,
											"name": "JUMPDEST"
										},
										{
											"begin": 6945,
											"end": 6952,
											"name": "DUP7"
										},
										{
											"begin": 6938,
											"end": 6963,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6938,
											"end": 6963,
											"name": "AND"
										},
										{
											"begin": 6938,
											"end": 6963,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 6972,
											"end": 6976,
											"name": "ADDRESS"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "MLOAD"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "DUP3"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "AND"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "SHL"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "DUP2"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "MSTORE"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "ADD"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "DUP1"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "DUP3"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "AND"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "AND"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "DUP2"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "MSTORE"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "ADD"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "SWAP2"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "POP"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "POP"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "MLOAD"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "DUP1"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "DUP4"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "SUB"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "DUP2"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "DUP7"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "DUP1"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "222"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "222"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "POP"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "GAS"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "STATICCALL"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "223"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "223"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "POP"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "POP"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "POP"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "POP"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "MLOAD"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "224"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "224"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "DUP2"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "ADD"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "SWAP1"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "DUP1"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "DUP1"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "MLOAD"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "SWAP1"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "ADD"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "SWAP1"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "SWAP3"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "SWAP2"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "SWAP1"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "POP"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "POP"
										},
										{
											"begin": 6938,
											"end": 6978,
											"name": "POP"
										},
										{
											"begin": 6927,
											"end": 6978,
											"name": "SWAP5"
										},
										{
											"begin": 6927,
											"end": 6978,
											"name": "POP"
										},
										{
											"begin": 7006,
											"end": 7013,
											"name": "DUP6"
										},
										{
											"begin": 6999,
											"end": 7024,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6999,
											"end": 7024,
											"name": "AND"
										},
										{
											"begin": 6999,
											"end": 7024,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 7033,
											"end": 7037,
											"name": "ADDRESS"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "MLOAD"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "DUP3"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "AND"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "SHL"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "DUP2"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "MSTORE"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "ADD"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "DUP1"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "DUP3"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "AND"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "AND"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "DUP2"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "MSTORE"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "ADD"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "SWAP2"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "POP"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "POP"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "MLOAD"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "DUP1"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "DUP4"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "SUB"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "DUP2"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "DUP7"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "DUP1"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "225"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "225"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "POP"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "GAS"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "STATICCALL"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "226"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "226"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "POP"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "POP"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "POP"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "POP"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "MLOAD"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "227"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "227"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "DUP2"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "ADD"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "SWAP1"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "DUP1"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "DUP1"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "MLOAD"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "SWAP1"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "ADD"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "SWAP1"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "SWAP3"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "SWAP2"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "SWAP1"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "POP"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "POP"
										},
										{
											"begin": 6999,
											"end": 7039,
											"name": "POP"
										},
										{
											"begin": 6988,
											"end": 7039,
											"name": "SWAP4"
										},
										{
											"begin": 6988,
											"end": 7039,
											"name": "POP"
										},
										{
											"begin": 7050,
											"end": 7099,
											"name": "PUSH [tag]",
											"value": "228"
										},
										{
											"begin": 7058,
											"end": 7066,
											"name": "DUP6"
										},
										{
											"begin": 7068,
											"end": 7076,
											"name": "DUP6"
										},
										{
											"begin": 7078,
											"end": 7087,
											"name": "DUP12"
										},
										{
											"begin": 7089,
											"end": 7098,
											"name": "DUP12"
										},
										{
											"begin": 7050,
											"end": 7057,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 7050,
											"end": 7099,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7050,
											"end": 7099,
											"name": "tag",
											"value": "228"
										},
										{
											"begin": 7050,
											"end": 7099,
											"name": "JUMPDEST"
										},
										{
											"begin": 7113,
											"end": 7118,
											"name": "DUP2"
										},
										{
											"begin": 7109,
											"end": 7156,
											"name": "ISZERO"
										},
										{
											"begin": 7109,
											"end": 7156,
											"name": "PUSH [tag]",
											"value": "229"
										},
										{
											"begin": 7109,
											"end": 7156,
											"name": "JUMPI"
										},
										{
											"begin": 7128,
											"end": 7156,
											"name": "PUSH [tag]",
											"value": "230"
										},
										{
											"begin": 7147,
											"end": 7155,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 7147,
											"end": 7155,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 7147,
											"end": 7155,
											"name": "SWAP1"
										},
										{
											"begin": 7147,
											"end": 7155,
											"name": "SLOAD"
										},
										{
											"begin": 7147,
											"end": 7155,
											"name": "SWAP1"
										},
										{
											"begin": 7147,
											"end": 7155,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7147,
											"end": 7155,
											"name": "EXP"
										},
										{
											"begin": 7147,
											"end": 7155,
											"name": "SWAP1"
										},
										{
											"begin": 7147,
											"end": 7155,
											"name": "DIV"
										},
										{
											"begin": 7147,
											"end": 7155,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7147,
											"end": 7155,
											"name": "AND"
										},
										{
											"begin": 7128,
											"end": 7156,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7128,
											"end": 7156,
											"name": "AND"
										},
										{
											"begin": 7133,
											"end": 7141,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 7133,
											"end": 7141,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7133,
											"end": 7141,
											"name": "SWAP1"
										},
										{
											"begin": 7133,
											"end": 7141,
											"name": "SLOAD"
										},
										{
											"begin": 7133,
											"end": 7141,
											"name": "SWAP1"
										},
										{
											"begin": 7133,
											"end": 7141,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7133,
											"end": 7141,
											"name": "EXP"
										},
										{
											"begin": 7133,
											"end": 7141,
											"name": "SWAP1"
										},
										{
											"begin": 7133,
											"end": 7141,
											"name": "DIV"
										},
										{
											"begin": 7133,
											"end": 7141,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7133,
											"end": 7141,
											"name": "AND"
										},
										{
											"begin": 7128,
											"end": 7142,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7128,
											"end": 7142,
											"name": "AND"
										},
										{
											"begin": 7128,
											"end": 7146,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 7128,
											"end": 7146,
											"name": "SWAP1"
										},
										{
											"begin": 7128,
											"end": 7156,
											"name": "SWAP2"
										},
										{
											"begin": 7128,
											"end": 7156,
											"name": "SWAP1"
										},
										{
											"begin": 7128,
											"end": 7156,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7128,
											"end": 7156,
											"name": "AND"
										},
										{
											"begin": 7128,
											"end": 7156,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7128,
											"end": 7156,
											"name": "tag",
											"value": "230"
										},
										{
											"begin": 7128,
											"end": 7156,
											"name": "JUMPDEST"
										},
										{
											"begin": 7120,
											"end": 7125,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 7120,
											"end": 7156,
											"name": "DUP2"
										},
										{
											"begin": 7120,
											"end": 7156,
											"name": "SWAP1"
										},
										{
											"begin": 7120,
											"end": 7156,
											"name": "SSTORE"
										},
										{
											"begin": 7120,
											"end": 7156,
											"name": "POP"
										},
										{
											"begin": 7109,
											"end": 7156,
											"name": "tag",
											"value": "229"
										},
										{
											"begin": 7109,
											"end": 7156,
											"name": "JUMPDEST"
										},
										{
											"begin": 7246,
											"end": 7248,
											"name": "DUP12"
										},
										{
											"begin": 7211,
											"end": 7249,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7211,
											"end": 7249,
											"name": "AND"
										},
										{
											"begin": 7216,
											"end": 7226,
											"name": "CALLER"
										},
										{
											"begin": 7211,
											"end": 7249,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7211,
											"end": 7249,
											"name": "AND"
										},
										{
											"begin": 7211,
											"end": 7249,
											"name": "PUSH",
											"value": "DCCD412F0B1252819CB1FD330B93224CA42612892BB3F4F789976E6D81936496"
										},
										{
											"begin": 7228,
											"end": 7235,
											"name": "DUP14"
										},
										{
											"begin": 7237,
											"end": 7244,
											"name": "DUP14"
										},
										{
											"begin": 7211,
											"end": 7249,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7211,
											"end": 7249,
											"name": "MLOAD"
										},
										{
											"begin": 7211,
											"end": 7249,
											"name": "DUP1"
										},
										{
											"begin": 7211,
											"end": 7249,
											"name": "DUP4"
										},
										{
											"begin": 7211,
											"end": 7249,
											"name": "DUP2"
										},
										{
											"begin": 7211,
											"end": 7249,
											"name": "MSTORE"
										},
										{
											"begin": 7211,
											"end": 7249,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7211,
											"end": 7249,
											"name": "ADD"
										},
										{
											"begin": 7211,
											"end": 7249,
											"name": "DUP3"
										},
										{
											"begin": 7211,
											"end": 7249,
											"name": "DUP2"
										},
										{
											"begin": 7211,
											"end": 7249,
											"name": "MSTORE"
										},
										{
											"begin": 7211,
											"end": 7249,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7211,
											"end": 7249,
											"name": "ADD"
										},
										{
											"begin": 7211,
											"end": 7249,
											"name": "SWAP3"
										},
										{
											"begin": 7211,
											"end": 7249,
											"name": "POP"
										},
										{
											"begin": 7211,
											"end": 7249,
											"name": "POP"
										},
										{
											"begin": 7211,
											"end": 7249,
											"name": "POP"
										},
										{
											"begin": 7211,
											"end": 7249,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7211,
											"end": 7249,
											"name": "MLOAD"
										},
										{
											"begin": 7211,
											"end": 7249,
											"name": "DUP1"
										},
										{
											"begin": 7211,
											"end": 7249,
											"name": "SWAP2"
										},
										{
											"begin": 7211,
											"end": 7249,
											"name": "SUB"
										},
										{
											"begin": 7211,
											"end": 7249,
											"name": "SWAP1"
										},
										{
											"begin": 7211,
											"end": 7249,
											"name": "LOG3"
										},
										{
											"begin": 1264,
											"end": 1265,
											"name": "POP"
										},
										{
											"begin": 1264,
											"end": 1265,
											"name": "POP"
										},
										{
											"begin": 1264,
											"end": 1265,
											"name": "POP"
										},
										{
											"begin": 1264,
											"end": 1265,
											"name": "POP"
										},
										{
											"begin": 1264,
											"end": 1265,
											"name": "POP"
										},
										{
											"begin": 1264,
											"end": 1265,
											"name": "POP"
										},
										{
											"begin": 1264,
											"end": 1265,
											"name": "POP"
										},
										{
											"begin": 1264,
											"end": 1265,
											"name": "POP"
										},
										{
											"begin": 1264,
											"end": 1265,
											"name": "POP"
										},
										{
											"begin": 1286,
											"end": 1287,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1275,
											"end": 1283,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "DUP2"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "SWAP1"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "SSTORE"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "POP"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "SWAP2"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "POP"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "SWAP2"
										},
										{
											"begin": 5814,
											"end": 7256,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "JUMPDEST"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "MLOAD"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "ADD"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "MSTORE"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP2"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "MSTORE"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "ADD"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "PUSH",
											"value": "446578537761702D4C5000000000000000000000000000000000000000000000"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP2"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "MSTORE"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "POP"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP2"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "JUMPDEST"
										},
										{
											"begin": 2523,
											"end": 2527,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2539,
											"end": 2571,
											"name": "PUSH [tag]",
											"value": "232"
										},
										{
											"begin": 2549,
											"end": 2559,
											"name": "CALLER"
										},
										{
											"begin": 2561,
											"end": 2563,
											"name": "DUP5"
										},
										{
											"begin": 2565,
											"end": 2570,
											"name": "DUP5"
										},
										{
											"begin": 2539,
											"end": 2548,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 2539,
											"end": 2571,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2539,
											"end": 2571,
											"name": "tag",
											"value": "232"
										},
										{
											"begin": 2539,
											"end": 2571,
											"name": "JUMPDEST"
										},
										{
											"begin": 2588,
											"end": 2592,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2581,
											"end": 2592,
											"name": "SWAP1"
										},
										{
											"begin": 2581,
											"end": 2592,
											"name": "POP"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "SWAP3"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "SWAP2"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "POP"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "POP"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 435,
											"end": 481,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 435,
											"end": 481,
											"name": "JUMPDEST"
										},
										{
											"begin": 476,
											"end": 481,
											"name": "PUSH",
											"value": "3E8"
										},
										{
											"begin": 435,
											"end": 481,
											"name": "DUP2"
										},
										{
											"begin": 435,
											"end": 481,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9267,
											"end": 9596,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 9267,
											"end": 9596,
											"name": "JUMPDEST"
										},
										{
											"begin": 1211,
											"end": 1212,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1199,
											"end": 1207,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1199,
											"end": 1207,
											"name": "SLOAD"
										},
										{
											"begin": 1199,
											"end": 1212,
											"name": "EQ"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "PUSH [tag]",
											"value": "234"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "JUMPI"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "MLOAD"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "DUP2"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "MSTORE"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "ADD"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "DUP1"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "DUP1"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "ADD"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "DUP3"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "DUP2"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "SUB"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "DUP3"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "MSTORE"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "DUP2"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "MSTORE"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "ADD"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "DUP1"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "PUSH",
											"value": "50616E63616B653A204C4F434B45440000000000000000000000000000000000"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "DUP2"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "MSTORE"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "POP"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "ADD"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "SWAP2"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "POP"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "POP"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "MLOAD"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "DUP1"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "SWAP2"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "SUB"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "SWAP1"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "REVERT"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "tag",
											"value": "234"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "JUMPDEST"
										},
										{
											"begin": 1253,
											"end": 1254,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1250,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1242,
											"end": 1254,
											"name": "DUP2"
										},
										{
											"begin": 1242,
											"end": 1254,
											"name": "SWAP1"
										},
										{
											"begin": 1242,
											"end": 1254,
											"name": "SSTORE"
										},
										{
											"begin": 1242,
											"end": 1254,
											"name": "POP"
										},
										{
											"begin": 9317,
											"end": 9332,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9335,
											"end": 9341,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 9335,
											"end": 9341,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9335,
											"end": 9341,
											"name": "SWAP1"
										},
										{
											"begin": 9335,
											"end": 9341,
											"name": "SLOAD"
										},
										{
											"begin": 9335,
											"end": 9341,
											"name": "SWAP1"
										},
										{
											"begin": 9335,
											"end": 9341,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9335,
											"end": 9341,
											"name": "EXP"
										},
										{
											"begin": 9335,
											"end": 9341,
											"name": "SWAP1"
										},
										{
											"begin": 9335,
											"end": 9341,
											"name": "DIV"
										},
										{
											"begin": 9335,
											"end": 9341,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9335,
											"end": 9341,
											"name": "AND"
										},
										{
											"begin": 9317,
											"end": 9341,
											"name": "SWAP1"
										},
										{
											"begin": 9317,
											"end": 9341,
											"name": "POP"
										},
										{
											"begin": 9366,
											"end": 9381,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9384,
											"end": 9390,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 9384,
											"end": 9390,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9384,
											"end": 9390,
											"name": "SWAP1"
										},
										{
											"begin": 9384,
											"end": 9390,
											"name": "SLOAD"
										},
										{
											"begin": 9384,
											"end": 9390,
											"name": "SWAP1"
										},
										{
											"begin": 9384,
											"end": 9390,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9384,
											"end": 9390,
											"name": "EXP"
										},
										{
											"begin": 9384,
											"end": 9390,
											"name": "SWAP1"
										},
										{
											"begin": 9384,
											"end": 9390,
											"name": "DIV"
										},
										{
											"begin": 9384,
											"end": 9390,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9384,
											"end": 9390,
											"name": "AND"
										},
										{
											"begin": 9366,
											"end": 9390,
											"name": "SWAP1"
										},
										{
											"begin": 9366,
											"end": 9390,
											"name": "POP"
										},
										{
											"begin": 9415,
											"end": 9497,
											"name": "PUSH [tag]",
											"value": "236"
										},
										{
											"begin": 9429,
											"end": 9436,
											"name": "DUP3"
										},
										{
											"begin": 9438,
											"end": 9440,
											"name": "DUP5"
										},
										{
											"begin": 9442,
											"end": 9496,
											"name": "PUSH [tag]",
											"value": "237"
										},
										{
											"begin": 9487,
											"end": 9495,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 9487,
											"end": 9495,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9495,
											"name": "SWAP1"
										},
										{
											"begin": 9487,
											"end": 9495,
											"name": "SLOAD"
										},
										{
											"begin": 9487,
											"end": 9495,
											"name": "SWAP1"
										},
										{
											"begin": 9487,
											"end": 9495,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9487,
											"end": 9495,
											"name": "EXP"
										},
										{
											"begin": 9487,
											"end": 9495,
											"name": "SWAP1"
										},
										{
											"begin": 9487,
											"end": 9495,
											"name": "DIV"
										},
										{
											"begin": 9487,
											"end": 9495,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9495,
											"name": "AND"
										},
										{
											"begin": 9442,
											"end": 9496,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9442,
											"end": 9496,
											"name": "AND"
										},
										{
											"begin": 9449,
											"end": 9456,
											"name": "DUP7"
										},
										{
											"begin": 9442,
											"end": 9467,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9442,
											"end": 9467,
											"name": "AND"
										},
										{
											"begin": 9442,
											"end": 9467,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 9476,
											"end": 9480,
											"name": "ADDRESS"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "MLOAD"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "DUP3"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "AND"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "SHL"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "DUP2"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "MSTORE"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "ADD"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "DUP1"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "DUP3"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "AND"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "AND"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "DUP2"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "MSTORE"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "ADD"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "SWAP2"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "POP"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "POP"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "MLOAD"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "DUP1"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "DUP4"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "SUB"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "DUP2"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "DUP7"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "DUP1"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "238"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "238"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "POP"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "GAS"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "STATICCALL"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "239"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "POP"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "POP"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "POP"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "POP"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "MLOAD"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "240"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "240"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "DUP2"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "ADD"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "SWAP1"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "DUP1"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "DUP1"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "MLOAD"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "SWAP1"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "ADD"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "SWAP1"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "SWAP3"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "SWAP2"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "SWAP1"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "POP"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "POP"
										},
										{
											"begin": 9442,
											"end": 9482,
											"name": "POP"
										},
										{
											"begin": 9442,
											"end": 9486,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 9442,
											"end": 9486,
											"name": "SWAP1"
										},
										{
											"begin": 9442,
											"end": 9496,
											"name": "SWAP2"
										},
										{
											"begin": 9442,
											"end": 9496,
											"name": "SWAP1"
										},
										{
											"begin": 9442,
											"end": 9496,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9442,
											"end": 9496,
											"name": "AND"
										},
										{
											"begin": 9442,
											"end": 9496,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9442,
											"end": 9496,
											"name": "tag",
											"value": "237"
										},
										{
											"begin": 9442,
											"end": 9496,
											"name": "JUMPDEST"
										},
										{
											"begin": 9415,
											"end": 9428,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 9415,
											"end": 9497,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9415,
											"end": 9497,
											"name": "tag",
											"value": "236"
										},
										{
											"begin": 9415,
											"end": 9497,
											"name": "JUMPDEST"
										},
										{
											"begin": 9507,
											"end": 9589,
											"name": "PUSH [tag]",
											"value": "241"
										},
										{
											"begin": 9521,
											"end": 9528,
											"name": "DUP2"
										},
										{
											"begin": 9530,
											"end": 9532,
											"name": "DUP5"
										},
										{
											"begin": 9534,
											"end": 9588,
											"name": "PUSH [tag]",
											"value": "242"
										},
										{
											"begin": 9579,
											"end": 9587,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 9579,
											"end": 9587,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 9579,
											"end": 9587,
											"name": "SWAP1"
										},
										{
											"begin": 9579,
											"end": 9587,
											"name": "SLOAD"
										},
										{
											"begin": 9579,
											"end": 9587,
											"name": "SWAP1"
										},
										{
											"begin": 9579,
											"end": 9587,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9579,
											"end": 9587,
											"name": "EXP"
										},
										{
											"begin": 9579,
											"end": 9587,
											"name": "SWAP1"
										},
										{
											"begin": 9579,
											"end": 9587,
											"name": "DIV"
										},
										{
											"begin": 9579,
											"end": 9587,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9579,
											"end": 9587,
											"name": "AND"
										},
										{
											"begin": 9534,
											"end": 9588,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9534,
											"end": 9588,
											"name": "AND"
										},
										{
											"begin": 9541,
											"end": 9548,
											"name": "DUP6"
										},
										{
											"begin": 9534,
											"end": 9559,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9534,
											"end": 9559,
											"name": "AND"
										},
										{
											"begin": 9534,
											"end": 9559,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 9568,
											"end": 9572,
											"name": "ADDRESS"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "MLOAD"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "DUP3"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "AND"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "SHL"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "DUP2"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "MSTORE"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "ADD"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "DUP1"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "DUP3"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "AND"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "AND"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "DUP2"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "MSTORE"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "ADD"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "SWAP2"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "POP"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "POP"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "MLOAD"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "DUP1"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "DUP4"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "SUB"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "DUP2"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "DUP7"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "DUP1"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "243"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "243"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "POP"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "GAS"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "STATICCALL"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "244"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "244"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "POP"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "POP"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "POP"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "POP"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "MLOAD"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "245"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "245"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "DUP2"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "ADD"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "SWAP1"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "DUP1"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "DUP1"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "MLOAD"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "SWAP1"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "ADD"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "SWAP1"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "SWAP3"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "SWAP2"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "SWAP1"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "POP"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "POP"
										},
										{
											"begin": 9534,
											"end": 9574,
											"name": "POP"
										},
										{
											"begin": 9534,
											"end": 9578,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 9534,
											"end": 9578,
											"name": "SWAP1"
										},
										{
											"begin": 9534,
											"end": 9588,
											"name": "SWAP2"
										},
										{
											"begin": 9534,
											"end": 9588,
											"name": "SWAP1"
										},
										{
											"begin": 9534,
											"end": 9588,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9534,
											"end": 9588,
											"name": "AND"
										},
										{
											"begin": 9534,
											"end": 9588,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9534,
											"end": 9588,
											"name": "tag",
											"value": "242"
										},
										{
											"begin": 9534,
											"end": 9588,
											"name": "JUMPDEST"
										},
										{
											"begin": 9507,
											"end": 9520,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 9507,
											"end": 9589,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9507,
											"end": 9589,
											"name": "tag",
											"value": "241"
										},
										{
											"begin": 9507,
											"end": 9589,
											"name": "JUMPDEST"
										},
										{
											"begin": 1264,
											"end": 1265,
											"name": "POP"
										},
										{
											"begin": 1264,
											"end": 1265,
											"name": "POP"
										},
										{
											"begin": 1286,
											"end": 1287,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1275,
											"end": 1283,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "DUP2"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "SWAP1"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "SSTORE"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "POP"
										},
										{
											"begin": 9267,
											"end": 9596,
											"name": "POP"
										},
										{
											"begin": 9267,
											"end": 9596,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "JUMPDEST"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "SWAP1"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "SLOAD"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "SWAP1"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "EXP"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "SWAP1"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "DIV"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "AND"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "DUP2"
										},
										{
											"begin": 582,
											"end": 604,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "JUMPDEST"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "SWAP1"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "SLOAD"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "SWAP1"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "EXP"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "SWAP1"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "DIV"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "AND"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "DUP2"
										},
										{
											"begin": 637,
											"end": 658,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "JUMPDEST"
										},
										{
											"begin": 3155,
											"end": 3170,
											"name": "TIMESTAMP"
										},
										{
											"begin": 3143,
											"end": 3151,
											"name": "DUP5"
										},
										{
											"begin": 3143,
											"end": 3170,
											"name": "LT"
										},
										{
											"begin": 3143,
											"end": 3170,
											"name": "ISZERO"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "PUSH [tag]",
											"value": "247"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "JUMPI"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "MLOAD"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "DUP2"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "MSTORE"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "ADD"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "DUP1"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "DUP1"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "ADD"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "DUP3"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "DUP2"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "SUB"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "DUP3"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "MSTORE"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "DUP2"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "MSTORE"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "ADD"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "DUP1"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "PUSH",
											"value": "50616E63616B653A204558504952454400000000000000000000000000000000"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "DUP2"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "MSTORE"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "POP"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "ADD"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "SWAP2"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "POP"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "POP"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "MLOAD"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "DUP1"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "SWAP2"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "SUB"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "SWAP1"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "REVERT"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "tag",
											"value": "247"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "JUMPDEST"
										},
										{
											"begin": 3201,
											"end": 3215,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3303,
											"end": 3319,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3303,
											"end": 3319,
											"name": "SLOAD"
										},
										{
											"begin": 693,
											"end": 759,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 3358,
											"end": 3373,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3358,
											"end": 3373,
											"name": "SHL"
										},
										{
											"begin": 3375,
											"end": 3380,
											"name": "DUP10"
										},
										{
											"begin": 3382,
											"end": 3389,
											"name": "DUP10"
										},
										{
											"begin": 3391,
											"end": 3396,
											"name": "DUP10"
										},
										{
											"begin": 3398,
											"end": 3404,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3398,
											"end": 3411,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3410,
											"name": "DUP15"
										},
										{
											"begin": 3398,
											"end": 3411,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3398,
											"end": 3411,
											"name": "AND"
										},
										{
											"begin": 3398,
											"end": 3411,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3398,
											"end": 3411,
											"name": "AND"
										},
										{
											"begin": 3398,
											"end": 3411,
											"name": "DUP2"
										},
										{
											"begin": 3398,
											"end": 3411,
											"name": "MSTORE"
										},
										{
											"begin": 3398,
											"end": 3411,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3398,
											"end": 3411,
											"name": "ADD"
										},
										{
											"begin": 3398,
											"end": 3411,
											"name": "SWAP1"
										},
										{
											"begin": 3398,
											"end": 3411,
											"name": "DUP2"
										},
										{
											"begin": 3398,
											"end": 3411,
											"name": "MSTORE"
										},
										{
											"begin": 3398,
											"end": 3411,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3398,
											"end": 3411,
											"name": "ADD"
										},
										{
											"begin": 3398,
											"end": 3411,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3398,
											"end": 3411,
											"name": "KECCAK256"
										},
										{
											"begin": 3398,
											"end": 3411,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3398,
											"end": 3413,
											"name": "DUP2"
										},
										{
											"begin": 3398,
											"end": 3413,
											"name": "SLOAD"
										},
										{
											"begin": 3398,
											"end": 3413,
											"name": "DUP1"
										},
										{
											"begin": 3398,
											"end": 3413,
											"name": "SWAP3"
										},
										{
											"begin": 3398,
											"end": 3413,
											"name": "SWAP2"
										},
										{
											"begin": 3398,
											"end": 3413,
											"name": "SWAP1"
										},
										{
											"begin": 3398,
											"end": 3413,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3398,
											"end": 3413,
											"name": "ADD"
										},
										{
											"begin": 3398,
											"end": 3413,
											"name": "SWAP2"
										},
										{
											"begin": 3398,
											"end": 3413,
											"name": "SWAP1"
										},
										{
											"begin": 3398,
											"end": 3413,
											"name": "POP"
										},
										{
											"begin": 3398,
											"end": 3413,
											"name": "SSTORE"
										},
										{
											"begin": 3415,
											"end": 3423,
											"name": "DUP11"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "MLOAD"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "ADD"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "DUP1"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "DUP8"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "DUP2"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "MSTORE"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "ADD"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "DUP7"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "AND"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "AND"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "DUP2"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "MSTORE"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "ADD"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "DUP6"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "AND"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "AND"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "DUP2"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "MSTORE"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "ADD"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "DUP5"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "DUP2"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "MSTORE"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "ADD"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "DUP4"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "DUP2"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "MSTORE"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "ADD"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "DUP3"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "DUP2"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "MSTORE"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "ADD"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "SWAP7"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "POP"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "POP"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "POP"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "POP"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "POP"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "POP"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "POP"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "SWAP1"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "MSTORE"
										},
										{
											"begin": 3337,
											"end": 3425,
											"name": "DUP1"
										},
										{
											"begin": 3337,
											"end": 3425,
											"name": "MLOAD"
										},
										{
											"begin": 3337,
											"end": 3425,
											"name": "SWAP1"
										},
										{
											"begin": 3337,
											"end": 3425,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3337,
											"end": 3425,
											"name": "ADD"
										},
										{
											"begin": 3337,
											"end": 3425,
											"name": "KECCAK256"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "MLOAD"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "ADD"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "DUP1"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "DUP1"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "PUSH",
											"value": "1901000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "DUP2"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "MSTORE"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "POP"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "ADD"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "DUP4"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "DUP2"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "MSTORE"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "ADD"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "DUP3"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "DUP2"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "MSTORE"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "ADD"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "SWAP3"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "POP"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "POP"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "POP"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "SWAP1"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "MSTORE"
										},
										{
											"begin": 3218,
											"end": 3449,
											"name": "DUP1"
										},
										{
											"begin": 3218,
											"end": 3449,
											"name": "MLOAD"
										},
										{
											"begin": 3218,
											"end": 3449,
											"name": "SWAP1"
										},
										{
											"begin": 3218,
											"end": 3449,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3218,
											"end": 3449,
											"name": "ADD"
										},
										{
											"begin": 3218,
											"end": 3449,
											"name": "KECCAK256"
										},
										{
											"begin": 3201,
											"end": 3449,
											"name": "SWAP1"
										},
										{
											"begin": 3201,
											"end": 3449,
											"name": "POP"
										},
										{
											"begin": 3459,
											"end": 3483,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3496,
											"end": 3502,
											"name": "DUP3"
										},
										{
											"begin": 3504,
											"end": 3505,
											"name": "DUP7"
										},
										{
											"begin": 3507,
											"end": 3508,
											"name": "DUP7"
										},
										{
											"begin": 3510,
											"end": 3511,
											"name": "DUP7"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "MLOAD"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "DUP2"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "MSTORE"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "ADD"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "MSTORE"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "MLOAD"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "DUP1"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "DUP6"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "DUP2"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "MSTORE"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "ADD"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "DUP5"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "AND"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "AND"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "DUP2"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "MSTORE"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "ADD"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "DUP4"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "DUP2"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "MSTORE"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "ADD"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "DUP3"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "DUP2"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "MSTORE"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "ADD"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "SWAP5"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "POP"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "POP"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "POP"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "POP"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "POP"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "MLOAD"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "DUP2"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "SUB"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "SWAP1"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "DUP1"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "DUP5"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "SUB"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "SWAP1"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "DUP6"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "GAS"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "STATICCALL"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "248"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "248"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "POP"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "POP"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "POP"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "MLOAD"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "SUB"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "MLOAD"
										},
										{
											"begin": 3459,
											"end": 3512,
											"name": "SWAP1"
										},
										{
											"begin": 3459,
											"end": 3512,
											"name": "POP"
										},
										{
											"begin": 3558,
											"end": 3559,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3530,
											"end": 3560,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3530,
											"end": 3560,
											"name": "AND"
										},
										{
											"begin": 3530,
											"end": 3546,
											"name": "DUP2"
										},
										{
											"begin": 3530,
											"end": 3560,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3530,
											"end": 3560,
											"name": "AND"
										},
										{
											"begin": 3530,
											"end": 3560,
											"name": "EQ"
										},
										{
											"begin": 3530,
											"end": 3560,
											"name": "ISZERO"
										},
										{
											"begin": 3530,
											"end": 3589,
											"name": "DUP1"
										},
										{
											"begin": 3530,
											"end": 3589,
											"name": "ISZERO"
										},
										{
											"begin": 3530,
											"end": 3589,
											"name": "PUSH [tag]",
											"value": "249"
										},
										{
											"begin": 3530,
											"end": 3589,
											"name": "JUMPI"
										},
										{
											"begin": 3530,
											"end": 3589,
											"name": "POP"
										},
										{
											"begin": 3584,
											"end": 3589,
											"name": "DUP9"
										},
										{
											"begin": 3564,
											"end": 3589,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3564,
											"end": 3589,
											"name": "AND"
										},
										{
											"begin": 3564,
											"end": 3580,
											"name": "DUP2"
										},
										{
											"begin": 3564,
											"end": 3589,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3564,
											"end": 3589,
											"name": "AND"
										},
										{
											"begin": 3564,
											"end": 3589,
											"name": "EQ"
										},
										{
											"begin": 3530,
											"end": 3589,
											"name": "tag",
											"value": "249"
										},
										{
											"begin": 3530,
											"end": 3589,
											"name": "JUMPDEST"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "PUSH [tag]",
											"value": "250"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "JUMPI"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "MLOAD"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "DUP2"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "MSTORE"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "ADD"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "DUP1"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "DUP1"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "ADD"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "DUP3"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "DUP2"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "SUB"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "DUP3"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "MSTORE"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "DUP2"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "MSTORE"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "ADD"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "DUP1"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "PUSH",
											"value": "50616E63616B653A20494E56414C49445F5349474E4154555245000000000000"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "DUP2"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "MSTORE"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "POP"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "ADD"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "SWAP2"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "POP"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "POP"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "MLOAD"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "DUP1"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "SWAP2"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "SUB"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "SWAP1"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "REVERT"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "tag",
											"value": "250"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "JUMPDEST"
										},
										{
											"begin": 3630,
											"end": 3661,
											"name": "PUSH [tag]",
											"value": "251"
										},
										{
											"begin": 3639,
											"end": 3644,
											"name": "DUP10"
										},
										{
											"begin": 3646,
											"end": 3653,
											"name": "DUP10"
										},
										{
											"begin": 3655,
											"end": 3660,
											"name": "DUP10"
										},
										{
											"begin": 3630,
											"end": 3638,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 3630,
											"end": 3661,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3630,
											"end": 3661,
											"name": "tag",
											"value": "251"
										},
										{
											"begin": 3630,
											"end": 3661,
											"name": "JUMPDEST"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "POP"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "POP"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "POP"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "POP"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "POP"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "POP"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "POP"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "POP"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "POP"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "JUMPDEST"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "MSTORE"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "DUP2"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "MSTORE"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "KECCAK256"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "MSTORE"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "DUP1"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "MSTORE"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "KECCAK256"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "SWAP2"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "POP"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "SWAP2"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "POP"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "POP"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "SLOAD"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "DUP2"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9642,
											"end": 9798,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 9642,
											"end": 9798,
											"name": "JUMPDEST"
										},
										{
											"begin": 1211,
											"end": 1212,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1199,
											"end": 1207,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1199,
											"end": 1207,
											"name": "SLOAD"
										},
										{
											"begin": 1199,
											"end": 1212,
											"name": "EQ"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "JUMPI"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "MLOAD"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "DUP2"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "MSTORE"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "ADD"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "DUP1"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "DUP1"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "ADD"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "DUP3"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "DUP2"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "SUB"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "DUP3"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "MSTORE"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "DUP2"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "MSTORE"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "ADD"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "DUP1"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "PUSH",
											"value": "50616E63616B653A204C4F434B45440000000000000000000000000000000000"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "DUP2"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "MSTORE"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "POP"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "ADD"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "SWAP2"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "POP"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "POP"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "MLOAD"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "DUP1"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "SWAP2"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "SUB"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "SWAP1"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "REVERT"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "tag",
											"value": "253"
										},
										{
											"begin": 1191,
											"end": 1232,
											"name": "JUMPDEST"
										},
										{
											"begin": 1253,
											"end": 1254,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1250,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1242,
											"end": 1254,
											"name": "DUP2"
										},
										{
											"begin": 1242,
											"end": 1254,
											"name": "SWAP1"
										},
										{
											"begin": 1242,
											"end": 1254,
											"name": "SSTORE"
										},
										{
											"begin": 1242,
											"end": 1254,
											"name": "POP"
										},
										{
											"begin": 9682,
											"end": 9791,
											"name": "PUSH [tag]",
											"value": "255"
										},
										{
											"begin": 9697,
											"end": 9703,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 9697,
											"end": 9703,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9697,
											"end": 9703,
											"name": "SWAP1"
										},
										{
											"begin": 9697,
											"end": 9703,
											"name": "SLOAD"
										},
										{
											"begin": 9697,
											"end": 9703,
											"name": "SWAP1"
										},
										{
											"begin": 9697,
											"end": 9703,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9697,
											"end": 9703,
											"name": "EXP"
										},
										{
											"begin": 9697,
											"end": 9703,
											"name": "SWAP1"
										},
										{
											"begin": 9697,
											"end": 9703,
											"name": "DIV"
										},
										{
											"begin": 9697,
											"end": 9703,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9697,
											"end": 9703,
											"name": "AND"
										},
										{
											"begin": 9690,
											"end": 9714,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9690,
											"end": 9714,
											"name": "AND"
										},
										{
											"begin": 9690,
											"end": 9714,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 9723,
											"end": 9727,
											"name": "ADDRESS"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "MLOAD"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "DUP3"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "AND"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "SHL"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "DUP2"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "MSTORE"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "ADD"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "DUP1"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "DUP3"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "AND"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "AND"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "DUP2"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "MSTORE"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "ADD"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "SWAP2"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "POP"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "POP"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "MLOAD"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "DUP1"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "DUP4"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "SUB"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "DUP2"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "DUP7"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "DUP1"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "256"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "256"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "POP"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "GAS"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "STATICCALL"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "257"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "257"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "POP"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "POP"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "POP"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "POP"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "MLOAD"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "258"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "258"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "DUP2"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "ADD"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "SWAP1"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "DUP1"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "DUP1"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "MLOAD"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "SWAP1"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "ADD"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "SWAP1"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "SWAP3"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "SWAP2"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "SWAP1"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "POP"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "POP"
										},
										{
											"begin": 9690,
											"end": 9729,
											"name": "POP"
										},
										{
											"begin": 9738,
											"end": 9744,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 9738,
											"end": 9744,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9738,
											"end": 9744,
											"name": "SWAP1"
										},
										{
											"begin": 9738,
											"end": 9744,
											"name": "SLOAD"
										},
										{
											"begin": 9738,
											"end": 9744,
											"name": "SWAP1"
										},
										{
											"begin": 9738,
											"end": 9744,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9738,
											"end": 9744,
											"name": "EXP"
										},
										{
											"begin": 9738,
											"end": 9744,
											"name": "SWAP1"
										},
										{
											"begin": 9738,
											"end": 9744,
											"name": "DIV"
										},
										{
											"begin": 9738,
											"end": 9744,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9738,
											"end": 9744,
											"name": "AND"
										},
										{
											"begin": 9731,
											"end": 9755,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9731,
											"end": 9755,
											"name": "AND"
										},
										{
											"begin": 9731,
											"end": 9755,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 9764,
											"end": 9768,
											"name": "ADDRESS"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "MLOAD"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "DUP3"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "AND"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "SHL"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "DUP2"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "MSTORE"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "ADD"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "DUP1"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "DUP3"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "AND"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "AND"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "DUP2"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "MSTORE"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "ADD"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "SWAP2"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "POP"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "POP"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "MLOAD"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "DUP1"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "DUP4"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "SUB"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "DUP2"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "DUP7"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "DUP1"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "259"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "259"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "POP"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "GAS"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "STATICCALL"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "260"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "260"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "POP"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "POP"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "POP"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "POP"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "MLOAD"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "261"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "261"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "DUP2"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "ADD"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "SWAP1"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "DUP1"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "DUP1"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "MLOAD"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "SWAP1"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "ADD"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "SWAP1"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "SWAP3"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "SWAP2"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "SWAP1"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "POP"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "POP"
										},
										{
											"begin": 9731,
											"end": 9770,
											"name": "POP"
										},
										{
											"begin": 9772,
											"end": 9780,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 9772,
											"end": 9780,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9772,
											"end": 9780,
											"name": "SWAP1"
										},
										{
											"begin": 9772,
											"end": 9780,
											"name": "SLOAD"
										},
										{
											"begin": 9772,
											"end": 9780,
											"name": "SWAP1"
										},
										{
											"begin": 9772,
											"end": 9780,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9772,
											"end": 9780,
											"name": "EXP"
										},
										{
											"begin": 9772,
											"end": 9780,
											"name": "SWAP1"
										},
										{
											"begin": 9772,
											"end": 9780,
											"name": "DIV"
										},
										{
											"begin": 9772,
											"end": 9780,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9772,
											"end": 9780,
											"name": "AND"
										},
										{
											"begin": 9782,
											"end": 9790,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 9782,
											"end": 9790,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 9782,
											"end": 9790,
											"name": "SWAP1"
										},
										{
											"begin": 9782,
											"end": 9790,
											"name": "SLOAD"
										},
										{
											"begin": 9782,
											"end": 9790,
											"name": "SWAP1"
										},
										{
											"begin": 9782,
											"end": 9790,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9782,
											"end": 9790,
											"name": "EXP"
										},
										{
											"begin": 9782,
											"end": 9790,
											"name": "SWAP1"
										},
										{
											"begin": 9782,
											"end": 9790,
											"name": "DIV"
										},
										{
											"begin": 9782,
											"end": 9790,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9782,
											"end": 9790,
											"name": "AND"
										},
										{
											"begin": 9682,
											"end": 9689,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 9682,
											"end": 9791,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9682,
											"end": 9791,
											"name": "tag",
											"value": "255"
										},
										{
											"begin": 9682,
											"end": 9791,
											"name": "JUMPDEST"
										},
										{
											"begin": 1286,
											"end": 1287,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1275,
											"end": 1283,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "DUP2"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "SWAP1"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "SSTORE"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "POP"
										},
										{
											"begin": 9642,
											"end": 9798,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1533,
											"end": 1815,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 1533,
											"end": 1815,
											"name": "JUMPDEST"
										},
										{
											"begin": 1614,
											"end": 1626,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1628,
											"end": 1645,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 1649,
											"end": 1654,
											"name": "DUP5"
										},
										{
											"begin": 1649,
											"end": 1659,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1649,
											"end": 1659,
											"name": "AND"
										},
										{
											"begin": 539,
											"end": 573,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 539,
											"end": 573,
											"name": "MLOAD"
										},
										{
											"begin": 539,
											"end": 573,
											"name": "DUP1"
										},
										{
											"begin": 539,
											"end": 573,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 539,
											"end": 573,
											"name": "ADD"
										},
										{
											"begin": 539,
											"end": 573,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 539,
											"end": 573,
											"name": "MSTORE"
										},
										{
											"begin": 539,
											"end": 573,
											"name": "DUP1"
										},
										{
											"begin": 539,
											"end": 573,
											"name": "PUSH",
											"value": "19"
										},
										{
											"begin": 539,
											"end": 573,
											"name": "DUP2"
										},
										{
											"begin": 539,
											"end": 573,
											"name": "MSTORE"
										},
										{
											"begin": 539,
											"end": 573,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 539,
											"end": 573,
											"name": "ADD"
										},
										{
											"begin": 539,
											"end": 573,
											"name": "PUSH",
											"value": "7472616E7366657228616464726573732C75696E743235362900000000000000"
										},
										{
											"begin": 539,
											"end": 573,
											"name": "DUP2"
										},
										{
											"begin": 539,
											"end": 573,
											"name": "MSTORE"
										},
										{
											"begin": 539,
											"end": 573,
											"name": "POP"
										},
										{
											"begin": 529,
											"end": 574,
											"name": "DUP1"
										},
										{
											"begin": 529,
											"end": 574,
											"name": "MLOAD"
										},
										{
											"begin": 529,
											"end": 574,
											"name": "SWAP1"
										},
										{
											"begin": 529,
											"end": 574,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 529,
											"end": 574,
											"name": "ADD"
										},
										{
											"begin": 529,
											"end": 574,
											"name": "KECCAK256"
										},
										{
											"begin": 1693,
											"end": 1695,
											"name": "DUP6"
										},
										{
											"begin": 1697,
											"end": 1702,
											"name": "DUP6"
										},
										{
											"begin": 1660,
											"end": 1703,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1660,
											"end": 1703,
											"name": "MLOAD"
										},
										{
											"begin": 1660,
											"end": 1703,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1660,
											"end": 1703,
											"name": "ADD"
										},
										{
											"begin": 1660,
											"end": 1703,
											"name": "DUP1"
										},
										{
											"begin": 1660,
											"end": 1703,
											"name": "DUP4"
										},
										{
											"begin": 1660,
											"end": 1703,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1660,
											"end": 1703,
											"name": "AND"
										},
										{
											"begin": 1660,
											"end": 1703,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1660,
											"end": 1703,
											"name": "AND"
										},
										{
											"begin": 1660,
											"end": 1703,
											"name": "DUP2"
										},
										{
											"begin": 1660,
											"end": 1703,
											"name": "MSTORE"
										},
										{
											"begin": 1660,
											"end": 1703,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1660,
											"end": 1703,
											"name": "ADD"
										},
										{
											"begin": 1660,
											"end": 1703,
											"name": "DUP3"
										},
										{
											"begin": 1660,
											"end": 1703,
											"name": "DUP2"
										},
										{
											"begin": 1660,
											"end": 1703,
											"name": "MSTORE"
										},
										{
											"begin": 1660,
											"end": 1703,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1660,
											"end": 1703,
											"name": "ADD"
										},
										{
											"begin": 1660,
											"end": 1703,
											"name": "SWAP3"
										},
										{
											"begin": 1660,
											"end": 1703,
											"name": "POP"
										},
										{
											"begin": 1660,
											"end": 1703,
											"name": "POP"
										},
										{
											"begin": 1660,
											"end": 1703,
											"name": "POP"
										},
										{
											"begin": 1660,
											"end": 1703,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1660,
											"end": 1703,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 1660,
											"end": 1703,
											"name": "SWAP1"
										},
										{
											"begin": 1660,
											"end": 1703,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1660,
											"end": 1703,
											"name": "MSTORE"
										},
										{
											"begin": 1660,
											"end": 1703,
											"name": "SWAP1"
										},
										{
											"begin": 1660,
											"end": 1703,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1660,
											"end": 1703,
											"name": "NOT"
										},
										{
											"begin": 1660,
											"end": 1703,
											"name": "AND"
										},
										{
											"begin": 38,
											"end": 42,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29,
											"end": 36,
											"name": "DUP3"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "ADD"
										},
										{
											"begin": 67,
											"end": 77,
											"name": "DUP1"
										},
										{
											"begin": 61,
											"end": 78,
											"name": "MLOAD"
										},
										{
											"begin": 96,
											"end": 154,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 199,
											"end": 207,
											"name": "DUP4"
										},
										{
											"begin": 192,
											"end": 196,
											"name": "DUP2"
										},
										{
											"begin": 186,
											"end": 190,
											"name": "DUP4"
										},
										{
											"begin": 182,
											"end": 197,
											"name": "AND"
										},
										{
											"begin": 179,
											"end": 208,
											"name": "OR"
										},
										{
											"begin": 167,
											"end": 177,
											"name": "DUP4"
										},
										{
											"begin": 160,
											"end": 209,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 1660,
											"end": 1703,
											"name": "POP"
										},
										{
											"begin": 1649,
											"end": 1704,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1649,
											"end": 1704,
											"name": "MLOAD"
										},
										{
											"begin": 1649,
											"end": 1704,
											"name": "DUP1"
										},
										{
											"begin": 1649,
											"end": 1704,
											"name": "DUP3"
										},
										{
											"begin": 1649,
											"end": 1704,
											"name": "DUP1"
										},
										{
											"begin": 1649,
											"end": 1704,
											"name": "MLOAD"
										},
										{
											"begin": 1649,
											"end": 1704,
											"name": "SWAP1"
										},
										{
											"begin": 1649,
											"end": 1704,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1649,
											"end": 1704,
											"name": "ADD"
										},
										{
											"begin": 1649,
											"end": 1704,
											"name": "SWAP1"
										},
										{
											"begin": 1649,
											"end": 1704,
											"name": "DUP1"
										},
										{
											"begin": 1649,
											"end": 1704,
											"name": "DUP4"
										},
										{
											"begin": 1649,
											"end": 1704,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "263"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "265"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "263"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "265"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 1649,
											"end": 1704,
											"name": "POP"
										},
										{
											"begin": 1649,
											"end": 1704,
											"name": "POP"
										},
										{
											"begin": 1649,
											"end": 1704,
											"name": "POP"
										},
										{
											"begin": 1649,
											"end": 1704,
											"name": "SWAP1"
										},
										{
											"begin": 1649,
											"end": 1704,
											"name": "POP"
										},
										{
											"begin": 1649,
											"end": 1704,
											"name": "ADD"
										},
										{
											"begin": 1649,
											"end": 1704,
											"name": "SWAP2"
										},
										{
											"begin": 1649,
											"end": 1704,
											"name": "POP"
										},
										{
											"begin": 1649,
											"end": 1704,
											"name": "POP"
										},
										{
											"begin": 1649,
											"end": 1704,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1649,
											"end": 1704,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1649,
											"end": 1704,
											"name": "MLOAD"
										},
										{
											"begin": 1649,
											"end": 1704,
											"name": "DUP1"
										},
										{
											"begin": 1649,
											"end": 1704,
											"name": "DUP4"
										},
										{
											"begin": 1649,
											"end": 1704,
											"name": "SUB"
										},
										{
											"begin": 1649,
											"end": 1704,
											"name": "DUP2"
										},
										{
											"begin": 1649,
											"end": 1704,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1649,
											"end": 1704,
											"name": "DUP7"
										},
										{
											"begin": 1649,
											"end": 1704,
											"name": "GAS"
										},
										{
											"begin": 1649,
											"end": 1704,
											"name": "CALL"
										},
										{
											"begin": 1649,
											"end": 1704,
											"name": "SWAP2"
										},
										{
											"begin": 1649,
											"end": 1704,
											"name": "POP"
										},
										{
											"begin": 1649,
											"end": 1704,
											"name": "POP"
										},
										{
											"begin": 1649,
											"end": 1704,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 14,
											"end": 15,
											"name": "DUP1"
										},
										{
											"begin": 21,
											"end": 22,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "DUP2"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "EQ"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "PUSH [tag]",
											"value": "267"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPI"
										},
										{
											"begin": 75,
											"end": 79,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 69,
											"end": 80,
											"name": "MLOAD"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "SWAP2"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "POP"
										},
										{
											"begin": 144,
											"end": 148,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 140,
											"end": 149,
											"name": "NOT"
										},
										{
											"begin": 133,
											"end": 137,
											"name": "PUSH",
											"value": "3F"
										},
										{
											"begin": 115,
											"end": 131,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 111,
											"end": 138,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "AND"
										},
										{
											"begin": 104,
											"end": 105,
											"name": "DUP3"
										},
										{
											"begin": 100,
											"end": 151,
											"name": "ADD"
										},
										{
											"begin": 94,
											"end": 98,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 87,
											"end": 152,
											"name": "MSTORE"
										},
										{
											"begin": 169,
											"end": 185,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 166,
											"end": 167,
											"name": "DUP3"
										},
										{
											"begin": 159,
											"end": 186,
											"name": "MSTORE"
										},
										{
											"begin": 225,
											"end": 241,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 222,
											"end": 223,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 215,
											"end": 219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 212,
											"end": 213,
											"name": "DUP5"
										},
										{
											"begin": 208,
											"end": 220,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 242,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "PUSH [tag]",
											"value": "266"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMP"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "tag",
											"value": "267"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPDEST"
										},
										{
											"begin": 36,
											"end": 40,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "SWAP2"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "POP"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "tag",
											"value": "266"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMPDEST"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "POP"
										},
										{
											"begin": 1613,
											"end": 1704,
											"name": "SWAP2"
										},
										{
											"begin": 1613,
											"end": 1704,
											"name": "POP"
										},
										{
											"begin": 1613,
											"end": 1704,
											"name": "SWAP2"
										},
										{
											"begin": 1613,
											"end": 1704,
											"name": "POP"
										},
										{
											"begin": 1722,
											"end": 1729,
											"name": "DUP2"
										},
										{
											"begin": 1722,
											"end": 1779,
											"name": "DUP1"
										},
										{
											"begin": 1722,
											"end": 1779,
											"name": "ISZERO"
										},
										{
											"begin": 1722,
											"end": 1779,
											"name": "PUSH [tag]",
											"value": "268"
										},
										{
											"begin": 1722,
											"end": 1779,
											"name": "JUMPI"
										},
										{
											"begin": 1722,
											"end": 1779,
											"name": "POP"
										},
										{
											"begin": 1749,
											"end": 1750,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1734,
											"end": 1738,
											"name": "DUP2"
										},
										{
											"begin": 1734,
											"end": 1745,
											"name": "MLOAD"
										},
										{
											"begin": 1734,
											"end": 1750,
											"name": "EQ"
										},
										{
											"begin": 1734,
											"end": 1778,
											"name": "DUP1"
										},
										{
											"begin": 1734,
											"end": 1778,
											"name": "PUSH [tag]",
											"value": "269"
										},
										{
											"begin": 1734,
											"end": 1778,
											"name": "JUMPI"
										},
										{
											"begin": 1734,
											"end": 1778,
											"name": "POP"
										},
										{
											"begin": 1765,
											"end": 1769,
											"name": "DUP1"
										},
										{
											"begin": 1754,
											"end": 1778,
											"name": "DUP1"
										},
										{
											"begin": 1754,
											"end": 1778,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1754,
											"end": 1778,
											"name": "ADD"
										},
										{
											"begin": 1754,
											"end": 1778,
											"name": "SWAP1"
										},
										{
											"begin": 1754,
											"end": 1778,
											"name": "MLOAD"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "270"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "270"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1754,
											"end": 1778,
											"name": "DUP2"
										},
										{
											"begin": 1754,
											"end": 1778,
											"name": "ADD"
										},
										{
											"begin": 1754,
											"end": 1778,
											"name": "SWAP1"
										},
										{
											"begin": 1754,
											"end": 1778,
											"name": "DUP1"
										},
										{
											"begin": 1754,
											"end": 1778,
											"name": "DUP1"
										},
										{
											"begin": 1754,
											"end": 1778,
											"name": "MLOAD"
										},
										{
											"begin": 1754,
											"end": 1778,
											"name": "SWAP1"
										},
										{
											"begin": 1754,
											"end": 1778,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1754,
											"end": 1778,
											"name": "ADD"
										},
										{
											"begin": 1754,
											"end": 1778,
											"name": "SWAP1"
										},
										{
											"begin": 1754,
											"end": 1778,
											"name": "SWAP3"
										},
										{
											"begin": 1754,
											"end": 1778,
											"name": "SWAP2"
										},
										{
											"begin": 1754,
											"end": 1778,
											"name": "SWAP1"
										},
										{
											"begin": 1754,
											"end": 1778,
											"name": "POP"
										},
										{
											"begin": 1754,
											"end": 1778,
											"name": "POP"
										},
										{
											"begin": 1754,
											"end": 1778,
											"name": "POP"
										},
										{
											"begin": 1734,
											"end": 1778,
											"name": "tag",
											"value": "269"
										},
										{
											"begin": 1734,
											"end": 1778,
											"name": "JUMPDEST"
										},
										{
											"begin": 1722,
											"end": 1779,
											"name": "tag",
											"value": "268"
										},
										{
											"begin": 1722,
											"end": 1779,
											"name": "JUMPDEST"
										},
										{
											"begin": 1714,
											"end": 1808,
											"name": "PUSH [tag]",
											"value": "271"
										},
										{
											"begin": 1714,
											"end": 1808,
											"name": "JUMPI"
										},
										{
											"begin": 1714,
											"end": 1808,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1714,
											"end": 1808,
											"name": "MLOAD"
										},
										{
											"begin": 1714,
											"end": 1808,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1714,
											"end": 1808,
											"name": "DUP2"
										},
										{
											"begin": 1714,
											"end": 1808,
											"name": "MSTORE"
										},
										{
											"begin": 1714,
											"end": 1808,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1714,
											"end": 1808,
											"name": "ADD"
										},
										{
											"begin": 1714,
											"end": 1808,
											"name": "DUP1"
										},
										{
											"begin": 1714,
											"end": 1808,
											"name": "DUP1"
										},
										{
											"begin": 1714,
											"end": 1808,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1714,
											"end": 1808,
											"name": "ADD"
										},
										{
											"begin": 1714,
											"end": 1808,
											"name": "DUP3"
										},
										{
											"begin": 1714,
											"end": 1808,
											"name": "DUP2"
										},
										{
											"begin": 1714,
											"end": 1808,
											"name": "SUB"
										},
										{
											"begin": 1714,
											"end": 1808,
											"name": "DUP3"
										},
										{
											"begin": 1714,
											"end": 1808,
											"name": "MSTORE"
										},
										{
											"begin": 1714,
											"end": 1808,
											"name": "PUSH",
											"value": "18"
										},
										{
											"begin": 1714,
											"end": 1808,
											"name": "DUP2"
										},
										{
											"begin": 1714,
											"end": 1808,
											"name": "MSTORE"
										},
										{
											"begin": 1714,
											"end": 1808,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1714,
											"end": 1808,
											"name": "ADD"
										},
										{
											"begin": 1714,
											"end": 1808,
											"name": "DUP1"
										},
										{
											"begin": 1714,
											"end": 1808,
											"name": "PUSH",
											"value": "50616E63616B653A205452414E534645525F4641494C45440000000000000000"
										},
										{
											"begin": 1714,
											"end": 1808,
											"name": "DUP2"
										},
										{
											"begin": 1714,
											"end": 1808,
											"name": "MSTORE"
										},
										{
											"begin": 1714,
											"end": 1808,
											"name": "POP"
										},
										{
											"begin": 1714,
											"end": 1808,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1714,
											"end": 1808,
											"name": "ADD"
										},
										{
											"begin": 1714,
											"end": 1808,
											"name": "SWAP2"
										},
										{
											"begin": 1714,
											"end": 1808,
											"name": "POP"
										},
										{
											"begin": 1714,
											"end": 1808,
											"name": "POP"
										},
										{
											"begin": 1714,
											"end": 1808,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1714,
											"end": 1808,
											"name": "MLOAD"
										},
										{
											"begin": 1714,
											"end": 1808,
											"name": "DUP1"
										},
										{
											"begin": 1714,
											"end": 1808,
											"name": "SWAP2"
										},
										{
											"begin": 1714,
											"end": 1808,
											"name": "SUB"
										},
										{
											"begin": 1714,
											"end": 1808,
											"name": "SWAP1"
										},
										{
											"begin": 1714,
											"end": 1808,
											"name": "REVERT"
										},
										{
											"begin": 1714,
											"end": 1808,
											"name": "tag",
											"value": "271"
										},
										{
											"begin": 1714,
											"end": 1808,
											"name": "JUMPDEST"
										},
										{
											"begin": 1533,
											"end": 1815,
											"name": "POP"
										},
										{
											"begin": 1533,
											"end": 1815,
											"name": "POP"
										},
										{
											"begin": 1533,
											"end": 1815,
											"name": "POP"
										},
										{
											"begin": 1533,
											"end": 1815,
											"name": "POP"
										},
										{
											"begin": 1533,
											"end": 1815,
											"name": "POP"
										},
										{
											"begin": 1533,
											"end": 1815,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 481,
											"end": 630,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 481,
											"end": 630,
											"name": "JUMPDEST"
										},
										{
											"begin": 539,
											"end": 548,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 573,
											"end": 574,
											"name": "DUP1"
										},
										{
											"begin": 568,
											"end": 569,
											"name": "DUP3"
										},
										{
											"begin": 568,
											"end": 574,
											"name": "EQ"
										},
										{
											"begin": 568,
											"end": 598,
											"name": "DUP1"
										},
										{
											"begin": 568,
											"end": 598,
											"name": "PUSH [tag]",
											"value": "273"
										},
										{
											"begin": 568,
											"end": 598,
											"name": "JUMPI"
										},
										{
											"begin": 568,
											"end": 598,
											"name": "POP"
										},
										{
											"begin": 597,
											"end": 598,
											"name": "DUP3"
										},
										{
											"begin": 592,
											"end": 593,
											"name": "DUP3"
										},
										{
											"begin": 587,
											"end": 588,
											"name": "DUP4"
										},
										{
											"begin": 583,
											"end": 584,
											"name": "DUP6"
										},
										{
											"begin": 583,
											"end": 588,
											"name": "MUL"
										},
										{
											"begin": 579,
											"end": 588,
											"name": "SWAP3"
										},
										{
											"begin": 579,
											"end": 588,
											"name": "POP"
										},
										{
											"begin": 579,
											"end": 588,
											"name": "DUP3"
										},
										{
											"begin": 578,
											"end": 593,
											"name": "DUP2"
										},
										{
											"begin": 578,
											"end": 593,
											"name": "PUSH [tag]",
											"value": "274"
										},
										{
											"begin": 578,
											"end": 593,
											"name": "JUMPI"
										},
										{
											"begin": 578,
											"end": 593,
											"name": "INVALID"
										},
										{
											"begin": 578,
											"end": 593,
											"name": "tag",
											"value": "274"
										},
										{
											"begin": 578,
											"end": 593,
											"name": "JUMPDEST"
										},
										{
											"begin": 578,
											"end": 593,
											"name": "DIV"
										},
										{
											"begin": 578,
											"end": 598,
											"name": "EQ"
										},
										{
											"begin": 568,
											"end": 598,
											"name": "tag",
											"value": "273"
										},
										{
											"begin": 568,
											"end": 598,
											"name": "JUMPDEST"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH [tag]",
											"value": "275"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "JUMPI"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "MLOAD"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "DUP2"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "MSTORE"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "ADD"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "DUP1"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "DUP1"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "ADD"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "DUP3"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "DUP2"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "SUB"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "DUP3"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "MSTORE"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "DUP2"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "MSTORE"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "ADD"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "DUP1"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH",
											"value": "64732D6D6174682D6D756C2D6F766572666C6F77000000000000000000000000"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "DUP2"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "MSTORE"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "POP"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "ADD"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "SWAP2"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "POP"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "POP"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "MLOAD"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "DUP1"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "SWAP2"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "SUB"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "SWAP1"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "REVERT"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "tag",
											"value": "275"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "JUMPDEST"
										},
										{
											"begin": 481,
											"end": 630,
											"name": "SWAP3"
										},
										{
											"begin": 481,
											"end": 630,
											"name": "SWAP2"
										},
										{
											"begin": 481,
											"end": 630,
											"name": "POP"
										},
										{
											"begin": 481,
											"end": 630,
											"name": "POP"
										},
										{
											"begin": 481,
											"end": 630,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 339,
											"end": 475,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 339,
											"end": 475,
											"name": "JUMPDEST"
										},
										{
											"begin": 397,
											"end": 406,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 441,
											"end": 442,
											"name": "DUP3"
										},
										{
											"begin": 435,
											"end": 436,
											"name": "DUP3"
										},
										{
											"begin": 431,
											"end": 432,
											"name": "DUP5"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "SUB"
										},
										{
											"begin": 427,
											"end": 436,
											"name": "SWAP2"
										},
										{
											"begin": 427,
											"end": 436,
											"name": "POP"
										},
										{
											"begin": 427,
											"end": 436,
											"name": "DUP2"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "GT"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "ISZERO"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH [tag]",
											"value": "277"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "JUMPI"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MLOAD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP2"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP3"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP2"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SUB"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP3"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP2"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "64732D6D6174682D7375622D756E646572666C6F770000000000000000000000"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP2"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "POP"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SWAP2"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "POP"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "POP"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MLOAD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SWAP2"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SUB"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SWAP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "REVERT"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "tag",
											"value": "277"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "JUMPDEST"
										},
										{
											"begin": 339,
											"end": 475,
											"name": "SWAP3"
										},
										{
											"begin": 339,
											"end": 475,
											"name": "SWAP2"
										},
										{
											"begin": 339,
											"end": 475,
											"name": "POP"
										},
										{
											"begin": 339,
											"end": 475,
											"name": "POP"
										},
										{
											"begin": 339,
											"end": 475,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2616,
											"end": 3461,
											"name": "tag",
											"value": "156"
										},
										{
											"begin": 2616,
											"end": 3461,
											"name": "JUMPDEST"
										},
										{
											"begin": 2747,
											"end": 2749,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2727,
											"end": 2750,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2727,
											"end": 2750,
											"name": "AND"
										},
										{
											"begin": 2727,
											"end": 2735,
											"name": "DUP5"
										},
										{
											"begin": 2727,
											"end": 2750,
											"name": "GT"
										},
										{
											"begin": 2727,
											"end": 2750,
											"name": "ISZERO"
										},
										{
											"begin": 2727,
											"end": 2777,
											"name": "DUP1"
										},
										{
											"begin": 2727,
											"end": 2777,
											"name": "ISZERO"
										},
										{
											"begin": 2727,
											"end": 2777,
											"name": "PUSH [tag]",
											"value": "279"
										},
										{
											"begin": 2727,
											"end": 2777,
											"name": "JUMPI"
										},
										{
											"begin": 2727,
											"end": 2777,
											"name": "POP"
										},
										{
											"begin": 2774,
											"end": 2776,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2754,
											"end": 2777,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2754,
											"end": 2777,
											"name": "AND"
										},
										{
											"begin": 2754,
											"end": 2762,
											"name": "DUP4"
										},
										{
											"begin": 2754,
											"end": 2777,
											"name": "GT"
										},
										{
											"begin": 2754,
											"end": 2777,
											"name": "ISZERO"
										},
										{
											"begin": 2727,
											"end": 2777,
											"name": "tag",
											"value": "279"
										},
										{
											"begin": 2727,
											"end": 2777,
											"name": "JUMPDEST"
										},
										{
											"begin": 2719,
											"end": 2799,
											"name": "PUSH [tag]",
											"value": "280"
										},
										{
											"begin": 2719,
											"end": 2799,
											"name": "JUMPI"
										},
										{
											"begin": 2719,
											"end": 2799,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2719,
											"end": 2799,
											"name": "MLOAD"
										},
										{
											"begin": 2719,
											"end": 2799,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2719,
											"end": 2799,
											"name": "DUP2"
										},
										{
											"begin": 2719,
											"end": 2799,
											"name": "MSTORE"
										},
										{
											"begin": 2719,
											"end": 2799,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2719,
											"end": 2799,
											"name": "ADD"
										},
										{
											"begin": 2719,
											"end": 2799,
											"name": "DUP1"
										},
										{
											"begin": 2719,
											"end": 2799,
											"name": "DUP1"
										},
										{
											"begin": 2719,
											"end": 2799,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2719,
											"end": 2799,
											"name": "ADD"
										},
										{
											"begin": 2719,
											"end": 2799,
											"name": "DUP3"
										},
										{
											"begin": 2719,
											"end": 2799,
											"name": "DUP2"
										},
										{
											"begin": 2719,
											"end": 2799,
											"name": "SUB"
										},
										{
											"begin": 2719,
											"end": 2799,
											"name": "DUP3"
										},
										{
											"begin": 2719,
											"end": 2799,
											"name": "MSTORE"
										},
										{
											"begin": 2719,
											"end": 2799,
											"name": "PUSH",
											"value": "11"
										},
										{
											"begin": 2719,
											"end": 2799,
											"name": "DUP2"
										},
										{
											"begin": 2719,
											"end": 2799,
											"name": "MSTORE"
										},
										{
											"begin": 2719,
											"end": 2799,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2719,
											"end": 2799,
											"name": "ADD"
										},
										{
											"begin": 2719,
											"end": 2799,
											"name": "DUP1"
										},
										{
											"begin": 2719,
											"end": 2799,
											"name": "PUSH",
											"value": "50616E63616B653A204F564552464C4F57000000000000000000000000000000"
										},
										{
											"begin": 2719,
											"end": 2799,
											"name": "DUP2"
										},
										{
											"begin": 2719,
											"end": 2799,
											"name": "MSTORE"
										},
										{
											"begin": 2719,
											"end": 2799,
											"name": "POP"
										},
										{
											"begin": 2719,
											"end": 2799,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2719,
											"end": 2799,
											"name": "ADD"
										},
										{
											"begin": 2719,
											"end": 2799,
											"name": "SWAP2"
										},
										{
											"begin": 2719,
											"end": 2799,
											"name": "POP"
										},
										{
											"begin": 2719,
											"end": 2799,
											"name": "POP"
										},
										{
											"begin": 2719,
											"end": 2799,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2719,
											"end": 2799,
											"name": "MLOAD"
										},
										{
											"begin": 2719,
											"end": 2799,
											"name": "DUP1"
										},
										{
											"begin": 2719,
											"end": 2799,
											"name": "SWAP2"
										},
										{
											"begin": 2719,
											"end": 2799,
											"name": "SUB"
										},
										{
											"begin": 2719,
											"end": 2799,
											"name": "SWAP1"
										},
										{
											"begin": 2719,
											"end": 2799,
											"name": "REVERT"
										},
										{
											"begin": 2719,
											"end": 2799,
											"name": "tag",
											"value": "280"
										},
										{
											"begin": 2719,
											"end": 2799,
											"name": "JUMPDEST"
										},
										{
											"begin": 2809,
											"end": 2830,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2858,
											"end": 2863,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 2840,
											"end": 2855,
											"name": "TIMESTAMP"
										},
										{
											"begin": 2840,
											"end": 2863,
											"name": "DUP2"
										},
										{
											"begin": 2840,
											"end": 2863,
											"name": "PUSH [tag]",
											"value": "281"
										},
										{
											"begin": 2840,
											"end": 2863,
											"name": "JUMPI"
										},
										{
											"begin": 2840,
											"end": 2863,
											"name": "INVALID"
										},
										{
											"begin": 2840,
											"end": 2863,
											"name": "tag",
											"value": "281"
										},
										{
											"begin": 2840,
											"end": 2863,
											"name": "JUMPDEST"
										},
										{
											"begin": 2840,
											"end": 2863,
											"name": "MOD"
										},
										{
											"begin": 2809,
											"end": 2864,
											"name": "SWAP1"
										},
										{
											"begin": 2809,
											"end": 2864,
											"name": "POP"
										},
										{
											"begin": 2874,
											"end": 2892,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2912,
											"end": 2930,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 2912,
											"end": 2930,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 2912,
											"end": 2930,
											"name": "SWAP1"
										},
										{
											"begin": 2912,
											"end": 2930,
											"name": "SLOAD"
										},
										{
											"begin": 2912,
											"end": 2930,
											"name": "SWAP1"
										},
										{
											"begin": 2912,
											"end": 2930,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2912,
											"end": 2930,
											"name": "EXP"
										},
										{
											"begin": 2912,
											"end": 2930,
											"name": "SWAP1"
										},
										{
											"begin": 2912,
											"end": 2930,
											"name": "DIV"
										},
										{
											"begin": 2912,
											"end": 2930,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2912,
											"end": 2930,
											"name": "AND"
										},
										{
											"begin": 2895,
											"end": 2909,
											"name": "DUP3"
										},
										{
											"begin": 2895,
											"end": 2930,
											"name": "SUB"
										},
										{
											"begin": 2874,
											"end": 2930,
											"name": "SWAP1"
										},
										{
											"begin": 2874,
											"end": 2930,
											"name": "POP"
										},
										{
											"begin": 2981,
											"end": 2982,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2967,
											"end": 2978,
											"name": "DUP2"
										},
										{
											"begin": 2967,
											"end": 2982,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2967,
											"end": 2982,
											"name": "AND"
										},
										{
											"begin": 2967,
											"end": 2982,
											"name": "GT"
										},
										{
											"begin": 2967,
											"end": 3000,
											"name": "DUP1"
										},
										{
											"begin": 2967,
											"end": 3000,
											"name": "ISZERO"
										},
										{
											"begin": 2967,
											"end": 3000,
											"name": "PUSH [tag]",
											"value": "282"
										},
										{
											"begin": 2967,
											"end": 3000,
											"name": "JUMPI"
										},
										{
											"begin": 2967,
											"end": 3000,
											"name": "POP"
										},
										{
											"begin": 2999,
											"end": 3000,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2986,
											"end": 2995,
											"name": "DUP5"
										},
										{
											"begin": 2986,
											"end": 3000,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2986,
											"end": 3000,
											"name": "AND"
										},
										{
											"begin": 2986,
											"end": 3000,
											"name": "EQ"
										},
										{
											"begin": 2986,
											"end": 3000,
											"name": "ISZERO"
										},
										{
											"begin": 2967,
											"end": 3000,
											"name": "tag",
											"value": "282"
										},
										{
											"begin": 2967,
											"end": 3000,
											"name": "JUMPDEST"
										},
										{
											"begin": 2967,
											"end": 3018,
											"name": "DUP1"
										},
										{
											"begin": 2967,
											"end": 3018,
											"name": "ISZERO"
										},
										{
											"begin": 2967,
											"end": 3018,
											"name": "PUSH [tag]",
											"value": "283"
										},
										{
											"begin": 2967,
											"end": 3018,
											"name": "JUMPI"
										},
										{
											"begin": 2967,
											"end": 3018,
											"name": "POP"
										},
										{
											"begin": 3017,
											"end": 3018,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3013,
											"name": "DUP4"
										},
										{
											"begin": 3004,
											"end": 3018,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3018,
											"name": "AND"
										},
										{
											"begin": 3004,
											"end": 3018,
											"name": "EQ"
										},
										{
											"begin": 3004,
											"end": 3018,
											"name": "ISZERO"
										},
										{
											"begin": 2967,
											"end": 3018,
											"name": "tag",
											"value": "283"
										},
										{
											"begin": 2967,
											"end": 3018,
											"name": "JUMPDEST"
										},
										{
											"begin": 2963,
											"end": 3295,
											"name": "ISZERO"
										},
										{
											"begin": 2963,
											"end": 3295,
											"name": "PUSH [tag]",
											"value": "284"
										},
										{
											"begin": 2963,
											"end": 3295,
											"name": "JUMPI"
										},
										{
											"begin": 3171,
											"end": 3182,
											"name": "DUP1"
										},
										{
											"begin": 3118,
											"end": 3182,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3118,
											"end": 3182,
											"name": "AND"
										},
										{
											"begin": 3123,
											"end": 3167,
											"name": "PUSH [tag]",
											"value": "285"
										},
										{
											"begin": 3157,
											"end": 3166,
											"name": "DUP6"
										},
										{
											"begin": 3123,
											"end": 3150,
											"name": "PUSH [tag]",
											"value": "286"
										},
										{
											"begin": 3140,
											"end": 3149,
											"name": "DUP7"
										},
										{
											"begin": 3123,
											"end": 3139,
											"name": "PUSH [tag]",
											"value": "287"
										},
										{
											"begin": 3123,
											"end": 3150,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3123,
											"end": 3150,
											"name": "tag",
											"value": "286"
										},
										{
											"begin": 3123,
											"end": 3150,
											"name": "JUMPDEST"
										},
										{
											"begin": 3123,
											"end": 3156,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3123,
											"end": 3156,
											"name": "AND"
										},
										{
											"begin": 3123,
											"end": 3156,
											"name": "PUSH [tag]",
											"value": "288"
										},
										{
											"begin": 3123,
											"end": 3156,
											"name": "SWAP1"
										},
										{
											"begin": 3123,
											"end": 3167,
											"name": "SWAP2"
										},
										{
											"begin": 3123,
											"end": 3167,
											"name": "SWAP1"
										},
										{
											"begin": 3123,
											"end": 3167,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3123,
											"end": 3167,
											"name": "AND"
										},
										{
											"begin": 3123,
											"end": 3167,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3123,
											"end": 3167,
											"name": "tag",
											"value": "285"
										},
										{
											"begin": 3123,
											"end": 3167,
											"name": "JUMPDEST"
										},
										{
											"begin": 3118,
											"end": 3168,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3118,
											"end": 3168,
											"name": "AND"
										},
										{
											"begin": 3118,
											"end": 3182,
											"name": "MUL"
										},
										{
											"begin": 3094,
											"end": 3114,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 3094,
											"end": 3114,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3094,
											"end": 3182,
											"name": "DUP3"
										},
										{
											"begin": 3094,
											"end": 3182,
											"name": "DUP3"
										},
										{
											"begin": 3094,
											"end": 3182,
											"name": "SLOAD"
										},
										{
											"begin": 3094,
											"end": 3182,
											"name": "ADD"
										},
										{
											"begin": 3094,
											"end": 3182,
											"name": "SWAP3"
										},
										{
											"begin": 3094,
											"end": 3182,
											"name": "POP"
										},
										{
											"begin": 3094,
											"end": 3182,
											"name": "POP"
										},
										{
											"begin": 3094,
											"end": 3182,
											"name": "DUP2"
										},
										{
											"begin": 3094,
											"end": 3182,
											"name": "SWAP1"
										},
										{
											"begin": 3094,
											"end": 3182,
											"name": "SSTORE"
										},
										{
											"begin": 3094,
											"end": 3182,
											"name": "POP"
										},
										{
											"begin": 3273,
											"end": 3284,
											"name": "DUP1"
										},
										{
											"begin": 3220,
											"end": 3284,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3220,
											"end": 3284,
											"name": "AND"
										},
										{
											"begin": 3225,
											"end": 3269,
											"name": "PUSH [tag]",
											"value": "289"
										},
										{
											"begin": 3259,
											"end": 3268,
											"name": "DUP5"
										},
										{
											"begin": 3225,
											"end": 3252,
											"name": "PUSH [tag]",
											"value": "290"
										},
										{
											"begin": 3242,
											"end": 3251,
											"name": "DUP8"
										},
										{
											"begin": 3225,
											"end": 3241,
											"name": "PUSH [tag]",
											"value": "287"
										},
										{
											"begin": 3225,
											"end": 3252,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3225,
											"end": 3252,
											"name": "tag",
											"value": "290"
										},
										{
											"begin": 3225,
											"end": 3252,
											"name": "JUMPDEST"
										},
										{
											"begin": 3225,
											"end": 3258,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3225,
											"end": 3258,
											"name": "AND"
										},
										{
											"begin": 3225,
											"end": 3258,
											"name": "PUSH [tag]",
											"value": "288"
										},
										{
											"begin": 3225,
											"end": 3258,
											"name": "SWAP1"
										},
										{
											"begin": 3225,
											"end": 3269,
											"name": "SWAP2"
										},
										{
											"begin": 3225,
											"end": 3269,
											"name": "SWAP1"
										},
										{
											"begin": 3225,
											"end": 3269,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3225,
											"end": 3269,
											"name": "AND"
										},
										{
											"begin": 3225,
											"end": 3269,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3225,
											"end": 3269,
											"name": "tag",
											"value": "289"
										},
										{
											"begin": 3225,
											"end": 3269,
											"name": "JUMPDEST"
										},
										{
											"begin": 3220,
											"end": 3270,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3220,
											"end": 3270,
											"name": "AND"
										},
										{
											"begin": 3220,
											"end": 3284,
											"name": "MUL"
										},
										{
											"begin": 3196,
											"end": 3216,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 3196,
											"end": 3216,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3196,
											"end": 3284,
											"name": "DUP3"
										},
										{
											"begin": 3196,
											"end": 3284,
											"name": "DUP3"
										},
										{
											"begin": 3196,
											"end": 3284,
											"name": "SLOAD"
										},
										{
											"begin": 3196,
											"end": 3284,
											"name": "ADD"
										},
										{
											"begin": 3196,
											"end": 3284,
											"name": "SWAP3"
										},
										{
											"begin": 3196,
											"end": 3284,
											"name": "POP"
										},
										{
											"begin": 3196,
											"end": 3284,
											"name": "POP"
										},
										{
											"begin": 3196,
											"end": 3284,
											"name": "DUP2"
										},
										{
											"begin": 3196,
											"end": 3284,
											"name": "SWAP1"
										},
										{
											"begin": 3196,
											"end": 3284,
											"name": "SSTORE"
										},
										{
											"begin": 3196,
											"end": 3284,
											"name": "POP"
										},
										{
											"begin": 2963,
											"end": 3295,
											"name": "tag",
											"value": "284"
										},
										{
											"begin": 2963,
											"end": 3295,
											"name": "JUMPDEST"
										},
										{
											"begin": 3323,
											"end": 3331,
											"name": "DUP6"
										},
										{
											"begin": 3304,
											"end": 3312,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 3304,
											"end": 3312,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3304,
											"end": 3332,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3304,
											"end": 3332,
											"name": "EXP"
										},
										{
											"begin": 3304,
											"end": 3332,
											"name": "DUP2"
										},
										{
											"begin": 3304,
											"end": 3332,
											"name": "SLOAD"
										},
										{
											"begin": 3304,
											"end": 3332,
											"name": "DUP2"
										},
										{
											"begin": 3304,
											"end": 3332,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3304,
											"end": 3332,
											"name": "MUL"
										},
										{
											"begin": 3304,
											"end": 3332,
											"name": "NOT"
										},
										{
											"begin": 3304,
											"end": 3332,
											"name": "AND"
										},
										{
											"begin": 3304,
											"end": 3332,
											"name": "SWAP1"
										},
										{
											"begin": 3304,
											"end": 3332,
											"name": "DUP4"
										},
										{
											"begin": 3304,
											"end": 3332,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3304,
											"end": 3332,
											"name": "AND"
										},
										{
											"begin": 3304,
											"end": 3332,
											"name": "MUL"
										},
										{
											"begin": 3304,
											"end": 3332,
											"name": "OR"
										},
										{
											"begin": 3304,
											"end": 3332,
											"name": "SWAP1"
										},
										{
											"begin": 3304,
											"end": 3332,
											"name": "SSTORE"
										},
										{
											"begin": 3304,
											"end": 3332,
											"name": "POP"
										},
										{
											"begin": 3361,
											"end": 3369,
											"name": "DUP5"
										},
										{
											"begin": 3342,
											"end": 3350,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 3342,
											"end": 3350,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 3342,
											"end": 3370,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3342,
											"end": 3370,
											"name": "EXP"
										},
										{
											"begin": 3342,
											"end": 3370,
											"name": "DUP2"
										},
										{
											"begin": 3342,
											"end": 3370,
											"name": "SLOAD"
										},
										{
											"begin": 3342,
											"end": 3370,
											"name": "DUP2"
										},
										{
											"begin": 3342,
											"end": 3370,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3342,
											"end": 3370,
											"name": "MUL"
										},
										{
											"begin": 3342,
											"end": 3370,
											"name": "NOT"
										},
										{
											"begin": 3342,
											"end": 3370,
											"name": "AND"
										},
										{
											"begin": 3342,
											"end": 3370,
											"name": "SWAP1"
										},
										{
											"begin": 3342,
											"end": 3370,
											"name": "DUP4"
										},
										{
											"begin": 3342,
											"end": 3370,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3342,
											"end": 3370,
											"name": "AND"
										},
										{
											"begin": 3342,
											"end": 3370,
											"name": "MUL"
										},
										{
											"begin": 3342,
											"end": 3370,
											"name": "OR"
										},
										{
											"begin": 3342,
											"end": 3370,
											"name": "SWAP1"
										},
										{
											"begin": 3342,
											"end": 3370,
											"name": "SSTORE"
										},
										{
											"begin": 3342,
											"end": 3370,
											"name": "POP"
										},
										{
											"begin": 3401,
											"end": 3415,
											"name": "DUP2"
										},
										{
											"begin": 3380,
											"end": 3398,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 3380,
											"end": 3398,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 3380,
											"end": 3415,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3380,
											"end": 3415,
											"name": "EXP"
										},
										{
											"begin": 3380,
											"end": 3415,
											"name": "DUP2"
										},
										{
											"begin": 3380,
											"end": 3415,
											"name": "SLOAD"
										},
										{
											"begin": 3380,
											"end": 3415,
											"name": "DUP2"
										},
										{
											"begin": 3380,
											"end": 3415,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3380,
											"end": 3415,
											"name": "MUL"
										},
										{
											"begin": 3380,
											"end": 3415,
											"name": "NOT"
										},
										{
											"begin": 3380,
											"end": 3415,
											"name": "AND"
										},
										{
											"begin": 3380,
											"end": 3415,
											"name": "SWAP1"
										},
										{
											"begin": 3380,
											"end": 3415,
											"name": "DUP4"
										},
										{
											"begin": 3380,
											"end": 3415,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3380,
											"end": 3415,
											"name": "AND"
										},
										{
											"begin": 3380,
											"end": 3415,
											"name": "MUL"
										},
										{
											"begin": 3380,
											"end": 3415,
											"name": "OR"
										},
										{
											"begin": 3380,
											"end": 3415,
											"name": "SWAP1"
										},
										{
											"begin": 3380,
											"end": 3415,
											"name": "SSTORE"
										},
										{
											"begin": 3380,
											"end": 3415,
											"name": "POP"
										},
										{
											"begin": 3430,
											"end": 3454,
											"name": "PUSH",
											"value": "1C411E9A96E071241C2F21F7726B17AE89E3CAB4C78BE50E062B03A9FFFBBAD1"
										},
										{
											"begin": 3435,
											"end": 3443,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 3435,
											"end": 3443,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3443,
											"name": "SWAP1"
										},
										{
											"begin": 3435,
											"end": 3443,
											"name": "SLOAD"
										},
										{
											"begin": 3435,
											"end": 3443,
											"name": "SWAP1"
										},
										{
											"begin": 3435,
											"end": 3443,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3435,
											"end": 3443,
											"name": "EXP"
										},
										{
											"begin": 3435,
											"end": 3443,
											"name": "SWAP1"
										},
										{
											"begin": 3435,
											"end": 3443,
											"name": "DIV"
										},
										{
											"begin": 3435,
											"end": 3443,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3435,
											"end": 3443,
											"name": "AND"
										},
										{
											"begin": 3445,
											"end": 3453,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 3445,
											"end": 3453,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 3445,
											"end": 3453,
											"name": "SWAP1"
										},
										{
											"begin": 3445,
											"end": 3453,
											"name": "SLOAD"
										},
										{
											"begin": 3445,
											"end": 3453,
											"name": "SWAP1"
										},
										{
											"begin": 3445,
											"end": 3453,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3445,
											"end": 3453,
											"name": "EXP"
										},
										{
											"begin": 3445,
											"end": 3453,
											"name": "SWAP1"
										},
										{
											"begin": 3445,
											"end": 3453,
											"name": "DIV"
										},
										{
											"begin": 3445,
											"end": 3453,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3445,
											"end": 3453,
											"name": "AND"
										},
										{
											"begin": 3430,
											"end": 3454,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3430,
											"end": 3454,
											"name": "MLOAD"
										},
										{
											"begin": 3430,
											"end": 3454,
											"name": "DUP1"
										},
										{
											"begin": 3430,
											"end": 3454,
											"name": "DUP4"
										},
										{
											"begin": 3430,
											"end": 3454,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3430,
											"end": 3454,
											"name": "AND"
										},
										{
											"begin": 3430,
											"end": 3454,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3430,
											"end": 3454,
											"name": "AND"
										},
										{
											"begin": 3430,
											"end": 3454,
											"name": "DUP2"
										},
										{
											"begin": 3430,
											"end": 3454,
											"name": "MSTORE"
										},
										{
											"begin": 3430,
											"end": 3454,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3430,
											"end": 3454,
											"name": "ADD"
										},
										{
											"begin": 3430,
											"end": 3454,
											"name": "DUP3"
										},
										{
											"begin": 3430,
											"end": 3454,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3430,
											"end": 3454,
											"name": "AND"
										},
										{
											"begin": 3430,
											"end": 3454,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3430,
											"end": 3454,
											"name": "AND"
										},
										{
											"begin": 3430,
											"end": 3454,
											"name": "DUP2"
										},
										{
											"begin": 3430,
											"end": 3454,
											"name": "MSTORE"
										},
										{
											"begin": 3430,
											"end": 3454,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3430,
											"end": 3454,
											"name": "ADD"
										},
										{
											"begin": 3430,
											"end": 3454,
											"name": "SWAP3"
										},
										{
											"begin": 3430,
											"end": 3454,
											"name": "POP"
										},
										{
											"begin": 3430,
											"end": 3454,
											"name": "POP"
										},
										{
											"begin": 3430,
											"end": 3454,
											"name": "POP"
										},
										{
											"begin": 3430,
											"end": 3454,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3430,
											"end": 3454,
											"name": "MLOAD"
										},
										{
											"begin": 3430,
											"end": 3454,
											"name": "DUP1"
										},
										{
											"begin": 3430,
											"end": 3454,
											"name": "SWAP2"
										},
										{
											"begin": 3430,
											"end": 3454,
											"name": "SUB"
										},
										{
											"begin": 3430,
											"end": 3454,
											"name": "SWAP1"
										},
										{
											"begin": 3430,
											"end": 3454,
											"name": "LOG1"
										},
										{
											"begin": 2616,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 2616,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 2616,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 2616,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 2616,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 2616,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 2616,
											"end": 3461,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1847,
											"end": 2046,
											"name": "tag",
											"value": "160"
										},
										{
											"begin": 1847,
											"end": 2046,
											"name": "JUMPDEST"
										},
										{
											"begin": 1988,
											"end": 1993,
											"name": "DUP1"
										},
										{
											"begin": 1960,
											"end": 1969,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1960,
											"end": 1976,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1970,
											"end": 1975,
											"name": "DUP6"
										},
										{
											"begin": 1960,
											"end": 1976,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1960,
											"end": 1976,
											"name": "AND"
										},
										{
											"begin": 1960,
											"end": 1976,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1960,
											"end": 1976,
											"name": "AND"
										},
										{
											"begin": 1960,
											"end": 1976,
											"name": "DUP2"
										},
										{
											"begin": 1960,
											"end": 1976,
											"name": "MSTORE"
										},
										{
											"begin": 1960,
											"end": 1976,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1960,
											"end": 1976,
											"name": "ADD"
										},
										{
											"begin": 1960,
											"end": 1976,
											"name": "SWAP1"
										},
										{
											"begin": 1960,
											"end": 1976,
											"name": "DUP2"
										},
										{
											"begin": 1960,
											"end": 1976,
											"name": "MSTORE"
										},
										{
											"begin": 1960,
											"end": 1976,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1960,
											"end": 1976,
											"name": "ADD"
										},
										{
											"begin": 1960,
											"end": 1976,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 1976,
											"name": "KECCAK256"
										},
										{
											"begin": 1960,
											"end": 1985,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1977,
											"end": 1984,
											"name": "DUP5"
										},
										{
											"begin": 1960,
											"end": 1985,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1960,
											"end": 1985,
											"name": "AND"
										},
										{
											"begin": 1960,
											"end": 1985,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1960,
											"end": 1985,
											"name": "AND"
										},
										{
											"begin": 1960,
											"end": 1985,
											"name": "DUP2"
										},
										{
											"begin": 1960,
											"end": 1985,
											"name": "MSTORE"
										},
										{
											"begin": 1960,
											"end": 1985,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1960,
											"end": 1985,
											"name": "ADD"
										},
										{
											"begin": 1960,
											"end": 1985,
											"name": "SWAP1"
										},
										{
											"begin": 1960,
											"end": 1985,
											"name": "DUP2"
										},
										{
											"begin": 1960,
											"end": 1985,
											"name": "MSTORE"
										},
										{
											"begin": 1960,
											"end": 1985,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1960,
											"end": 1985,
											"name": "ADD"
										},
										{
											"begin": 1960,
											"end": 1985,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 1985,
											"name": "KECCAK256"
										},
										{
											"begin": 1960,
											"end": 1993,
											"name": "DUP2"
										},
										{
											"begin": 1960,
											"end": 1993,
											"name": "SWAP1"
										},
										{
											"begin": 1960,
											"end": 1993,
											"name": "SSTORE"
										},
										{
											"begin": 1960,
											"end": 1993,
											"name": "POP"
										},
										{
											"begin": 2024,
											"end": 2031,
											"name": "DUP2"
										},
										{
											"begin": 2008,
											"end": 2039,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2008,
											"end": 2039,
											"name": "AND"
										},
										{
											"begin": 2017,
											"end": 2022,
											"name": "DUP4"
										},
										{
											"begin": 2008,
											"end": 2039,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2008,
											"end": 2039,
											"name": "AND"
										},
										{
											"begin": 2008,
											"end": 2039,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 2033,
											"end": 2038,
											"name": "DUP4"
										},
										{
											"begin": 2008,
											"end": 2039,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2008,
											"end": 2039,
											"name": "MLOAD"
										},
										{
											"begin": 2008,
											"end": 2039,
											"name": "DUP1"
										},
										{
											"begin": 2008,
											"end": 2039,
											"name": "DUP3"
										},
										{
											"begin": 2008,
											"end": 2039,
											"name": "DUP2"
										},
										{
											"begin": 2008,
											"end": 2039,
											"name": "MSTORE"
										},
										{
											"begin": 2008,
											"end": 2039,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2008,
											"end": 2039,
											"name": "ADD"
										},
										{
											"begin": 2008,
											"end": 2039,
											"name": "SWAP2"
										},
										{
											"begin": 2008,
											"end": 2039,
											"name": "POP"
										},
										{
											"begin": 2008,
											"end": 2039,
											"name": "POP"
										},
										{
											"begin": 2008,
											"end": 2039,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2008,
											"end": 2039,
											"name": "MLOAD"
										},
										{
											"begin": 2008,
											"end": 2039,
											"name": "DUP1"
										},
										{
											"begin": 2008,
											"end": 2039,
											"name": "SWAP2"
										},
										{
											"begin": 2008,
											"end": 2039,
											"name": "SUB"
										},
										{
											"begin": 2008,
											"end": 2039,
											"name": "SWAP1"
										},
										{
											"begin": 2008,
											"end": 2039,
											"name": "LOG3"
										},
										{
											"begin": 1847,
											"end": 2046,
											"name": "POP"
										},
										{
											"begin": 1847,
											"end": 2046,
											"name": "POP"
										},
										{
											"begin": 1847,
											"end": 2046,
											"name": "POP"
										},
										{
											"begin": 1847,
											"end": 2046,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2052,
											"end": 2301,
											"name": "tag",
											"value": "165"
										},
										{
											"begin": 2052,
											"end": 2301,
											"name": "JUMPDEST"
										},
										{
											"begin": 2178,
											"end": 2204,
											"name": "PUSH [tag]",
											"value": "293"
										},
										{
											"begin": 2198,
											"end": 2203,
											"name": "DUP2"
										},
										{
											"begin": 2178,
											"end": 2187,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2178,
											"end": 2193,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2188,
											"end": 2192,
											"name": "DUP7"
										},
										{
											"begin": 2178,
											"end": 2193,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2178,
											"end": 2193,
											"name": "AND"
										},
										{
											"begin": 2178,
											"end": 2193,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2178,
											"end": 2193,
											"name": "AND"
										},
										{
											"begin": 2178,
											"end": 2193,
											"name": "DUP2"
										},
										{
											"begin": 2178,
											"end": 2193,
											"name": "MSTORE"
										},
										{
											"begin": 2178,
											"end": 2193,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2178,
											"end": 2193,
											"name": "ADD"
										},
										{
											"begin": 2178,
											"end": 2193,
											"name": "SWAP1"
										},
										{
											"begin": 2178,
											"end": 2193,
											"name": "DUP2"
										},
										{
											"begin": 2178,
											"end": 2193,
											"name": "MSTORE"
										},
										{
											"begin": 2178,
											"end": 2193,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2178,
											"end": 2193,
											"name": "ADD"
										},
										{
											"begin": 2178,
											"end": 2193,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2178,
											"end": 2193,
											"name": "KECCAK256"
										},
										{
											"begin": 2178,
											"end": 2193,
											"name": "SLOAD"
										},
										{
											"begin": 2178,
											"end": 2197,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 2178,
											"end": 2197,
											"name": "SWAP1"
										},
										{
											"begin": 2178,
											"end": 2204,
											"name": "SWAP2"
										},
										{
											"begin": 2178,
											"end": 2204,
											"name": "SWAP1"
										},
										{
											"begin": 2178,
											"end": 2204,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2178,
											"end": 2204,
											"name": "AND"
										},
										{
											"begin": 2178,
											"end": 2204,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2178,
											"end": 2204,
											"name": "tag",
											"value": "293"
										},
										{
											"begin": 2178,
											"end": 2204,
											"name": "JUMPDEST"
										},
										{
											"begin": 2160,
											"end": 2169,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2160,
											"end": 2175,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2170,
											"end": 2174,
											"name": "DUP6"
										},
										{
											"begin": 2160,
											"end": 2175,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2160,
											"end": 2175,
											"name": "AND"
										},
										{
											"begin": 2160,
											"end": 2175,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2160,
											"end": 2175,
											"name": "AND"
										},
										{
											"begin": 2160,
											"end": 2175,
											"name": "DUP2"
										},
										{
											"begin": 2160,
											"end": 2175,
											"name": "MSTORE"
										},
										{
											"begin": 2160,
											"end": 2175,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2160,
											"end": 2175,
											"name": "ADD"
										},
										{
											"begin": 2160,
											"end": 2175,
											"name": "SWAP1"
										},
										{
											"begin": 2160,
											"end": 2175,
											"name": "DUP2"
										},
										{
											"begin": 2160,
											"end": 2175,
											"name": "MSTORE"
										},
										{
											"begin": 2160,
											"end": 2175,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2160,
											"end": 2175,
											"name": "ADD"
										},
										{
											"begin": 2160,
											"end": 2175,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2160,
											"end": 2175,
											"name": "KECCAK256"
										},
										{
											"begin": 2160,
											"end": 2204,
											"name": "DUP2"
										},
										{
											"begin": 2160,
											"end": 2204,
											"name": "SWAP1"
										},
										{
											"begin": 2160,
											"end": 2204,
											"name": "SSTORE"
										},
										{
											"begin": 2160,
											"end": 2204,
											"name": "POP"
										},
										{
											"begin": 2230,
											"end": 2254,
											"name": "PUSH [tag]",
											"value": "294"
										},
										{
											"begin": 2248,
											"end": 2253,
											"name": "DUP2"
										},
										{
											"begin": 2230,
											"end": 2239,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2230,
											"end": 2243,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2240,
											"end": 2242,
											"name": "DUP6"
										},
										{
											"begin": 2230,
											"end": 2243,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2230,
											"end": 2243,
											"name": "AND"
										},
										{
											"begin": 2230,
											"end": 2243,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2230,
											"end": 2243,
											"name": "AND"
										},
										{
											"begin": 2230,
											"end": 2243,
											"name": "DUP2"
										},
										{
											"begin": 2230,
											"end": 2243,
											"name": "MSTORE"
										},
										{
											"begin": 2230,
											"end": 2243,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2230,
											"end": 2243,
											"name": "ADD"
										},
										{
											"begin": 2230,
											"end": 2243,
											"name": "SWAP1"
										},
										{
											"begin": 2230,
											"end": 2243,
											"name": "DUP2"
										},
										{
											"begin": 2230,
											"end": 2243,
											"name": "MSTORE"
										},
										{
											"begin": 2230,
											"end": 2243,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2230,
											"end": 2243,
											"name": "ADD"
										},
										{
											"begin": 2230,
											"end": 2243,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2230,
											"end": 2243,
											"name": "KECCAK256"
										},
										{
											"begin": 2230,
											"end": 2243,
											"name": "SLOAD"
										},
										{
											"begin": 2230,
											"end": 2247,
											"name": "PUSH [tag]",
											"value": "295"
										},
										{
											"begin": 2230,
											"end": 2247,
											"name": "SWAP1"
										},
										{
											"begin": 2230,
											"end": 2254,
											"name": "SWAP2"
										},
										{
											"begin": 2230,
											"end": 2254,
											"name": "SWAP1"
										},
										{
											"begin": 2230,
											"end": 2254,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2230,
											"end": 2254,
											"name": "AND"
										},
										{
											"begin": 2230,
											"end": 2254,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2230,
											"end": 2254,
											"name": "tag",
											"value": "294"
										},
										{
											"begin": 2230,
											"end": 2254,
											"name": "JUMPDEST"
										},
										{
											"begin": 2214,
											"end": 2223,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2214,
											"end": 2227,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2224,
											"end": 2226,
											"name": "DUP5"
										},
										{
											"begin": 2214,
											"end": 2227,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2214,
											"end": 2227,
											"name": "AND"
										},
										{
											"begin": 2214,
											"end": 2227,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2214,
											"end": 2227,
											"name": "AND"
										},
										{
											"begin": 2214,
											"end": 2227,
											"name": "DUP2"
										},
										{
											"begin": 2214,
											"end": 2227,
											"name": "MSTORE"
										},
										{
											"begin": 2214,
											"end": 2227,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2214,
											"end": 2227,
											"name": "ADD"
										},
										{
											"begin": 2214,
											"end": 2227,
											"name": "SWAP1"
										},
										{
											"begin": 2214,
											"end": 2227,
											"name": "DUP2"
										},
										{
											"begin": 2214,
											"end": 2227,
											"name": "MSTORE"
										},
										{
											"begin": 2214,
											"end": 2227,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2214,
											"end": 2227,
											"name": "ADD"
										},
										{
											"begin": 2214,
											"end": 2227,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2214,
											"end": 2227,
											"name": "KECCAK256"
										},
										{
											"begin": 2214,
											"end": 2254,
											"name": "DUP2"
										},
										{
											"begin": 2214,
											"end": 2254,
											"name": "SWAP1"
										},
										{
											"begin": 2214,
											"end": 2254,
											"name": "SSTORE"
										},
										{
											"begin": 2214,
											"end": 2254,
											"name": "POP"
										},
										{
											"begin": 2284,
											"end": 2286,
											"name": "DUP2"
										},
										{
											"begin": 2269,
											"end": 2294,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2269,
											"end": 2294,
											"name": "AND"
										},
										{
											"begin": 2278,
											"end": 2282,
											"name": "DUP4"
										},
										{
											"begin": 2269,
											"end": 2294,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2269,
											"end": 2294,
											"name": "AND"
										},
										{
											"begin": 2269,
											"end": 2294,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 2288,
											"end": 2293,
											"name": "DUP4"
										},
										{
											"begin": 2269,
											"end": 2294,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2269,
											"end": 2294,
											"name": "MLOAD"
										},
										{
											"begin": 2269,
											"end": 2294,
											"name": "DUP1"
										},
										{
											"begin": 2269,
											"end": 2294,
											"name": "DUP3"
										},
										{
											"begin": 2269,
											"end": 2294,
											"name": "DUP2"
										},
										{
											"begin": 2269,
											"end": 2294,
											"name": "MSTORE"
										},
										{
											"begin": 2269,
											"end": 2294,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2269,
											"end": 2294,
											"name": "ADD"
										},
										{
											"begin": 2269,
											"end": 2294,
											"name": "SWAP2"
										},
										{
											"begin": 2269,
											"end": 2294,
											"name": "POP"
										},
										{
											"begin": 2269,
											"end": 2294,
											"name": "POP"
										},
										{
											"begin": 2269,
											"end": 2294,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2269,
											"end": 2294,
											"name": "MLOAD"
										},
										{
											"begin": 2269,
											"end": 2294,
											"name": "DUP1"
										},
										{
											"begin": 2269,
											"end": 2294,
											"name": "SWAP2"
										},
										{
											"begin": 2269,
											"end": 2294,
											"name": "SUB"
										},
										{
											"begin": 2269,
											"end": 2294,
											"name": "SWAP1"
										},
										{
											"begin": 2269,
											"end": 2294,
											"name": "LOG3"
										},
										{
											"begin": 2052,
											"end": 2301,
											"name": "POP"
										},
										{
											"begin": 2052,
											"end": 2301,
											"name": "POP"
										},
										{
											"begin": 2052,
											"end": 2301,
											"name": "POP"
										},
										{
											"begin": 2052,
											"end": 2301,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3547,
											"end": 4379,
											"name": "tag",
											"value": "181"
										},
										{
											"begin": 3547,
											"end": 4379,
											"name": "JUMPDEST"
										},
										{
											"begin": 3620,
											"end": 3630,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3642,
											"end": 3655,
											"name": "DUP1"
										},
										{
											"begin": 3674,
											"end": 3681,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 3674,
											"end": 3681,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3674,
											"end": 3681,
											"name": "SWAP1"
										},
										{
											"begin": 3674,
											"end": 3681,
											"name": "SLOAD"
										},
										{
											"begin": 3674,
											"end": 3681,
											"name": "SWAP1"
										},
										{
											"begin": 3674,
											"end": 3681,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3674,
											"end": 3681,
											"name": "EXP"
										},
										{
											"begin": 3674,
											"end": 3681,
											"name": "SWAP1"
										},
										{
											"begin": 3674,
											"end": 3681,
											"name": "DIV"
										},
										{
											"begin": 3674,
											"end": 3681,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3674,
											"end": 3681,
											"name": "AND"
										},
										{
											"begin": 3658,
											"end": 3688,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3658,
											"end": 3688,
											"name": "AND"
										},
										{
											"begin": 3658,
											"end": 3688,
											"name": "PUSH",
											"value": "17E7E58"
										},
										{
											"begin": 3658,
											"end": 3690,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3658,
											"end": 3690,
											"name": "MLOAD"
										},
										{
											"begin": 3658,
											"end": 3690,
											"name": "DUP2"
										},
										{
											"begin": 3658,
											"end": 3690,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3658,
											"end": 3690,
											"name": "AND"
										},
										{
											"begin": 3658,
											"end": 3690,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 3658,
											"end": 3690,
											"name": "SHL"
										},
										{
											"begin": 3658,
											"end": 3690,
											"name": "DUP2"
										},
										{
											"begin": 3658,
											"end": 3690,
											"name": "MSTORE"
										},
										{
											"begin": 3658,
											"end": 3690,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3658,
											"end": 3690,
											"name": "ADD"
										},
										{
											"begin": 3658,
											"end": 3690,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3658,
											"end": 3690,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3658,
											"end": 3690,
											"name": "MLOAD"
										},
										{
											"begin": 3658,
											"end": 3690,
											"name": "DUP1"
										},
										{
											"begin": 3658,
											"end": 3690,
											"name": "DUP4"
										},
										{
											"begin": 3658,
											"end": 3690,
											"name": "SUB"
										},
										{
											"begin": 3658,
											"end": 3690,
											"name": "DUP2"
										},
										{
											"begin": 3658,
											"end": 3690,
											"name": "DUP7"
										},
										{
											"begin": 3658,
											"end": 3690,
											"name": "DUP1"
										},
										{
											"begin": 3658,
											"end": 3690,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 3658,
											"end": 3690,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "297"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "297"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3658,
											"end": 3690,
											"name": "POP"
										},
										{
											"begin": 3658,
											"end": 3690,
											"name": "GAS"
										},
										{
											"begin": 3658,
											"end": 3690,
											"name": "STATICCALL"
										},
										{
											"begin": 3658,
											"end": 3690,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "298"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "298"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3658,
											"end": 3690,
											"name": "POP"
										},
										{
											"begin": 3658,
											"end": 3690,
											"name": "POP"
										},
										{
											"begin": 3658,
											"end": 3690,
											"name": "POP"
										},
										{
											"begin": 3658,
											"end": 3690,
											"name": "POP"
										},
										{
											"begin": 3658,
											"end": 3690,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3658,
											"end": 3690,
											"name": "MLOAD"
										},
										{
											"begin": 3658,
											"end": 3690,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "299"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "299"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3658,
											"end": 3690,
											"name": "DUP2"
										},
										{
											"begin": 3658,
											"end": 3690,
											"name": "ADD"
										},
										{
											"begin": 3658,
											"end": 3690,
											"name": "SWAP1"
										},
										{
											"begin": 3658,
											"end": 3690,
											"name": "DUP1"
										},
										{
											"begin": 3658,
											"end": 3690,
											"name": "DUP1"
										},
										{
											"begin": 3658,
											"end": 3690,
											"name": "MLOAD"
										},
										{
											"begin": 3658,
											"end": 3690,
											"name": "SWAP1"
										},
										{
											"begin": 3658,
											"end": 3690,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3658,
											"end": 3690,
											"name": "ADD"
										},
										{
											"begin": 3658,
											"end": 3690,
											"name": "SWAP1"
										},
										{
											"begin": 3658,
											"end": 3690,
											"name": "SWAP3"
										},
										{
											"begin": 3658,
											"end": 3690,
											"name": "SWAP2"
										},
										{
											"begin": 3658,
											"end": 3690,
											"name": "SWAP1"
										},
										{
											"begin": 3658,
											"end": 3690,
											"name": "POP"
										},
										{
											"begin": 3658,
											"end": 3690,
											"name": "POP"
										},
										{
											"begin": 3658,
											"end": 3690,
											"name": "POP"
										},
										{
											"begin": 3642,
											"end": 3690,
											"name": "SWAP1"
										},
										{
											"begin": 3642,
											"end": 3690,
											"name": "POP"
										},
										{
											"begin": 3725,
											"end": 3726,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3708,
											"end": 3727,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3708,
											"end": 3727,
											"name": "AND"
										},
										{
											"begin": 3708,
											"end": 3713,
											"name": "DUP2"
										},
										{
											"begin": 3708,
											"end": 3727,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3708,
											"end": 3727,
											"name": "AND"
										},
										{
											"begin": 3708,
											"end": 3727,
											"name": "EQ"
										},
										{
											"begin": 3708,
											"end": 3727,
											"name": "ISZERO"
										},
										{
											"begin": 3700,
											"end": 3727,
											"name": "SWAP2"
										},
										{
											"begin": 3700,
											"end": 3727,
											"name": "POP"
										},
										{
											"begin": 3737,
											"end": 3748,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3751,
											"end": 3756,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 3751,
											"end": 3756,
											"name": "SLOAD"
										},
										{
											"begin": 3737,
											"end": 3756,
											"name": "SWAP1"
										},
										{
											"begin": 3737,
											"end": 3756,
											"name": "POP"
										},
										{
											"begin": 3785,
											"end": 3790,
											"name": "DUP3"
										},
										{
											"begin": 3781,
											"end": 4373,
											"name": "ISZERO"
										},
										{
											"begin": 3781,
											"end": 4373,
											"name": "PUSH [tag]",
											"value": "300"
										},
										{
											"begin": 3781,
											"end": 4373,
											"name": "JUMPI"
										},
										{
											"begin": 3820,
											"end": 3821,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3810,
											"end": 3816,
											"name": "DUP2"
										},
										{
											"begin": 3810,
											"end": 3821,
											"name": "EQ"
										},
										{
											"begin": 3806,
											"end": 4306,
											"name": "PUSH [tag]",
											"value": "301"
										},
										{
											"begin": 3806,
											"end": 4306,
											"name": "JUMPI"
										},
										{
											"begin": 3841,
											"end": 3851,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3854,
											"end": 3895,
											"name": "PUSH [tag]",
											"value": "302"
										},
										{
											"begin": 3864,
											"end": 3894,
											"name": "PUSH [tag]",
											"value": "303"
										},
										{
											"begin": 3884,
											"end": 3893,
											"name": "DUP7"
										},
										{
											"begin": 3864,
											"end": 3894,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3864,
											"end": 3894,
											"name": "AND"
										},
										{
											"begin": 3869,
											"end": 3878,
											"name": "DUP9"
										},
										{
											"begin": 3864,
											"end": 3879,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3864,
											"end": 3879,
											"name": "AND"
										},
										{
											"begin": 3864,
											"end": 3883,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 3864,
											"end": 3883,
											"name": "SWAP1"
										},
										{
											"begin": 3864,
											"end": 3894,
											"name": "SWAP2"
										},
										{
											"begin": 3864,
											"end": 3894,
											"name": "SWAP1"
										},
										{
											"begin": 3864,
											"end": 3894,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3864,
											"end": 3894,
											"name": "AND"
										},
										{
											"begin": 3864,
											"end": 3894,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3864,
											"end": 3894,
											"name": "tag",
											"value": "303"
										},
										{
											"begin": 3864,
											"end": 3894,
											"name": "JUMPDEST"
										},
										{
											"begin": 3854,
											"end": 3863,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 3854,
											"end": 3895,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3854,
											"end": 3895,
											"name": "tag",
											"value": "302"
										},
										{
											"begin": 3854,
											"end": 3895,
											"name": "JUMPDEST"
										},
										{
											"begin": 3841,
											"end": 3895,
											"name": "SWAP1"
										},
										{
											"begin": 3841,
											"end": 3895,
											"name": "POP"
										},
										{
											"begin": 3913,
											"end": 3927,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3930,
											"end": 3947,
											"name": "PUSH [tag]",
											"value": "304"
										},
										{
											"begin": 3940,
											"end": 3946,
											"name": "DUP4"
										},
										{
											"begin": 3930,
											"end": 3939,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 3930,
											"end": 3947,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3930,
											"end": 3947,
											"name": "tag",
											"value": "304"
										},
										{
											"begin": 3930,
											"end": 3947,
											"name": "JUMPDEST"
										},
										{
											"begin": 3913,
											"end": 3947,
											"name": "SWAP1"
										},
										{
											"begin": 3913,
											"end": 3947,
											"name": "POP"
										},
										{
											"begin": 3977,
											"end": 3986,
											"name": "DUP1"
										},
										{
											"begin": 3969,
											"end": 3974,
											"name": "DUP3"
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "GT"
										},
										{
											"begin": 3965,
											"end": 4292,
											"name": "ISZERO"
										},
										{
											"begin": 3965,
											"end": 4292,
											"name": "PUSH [tag]",
											"value": "305"
										},
										{
											"begin": 3965,
											"end": 4292,
											"name": "JUMPI"
										},
										{
											"begin": 4010,
											"end": 4024,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4027,
											"end": 4071,
											"name": "PUSH [tag]",
											"value": "306"
										},
										{
											"begin": 4069,
											"end": 4070,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 4027,
											"end": 4064,
											"name": "PUSH [tag]",
											"value": "307"
										},
										{
											"begin": 4043,
											"end": 4063,
											"name": "PUSH [tag]",
											"value": "308"
										},
										{
											"begin": 4053,
											"end": 4062,
											"name": "DUP6"
										},
										{
											"begin": 4043,
											"end": 4048,
											"name": "DUP8"
										},
										{
											"begin": 4043,
											"end": 4052,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 4043,
											"end": 4052,
											"name": "SWAP1"
										},
										{
											"begin": 4043,
											"end": 4063,
											"name": "SWAP2"
										},
										{
											"begin": 4043,
											"end": 4063,
											"name": "SWAP1"
										},
										{
											"begin": 4043,
											"end": 4063,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4043,
											"end": 4063,
											"name": "AND"
										},
										{
											"begin": 4043,
											"end": 4063,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4043,
											"end": 4063,
											"name": "tag",
											"value": "308"
										},
										{
											"begin": 4043,
											"end": 4063,
											"name": "JUMPDEST"
										},
										{
											"begin": 4027,
											"end": 4038,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4027,
											"end": 4038,
											"name": "SLOAD"
										},
										{
											"begin": 4027,
											"end": 4042,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 4027,
											"end": 4042,
											"name": "SWAP1"
										},
										{
											"begin": 4027,
											"end": 4064,
											"name": "SWAP2"
										},
										{
											"begin": 4027,
											"end": 4064,
											"name": "SWAP1"
										},
										{
											"begin": 4027,
											"end": 4064,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4027,
											"end": 4064,
											"name": "AND"
										},
										{
											"begin": 4027,
											"end": 4064,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4027,
											"end": 4064,
											"name": "tag",
											"value": "307"
										},
										{
											"begin": 4027,
											"end": 4064,
											"name": "JUMPDEST"
										},
										{
											"begin": 4027,
											"end": 4068,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 4027,
											"end": 4068,
											"name": "SWAP1"
										},
										{
											"begin": 4027,
											"end": 4071,
											"name": "SWAP2"
										},
										{
											"begin": 4027,
											"end": 4071,
											"name": "SWAP1"
										},
										{
											"begin": 4027,
											"end": 4071,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4027,
											"end": 4071,
											"name": "AND"
										},
										{
											"begin": 4027,
											"end": 4071,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4027,
											"end": 4071,
											"name": "tag",
											"value": "306"
										},
										{
											"begin": 4027,
											"end": 4071,
											"name": "JUMPDEST"
										},
										{
											"begin": 4010,
											"end": 4071,
											"name": "SWAP1"
										},
										{
											"begin": 4010,
											"end": 4071,
											"name": "POP"
										},
										{
											"begin": 4093,
											"end": 4109,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4112,
											"end": 4147,
											"name": "PUSH [tag]",
											"value": "309"
										},
										{
											"begin": 4130,
											"end": 4146,
											"name": "PUSH [tag]",
											"value": "310"
										},
										{
											"begin": 4144,
											"end": 4145,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 4130,
											"end": 4139,
											"name": "DUP6"
										},
										{
											"begin": 4130,
											"end": 4143,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 4130,
											"end": 4143,
											"name": "SWAP1"
										},
										{
											"begin": 4130,
											"end": 4146,
											"name": "SWAP2"
										},
										{
											"begin": 4130,
											"end": 4146,
											"name": "SWAP1"
										},
										{
											"begin": 4130,
											"end": 4146,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4130,
											"end": 4146,
											"name": "AND"
										},
										{
											"begin": 4130,
											"end": 4146,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4130,
											"end": 4146,
											"name": "tag",
											"value": "310"
										},
										{
											"begin": 4130,
											"end": 4146,
											"name": "JUMPDEST"
										},
										{
											"begin": 4112,
											"end": 4125,
											"name": "PUSH [tag]",
											"value": "311"
										},
										{
											"begin": 4122,
											"end": 4124,
											"name": "PUSH",
											"value": "11"
										},
										{
											"begin": 4112,
											"end": 4117,
											"name": "DUP8"
										},
										{
											"begin": 4112,
											"end": 4121,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 4112,
											"end": 4121,
											"name": "SWAP1"
										},
										{
											"begin": 4112,
											"end": 4125,
											"name": "SWAP2"
										},
										{
											"begin": 4112,
											"end": 4125,
											"name": "SWAP1"
										},
										{
											"begin": 4112,
											"end": 4125,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4112,
											"end": 4125,
											"name": "AND"
										},
										{
											"begin": 4112,
											"end": 4125,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4112,
											"end": 4125,
											"name": "tag",
											"value": "311"
										},
										{
											"begin": 4112,
											"end": 4125,
											"name": "JUMPDEST"
										},
										{
											"begin": 4112,
											"end": 4129,
											"name": "PUSH [tag]",
											"value": "295"
										},
										{
											"begin": 4112,
											"end": 4129,
											"name": "SWAP1"
										},
										{
											"begin": 4112,
											"end": 4147,
											"name": "SWAP2"
										},
										{
											"begin": 4112,
											"end": 4147,
											"name": "SWAP1"
										},
										{
											"begin": 4112,
											"end": 4147,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4112,
											"end": 4147,
											"name": "AND"
										},
										{
											"begin": 4112,
											"end": 4147,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4112,
											"end": 4147,
											"name": "tag",
											"value": "309"
										},
										{
											"begin": 4112,
											"end": 4147,
											"name": "JUMPDEST"
										},
										{
											"begin": 4093,
											"end": 4147,
											"name": "SWAP1"
										},
										{
											"begin": 4093,
											"end": 4147,
											"name": "POP"
										},
										{
											"begin": 4169,
											"end": 4183,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4198,
											"end": 4209,
											"name": "DUP2"
										},
										{
											"begin": 4186,
											"end": 4195,
											"name": "DUP4"
										},
										{
											"begin": 4186,
											"end": 4209,
											"name": "DUP2"
										},
										{
											"begin": 4186,
											"end": 4209,
											"name": "PUSH [tag]",
											"value": "312"
										},
										{
											"begin": 4186,
											"end": 4209,
											"name": "JUMPI"
										},
										{
											"begin": 4186,
											"end": 4209,
											"name": "INVALID"
										},
										{
											"begin": 4186,
											"end": 4209,
											"name": "tag",
											"value": "312"
										},
										{
											"begin": 4186,
											"end": 4209,
											"name": "JUMPDEST"
										},
										{
											"begin": 4186,
											"end": 4209,
											"name": "DIV"
										},
										{
											"begin": 4169,
											"end": 4209,
											"name": "SWAP1"
										},
										{
											"begin": 4169,
											"end": 4209,
											"name": "POP"
										},
										{
											"begin": 4247,
											"end": 4248,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4235,
											"end": 4244,
											"name": "DUP2"
										},
										{
											"begin": 4235,
											"end": 4248,
											"name": "GT"
										},
										{
											"begin": 4231,
											"end": 4273,
											"name": "ISZERO"
										},
										{
											"begin": 4231,
											"end": 4273,
											"name": "PUSH [tag]",
											"value": "313"
										},
										{
											"begin": 4231,
											"end": 4273,
											"name": "JUMPI"
										},
										{
											"begin": 4250,
											"end": 4273,
											"name": "PUSH [tag]",
											"value": "314"
										},
										{
											"begin": 4256,
											"end": 4261,
											"name": "DUP8"
										},
										{
											"begin": 4263,
											"end": 4272,
											"name": "DUP3"
										},
										{
											"begin": 4250,
											"end": 4255,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 4250,
											"end": 4273,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4250,
											"end": 4273,
											"name": "tag",
											"value": "314"
										},
										{
											"begin": 4250,
											"end": 4273,
											"name": "JUMPDEST"
										},
										{
											"begin": 4231,
											"end": 4273,
											"name": "tag",
											"value": "313"
										},
										{
											"begin": 4231,
											"end": 4273,
											"name": "JUMPDEST"
										},
										{
											"begin": 3965,
											"end": 4292,
											"name": "POP"
										},
										{
											"begin": 3965,
											"end": 4292,
											"name": "POP"
										},
										{
											"begin": 3965,
											"end": 4292,
											"name": "POP"
										},
										{
											"begin": 3965,
											"end": 4292,
											"name": "tag",
											"value": "305"
										},
										{
											"begin": 3965,
											"end": 4292,
											"name": "JUMPDEST"
										},
										{
											"begin": 3806,
											"end": 4306,
											"name": "POP"
										},
										{
											"begin": 3806,
											"end": 4306,
											"name": "POP"
										},
										{
											"begin": 3806,
											"end": 4306,
											"name": "tag",
											"value": "301"
										},
										{
											"begin": 3806,
											"end": 4306,
											"name": "JUMPDEST"
										},
										{
											"begin": 3781,
											"end": 4373,
											"name": "PUSH [tag]",
											"value": "315"
										},
										{
											"begin": 3781,
											"end": 4373,
											"name": "JUMP"
										},
										{
											"begin": 3781,
											"end": 4373,
											"name": "tag",
											"value": "300"
										},
										{
											"begin": 3781,
											"end": 4373,
											"name": "JUMPDEST"
										},
										{
											"begin": 4336,
											"end": 4337,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4326,
											"end": 4332,
											"name": "DUP2"
										},
										{
											"begin": 4326,
											"end": 4337,
											"name": "EQ"
										},
										{
											"begin": 4322,
											"end": 4373,
											"name": "PUSH [tag]",
											"value": "316"
										},
										{
											"begin": 4322,
											"end": 4373,
											"name": "JUMPI"
										},
										{
											"begin": 4361,
											"end": 4362,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4353,
											"end": 4358,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 4353,
											"end": 4362,
											"name": "DUP2"
										},
										{
											"begin": 4353,
											"end": 4362,
											"name": "SWAP1"
										},
										{
											"begin": 4353,
											"end": 4362,
											"name": "SSTORE"
										},
										{
											"begin": 4353,
											"end": 4362,
											"name": "POP"
										},
										{
											"begin": 4322,
											"end": 4373,
											"name": "tag",
											"value": "316"
										},
										{
											"begin": 4322,
											"end": 4373,
											"name": "JUMPDEST"
										},
										{
											"begin": 3781,
											"end": 4373,
											"name": "tag",
											"value": "315"
										},
										{
											"begin": 3781,
											"end": 4373,
											"name": "JUMPDEST"
										},
										{
											"begin": 3547,
											"end": 4379,
											"name": "POP"
										},
										{
											"begin": 3547,
											"end": 4379,
											"name": "POP"
										},
										{
											"begin": 3547,
											"end": 4379,
											"name": "SWAP3"
										},
										{
											"begin": 3547,
											"end": 4379,
											"name": "SWAP2"
										},
										{
											"begin": 3547,
											"end": 4379,
											"name": "POP"
										},
										{
											"begin": 3547,
											"end": 4379,
											"name": "POP"
										},
										{
											"begin": 3547,
											"end": 4379,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 352,
											"end": 653,
											"name": "tag",
											"value": "186"
										},
										{
											"begin": 352,
											"end": 653,
											"name": "JUMPDEST"
										},
										{
											"begin": 400,
											"end": 409,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 429,
											"end": 430,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 425,
											"end": 426,
											"name": "DUP3"
										},
										{
											"begin": 425,
											"end": 430,
											"name": "GT"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "ISZERO"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "PUSH [tag]",
											"value": "318"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "JUMPI"
										},
										{
											"begin": 450,
											"end": 451,
											"name": "DUP2"
										},
										{
											"begin": 446,
											"end": 451,
											"name": "SWAP1"
										},
										{
											"begin": 446,
											"end": 451,
											"name": "POP"
										},
										{
											"begin": 465,
											"end": 474,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 485,
											"end": 486,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 481,
											"end": 482,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP5"
										},
										{
											"begin": 477,
											"end": 482,
											"name": "DUP2"
										},
										{
											"begin": 477,
											"end": 482,
											"name": "PUSH [tag]",
											"value": "319"
										},
										{
											"begin": 477,
											"end": 482,
											"name": "JUMPI"
										},
										{
											"begin": 477,
											"end": 482,
											"name": "INVALID"
										},
										{
											"begin": 477,
											"end": 482,
											"name": "tag",
											"value": "319"
										},
										{
											"begin": 477,
											"end": 482,
											"name": "JUMPDEST"
										},
										{
											"begin": 477,
											"end": 482,
											"name": "DIV"
										},
										{
											"begin": 477,
											"end": 486,
											"name": "ADD"
										},
										{
											"begin": 465,
											"end": 486,
											"name": "SWAP1"
										},
										{
											"begin": 465,
											"end": 486,
											"name": "POP"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "tag",
											"value": "320"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "JUMPDEST"
										},
										{
											"begin": 511,
											"end": 512,
											"name": "DUP2"
										},
										{
											"begin": 507,
											"end": 508,
											"name": "DUP2"
										},
										{
											"begin": 507,
											"end": 512,
											"name": "LT"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "ISZERO"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "PUSH [tag]",
											"value": "321"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "JUMPI"
										},
										{
											"begin": 536,
											"end": 537,
											"name": "DUP1"
										},
										{
											"begin": 532,
											"end": 537,
											"name": "SWAP2"
										},
										{
											"begin": 532,
											"end": 537,
											"name": "POP"
										},
										{
											"begin": 573,
											"end": 574,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 568,
											"end": 569,
											"name": "DUP2"
										},
										{
											"begin": 564,
											"end": 565,
											"name": "DUP3"
										},
										{
											"begin": 560,
											"end": 561,
											"name": "DUP6"
										},
										{
											"begin": 560,
											"end": 565,
											"name": "DUP2"
										},
										{
											"begin": 560,
											"end": 565,
											"name": "PUSH [tag]",
											"value": "322"
										},
										{
											"begin": 560,
											"end": 565,
											"name": "JUMPI"
										},
										{
											"begin": 560,
											"end": 565,
											"name": "INVALID"
										},
										{
											"begin": 560,
											"end": 565,
											"name": "tag",
											"value": "322"
										},
										{
											"begin": 560,
											"end": 565,
											"name": "JUMPDEST"
										},
										{
											"begin": 560,
											"end": 565,
											"name": "DIV"
										},
										{
											"begin": 560,
											"end": 569,
											"name": "ADD"
										},
										{
											"begin": 559,
											"end": 574,
											"name": "DUP2"
										},
										{
											"begin": 559,
											"end": 574,
											"name": "PUSH [tag]",
											"value": "323"
										},
										{
											"begin": 559,
											"end": 574,
											"name": "JUMPI"
										},
										{
											"begin": 559,
											"end": 574,
											"name": "INVALID"
										},
										{
											"begin": 559,
											"end": 574,
											"name": "tag",
											"value": "323"
										},
										{
											"begin": 559,
											"end": 574,
											"name": "JUMPDEST"
										},
										{
											"begin": 559,
											"end": 574,
											"name": "DIV"
										},
										{
											"begin": 555,
											"end": 574,
											"name": "SWAP1"
										},
										{
											"begin": 555,
											"end": 574,
											"name": "POP"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "PUSH [tag]",
											"value": "320"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "JUMP"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "tag",
											"value": "321"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "JUMPDEST"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "POP"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "PUSH [tag]",
											"value": "324"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "JUMP"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "tag",
											"value": "318"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "JUMPDEST"
										},
										{
											"begin": 614,
											"end": 615,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 609,
											"end": 610,
											"name": "DUP3"
										},
										{
											"begin": 609,
											"end": 615,
											"name": "EQ"
										},
										{
											"begin": 605,
											"end": 647,
											"name": "PUSH [tag]",
											"value": "325"
										},
										{
											"begin": 605,
											"end": 647,
											"name": "JUMPI"
										},
										{
											"begin": 635,
											"end": 636,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 631,
											"end": 636,
											"name": "SWAP1"
										},
										{
											"begin": 631,
											"end": 636,
											"name": "POP"
										},
										{
											"begin": 605,
											"end": 647,
											"name": "tag",
											"value": "325"
										},
										{
											"begin": 605,
											"end": 647,
											"name": "JUMPDEST"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "tag",
											"value": "324"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "JUMPDEST"
										},
										{
											"begin": 352,
											"end": 653,
											"name": "SWAP2"
										},
										{
											"begin": 352,
											"end": 653,
											"name": "SWAP1"
										},
										{
											"begin": 352,
											"end": 653,
											"name": "POP"
										},
										{
											"begin": 352,
											"end": 653,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1427,
											"end": 1627,
											"name": "tag",
											"value": "188"
										},
										{
											"begin": 1427,
											"end": 1627,
											"name": "JUMPDEST"
										},
										{
											"begin": 1502,
											"end": 1524,
											"name": "PUSH [tag]",
											"value": "327"
										},
										{
											"begin": 1518,
											"end": 1523,
											"name": "DUP2"
										},
										{
											"begin": 1502,
											"end": 1513,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1502,
											"end": 1513,
											"name": "SLOAD"
										},
										{
											"begin": 1502,
											"end": 1517,
											"name": "PUSH [tag]",
											"value": "295"
										},
										{
											"begin": 1502,
											"end": 1517,
											"name": "SWAP1"
										},
										{
											"begin": 1502,
											"end": 1524,
											"name": "SWAP2"
										},
										{
											"begin": 1502,
											"end": 1524,
											"name": "SWAP1"
										},
										{
											"begin": 1502,
											"end": 1524,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1502,
											"end": 1524,
											"name": "AND"
										},
										{
											"begin": 1502,
											"end": 1524,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1502,
											"end": 1524,
											"name": "tag",
											"value": "327"
										},
										{
											"begin": 1502,
											"end": 1524,
											"name": "JUMPDEST"
										},
										{
											"begin": 1488,
											"end": 1499,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1488,
											"end": 1524,
											"name": "DUP2"
										},
										{
											"begin": 1488,
											"end": 1524,
											"name": "SWAP1"
										},
										{
											"begin": 1488,
											"end": 1524,
											"name": "SSTORE"
										},
										{
											"begin": 1488,
											"end": 1524,
											"name": "POP"
										},
										{
											"begin": 1550,
											"end": 1574,
											"name": "PUSH [tag]",
											"value": "328"
										},
										{
											"begin": 1568,
											"end": 1573,
											"name": "DUP2"
										},
										{
											"begin": 1550,
											"end": 1559,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1550,
											"end": 1563,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1560,
											"end": 1562,
											"name": "DUP6"
										},
										{
											"begin": 1550,
											"end": 1563,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1550,
											"end": 1563,
											"name": "AND"
										},
										{
											"begin": 1550,
											"end": 1563,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1550,
											"end": 1563,
											"name": "AND"
										},
										{
											"begin": 1550,
											"end": 1563,
											"name": "DUP2"
										},
										{
											"begin": 1550,
											"end": 1563,
											"name": "MSTORE"
										},
										{
											"begin": 1550,
											"end": 1563,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1550,
											"end": 1563,
											"name": "ADD"
										},
										{
											"begin": 1550,
											"end": 1563,
											"name": "SWAP1"
										},
										{
											"begin": 1550,
											"end": 1563,
											"name": "DUP2"
										},
										{
											"begin": 1550,
											"end": 1563,
											"name": "MSTORE"
										},
										{
											"begin": 1550,
											"end": 1563,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1550,
											"end": 1563,
											"name": "ADD"
										},
										{
											"begin": 1550,
											"end": 1563,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1550,
											"end": 1563,
											"name": "KECCAK256"
										},
										{
											"begin": 1550,
											"end": 1563,
											"name": "SLOAD"
										},
										{
											"begin": 1550,
											"end": 1567,
											"name": "PUSH [tag]",
											"value": "295"
										},
										{
											"begin": 1550,
											"end": 1567,
											"name": "SWAP1"
										},
										{
											"begin": 1550,
											"end": 1574,
											"name": "SWAP2"
										},
										{
											"begin": 1550,
											"end": 1574,
											"name": "SWAP1"
										},
										{
											"begin": 1550,
											"end": 1574,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1550,
											"end": 1574,
											"name": "AND"
										},
										{
											"begin": 1550,
											"end": 1574,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1550,
											"end": 1574,
											"name": "tag",
											"value": "328"
										},
										{
											"begin": 1550,
											"end": 1574,
											"name": "JUMPDEST"
										},
										{
											"begin": 1534,
											"end": 1543,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1534,
											"end": 1547,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1544,
											"end": 1546,
											"name": "DUP5"
										},
										{
											"begin": 1534,
											"end": 1547,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1534,
											"end": 1547,
											"name": "AND"
										},
										{
											"begin": 1534,
											"end": 1547,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1534,
											"end": 1547,
											"name": "AND"
										},
										{
											"begin": 1534,
											"end": 1547,
											"name": "DUP2"
										},
										{
											"begin": 1534,
											"end": 1547,
											"name": "MSTORE"
										},
										{
											"begin": 1534,
											"end": 1547,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1534,
											"end": 1547,
											"name": "ADD"
										},
										{
											"begin": 1534,
											"end": 1547,
											"name": "SWAP1"
										},
										{
											"begin": 1534,
											"end": 1547,
											"name": "DUP2"
										},
										{
											"begin": 1534,
											"end": 1547,
											"name": "MSTORE"
										},
										{
											"begin": 1534,
											"end": 1547,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1534,
											"end": 1547,
											"name": "ADD"
										},
										{
											"begin": 1534,
											"end": 1547,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1547,
											"name": "KECCAK256"
										},
										{
											"begin": 1534,
											"end": 1574,
											"name": "DUP2"
										},
										{
											"begin": 1534,
											"end": 1574,
											"name": "SWAP1"
										},
										{
											"begin": 1534,
											"end": 1574,
											"name": "SSTORE"
										},
										{
											"begin": 1534,
											"end": 1574,
											"name": "POP"
										},
										{
											"begin": 1610,
											"end": 1612,
											"name": "DUP2"
										},
										{
											"begin": 1589,
											"end": 1620,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1589,
											"end": 1620,
											"name": "AND"
										},
										{
											"begin": 1606,
											"end": 1607,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1589,
											"end": 1620,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1589,
											"end": 1620,
											"name": "AND"
										},
										{
											"begin": 1589,
											"end": 1620,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1614,
											"end": 1619,
											"name": "DUP4"
										},
										{
											"begin": 1589,
											"end": 1620,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1589,
											"end": 1620,
											"name": "MLOAD"
										},
										{
											"begin": 1589,
											"end": 1620,
											"name": "DUP1"
										},
										{
											"begin": 1589,
											"end": 1620,
											"name": "DUP3"
										},
										{
											"begin": 1589,
											"end": 1620,
											"name": "DUP2"
										},
										{
											"begin": 1589,
											"end": 1620,
											"name": "MSTORE"
										},
										{
											"begin": 1589,
											"end": 1620,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1589,
											"end": 1620,
											"name": "ADD"
										},
										{
											"begin": 1589,
											"end": 1620,
											"name": "SWAP2"
										},
										{
											"begin": 1589,
											"end": 1620,
											"name": "POP"
										},
										{
											"begin": 1589,
											"end": 1620,
											"name": "POP"
										},
										{
											"begin": 1589,
											"end": 1620,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1589,
											"end": 1620,
											"name": "MLOAD"
										},
										{
											"begin": 1589,
											"end": 1620,
											"name": "DUP1"
										},
										{
											"begin": 1589,
											"end": 1620,
											"name": "SWAP2"
										},
										{
											"begin": 1589,
											"end": 1620,
											"name": "SUB"
										},
										{
											"begin": 1589,
											"end": 1620,
											"name": "SWAP1"
										},
										{
											"begin": 1589,
											"end": 1620,
											"name": "LOG3"
										},
										{
											"begin": 1427,
											"end": 1627,
											"name": "POP"
										},
										{
											"begin": 1427,
											"end": 1627,
											"name": "POP"
										},
										{
											"begin": 1427,
											"end": 1627,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 134,
											"end": 237,
											"name": "tag",
											"value": "195"
										},
										{
											"begin": 134,
											"end": 237,
											"name": "JUMPDEST"
										},
										{
											"begin": 192,
											"end": 201,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 221,
											"end": 222,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 218,
											"name": "DUP4"
										},
										{
											"begin": 217,
											"end": 222,
											"name": "LT"
										},
										{
											"begin": 217,
											"end": 230,
											"name": "PUSH [tag]",
											"value": "330"
										},
										{
											"begin": 217,
											"end": 230,
											"name": "JUMPI"
										},
										{
											"begin": 229,
											"end": 230,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 230,
											"name": "PUSH [tag]",
											"value": "331"
										},
										{
											"begin": 217,
											"end": 230,
											"name": "JUMP"
										},
										{
											"begin": 217,
											"end": 230,
											"name": "tag",
											"value": "330"
										},
										{
											"begin": 217,
											"end": 230,
											"name": "JUMPDEST"
										},
										{
											"begin": 225,
											"end": 226,
											"name": "DUP3"
										},
										{
											"begin": 217,
											"end": 230,
											"name": "tag",
											"value": "331"
										},
										{
											"begin": 217,
											"end": 230,
											"name": "JUMPDEST"
										},
										{
											"begin": 213,
											"end": 230,
											"name": "SWAP1"
										},
										{
											"begin": 213,
											"end": 230,
											"name": "POP"
										},
										{
											"begin": 134,
											"end": 237,
											"name": "SWAP3"
										},
										{
											"begin": 134,
											"end": 237,
											"name": "SWAP2"
										},
										{
											"begin": 134,
											"end": 237,
											"name": "POP"
										},
										{
											"begin": 134,
											"end": 237,
											"name": "POP"
										},
										{
											"begin": 134,
											"end": 237,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1633,
											"end": 1841,
											"name": "tag",
											"value": "219"
										},
										{
											"begin": 1633,
											"end": 1841,
											"name": "JUMPDEST"
										},
										{
											"begin": 1714,
											"end": 1740,
											"name": "PUSH [tag]",
											"value": "333"
										},
										{
											"begin": 1734,
											"end": 1739,
											"name": "DUP2"
										},
										{
											"begin": 1714,
											"end": 1723,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1714,
											"end": 1729,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1724,
											"end": 1728,
											"name": "DUP6"
										},
										{
											"begin": 1714,
											"end": 1729,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1714,
											"end": 1729,
											"name": "AND"
										},
										{
											"begin": 1714,
											"end": 1729,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1714,
											"end": 1729,
											"name": "AND"
										},
										{
											"begin": 1714,
											"end": 1729,
											"name": "DUP2"
										},
										{
											"begin": 1714,
											"end": 1729,
											"name": "MSTORE"
										},
										{
											"begin": 1714,
											"end": 1729,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1714,
											"end": 1729,
											"name": "ADD"
										},
										{
											"begin": 1714,
											"end": 1729,
											"name": "SWAP1"
										},
										{
											"begin": 1714,
											"end": 1729,
											"name": "DUP2"
										},
										{
											"begin": 1714,
											"end": 1729,
											"name": "MSTORE"
										},
										{
											"begin": 1714,
											"end": 1729,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1714,
											"end": 1729,
											"name": "ADD"
										},
										{
											"begin": 1714,
											"end": 1729,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1714,
											"end": 1729,
											"name": "KECCAK256"
										},
										{
											"begin": 1714,
											"end": 1729,
											"name": "SLOAD"
										},
										{
											"begin": 1714,
											"end": 1733,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 1714,
											"end": 1733,
											"name": "SWAP1"
										},
										{
											"begin": 1714,
											"end": 1740,
											"name": "SWAP2"
										},
										{
											"begin": 1714,
											"end": 1740,
											"name": "SWAP1"
										},
										{
											"begin": 1714,
											"end": 1740,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1714,
											"end": 1740,
											"name": "AND"
										},
										{
											"begin": 1714,
											"end": 1740,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1714,
											"end": 1740,
											"name": "tag",
											"value": "333"
										},
										{
											"begin": 1714,
											"end": 1740,
											"name": "JUMPDEST"
										},
										{
											"begin": 1696,
											"end": 1705,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1696,
											"end": 1711,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1710,
											"name": "DUP5"
										},
										{
											"begin": 1696,
											"end": 1711,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1696,
											"end": 1711,
											"name": "AND"
										},
										{
											"begin": 1696,
											"end": 1711,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1696,
											"end": 1711,
											"name": "AND"
										},
										{
											"begin": 1696,
											"end": 1711,
											"name": "DUP2"
										},
										{
											"begin": 1696,
											"end": 1711,
											"name": "MSTORE"
										},
										{
											"begin": 1696,
											"end": 1711,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1696,
											"end": 1711,
											"name": "ADD"
										},
										{
											"begin": 1696,
											"end": 1711,
											"name": "SWAP1"
										},
										{
											"begin": 1696,
											"end": 1711,
											"name": "DUP2"
										},
										{
											"begin": 1696,
											"end": 1711,
											"name": "MSTORE"
										},
										{
											"begin": 1696,
											"end": 1711,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1696,
											"end": 1711,
											"name": "ADD"
										},
										{
											"begin": 1696,
											"end": 1711,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1696,
											"end": 1711,
											"name": "KECCAK256"
										},
										{
											"begin": 1696,
											"end": 1740,
											"name": "DUP2"
										},
										{
											"begin": 1696,
											"end": 1740,
											"name": "SWAP1"
										},
										{
											"begin": 1696,
											"end": 1740,
											"name": "SSTORE"
										},
										{
											"begin": 1696,
											"end": 1740,
											"name": "POP"
										},
										{
											"begin": 1764,
											"end": 1786,
											"name": "PUSH [tag]",
											"value": "334"
										},
										{
											"begin": 1780,
											"end": 1785,
											"name": "DUP2"
										},
										{
											"begin": 1764,
											"end": 1775,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1764,
											"end": 1775,
											"name": "SLOAD"
										},
										{
											"begin": 1764,
											"end": 1779,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 1764,
											"end": 1779,
											"name": "SWAP1"
										},
										{
											"begin": 1764,
											"end": 1786,
											"name": "SWAP2"
										},
										{
											"begin": 1764,
											"end": 1786,
											"name": "SWAP1"
										},
										{
											"begin": 1764,
											"end": 1786,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1764,
											"end": 1786,
											"name": "AND"
										},
										{
											"begin": 1764,
											"end": 1786,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1764,
											"end": 1786,
											"name": "tag",
											"value": "334"
										},
										{
											"begin": 1764,
											"end": 1786,
											"name": "JUMPDEST"
										},
										{
											"begin": 1750,
											"end": 1761,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1750,
											"end": 1786,
											"name": "DUP2"
										},
										{
											"begin": 1750,
											"end": 1786,
											"name": "SWAP1"
										},
										{
											"begin": 1750,
											"end": 1786,
											"name": "SSTORE"
										},
										{
											"begin": 1750,
											"end": 1786,
											"name": "POP"
										},
										{
											"begin": 1824,
											"end": 1825,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1801,
											"end": 1834,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1801,
											"end": 1834,
											"name": "AND"
										},
										{
											"begin": 1810,
											"end": 1814,
											"name": "DUP3"
										},
										{
											"begin": 1801,
											"end": 1834,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1801,
											"end": 1834,
											"name": "AND"
										},
										{
											"begin": 1801,
											"end": 1834,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1828,
											"end": 1833,
											"name": "DUP4"
										},
										{
											"begin": 1801,
											"end": 1834,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1801,
											"end": 1834,
											"name": "MLOAD"
										},
										{
											"begin": 1801,
											"end": 1834,
											"name": "DUP1"
										},
										{
											"begin": 1801,
											"end": 1834,
											"name": "DUP3"
										},
										{
											"begin": 1801,
											"end": 1834,
											"name": "DUP2"
										},
										{
											"begin": 1801,
											"end": 1834,
											"name": "MSTORE"
										},
										{
											"begin": 1801,
											"end": 1834,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1801,
											"end": 1834,
											"name": "ADD"
										},
										{
											"begin": 1801,
											"end": 1834,
											"name": "SWAP2"
										},
										{
											"begin": 1801,
											"end": 1834,
											"name": "POP"
										},
										{
											"begin": 1801,
											"end": 1834,
											"name": "POP"
										},
										{
											"begin": 1801,
											"end": 1834,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1801,
											"end": 1834,
											"name": "MLOAD"
										},
										{
											"begin": 1801,
											"end": 1834,
											"name": "DUP1"
										},
										{
											"begin": 1801,
											"end": 1834,
											"name": "SWAP2"
										},
										{
											"begin": 1801,
											"end": 1834,
											"name": "SUB"
										},
										{
											"begin": 1801,
											"end": 1834,
											"name": "SWAP1"
										},
										{
											"begin": 1801,
											"end": 1834,
											"name": "LOG3"
										},
										{
											"begin": 1633,
											"end": 1841,
											"name": "POP"
										},
										{
											"begin": 1633,
											"end": 1841,
											"name": "POP"
										},
										{
											"begin": 1633,
											"end": 1841,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 319,
											"end": 437,
											"name": "tag",
											"value": "287"
										},
										{
											"begin": 319,
											"end": 437,
											"name": "JUMPDEST"
										},
										{
											"begin": 369,
											"end": 378,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 267,
											"end": 273,
											"name": "PUSH",
											"value": "10000000000000000000000000000"
										},
										{
											"begin": 402,
											"end": 403,
											"name": "DUP3"
										},
										{
											"begin": 394,
											"end": 404,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 394,
											"end": 404,
											"name": "AND"
										},
										{
											"begin": 394,
											"end": 411,
											"name": "MUL"
										},
										{
											"begin": 390,
											"end": 411,
											"name": "SWAP1"
										},
										{
											"begin": 390,
											"end": 411,
											"name": "POP"
										},
										{
											"begin": 319,
											"end": 437,
											"name": "SWAP2"
										},
										{
											"begin": 319,
											"end": 437,
											"name": "SWAP1"
										},
										{
											"begin": 319,
											"end": 437,
											"name": "POP"
										},
										{
											"begin": 319,
											"end": 437,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 505,
											"end": 611,
											"name": "tag",
											"value": "288"
										},
										{
											"begin": 505,
											"end": 611,
											"name": "JUMPDEST"
										},
										{
											"begin": 565,
											"end": 574,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 602,
											"end": 603,
											"name": "DUP2"
										},
										{
											"begin": 594,
											"end": 604,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 594,
											"end": 604,
											"name": "AND"
										},
										{
											"begin": 590,
											"end": 604,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 590,
											"end": 604,
											"name": "AND"
										},
										{
											"begin": 590,
											"end": 591,
											"name": "DUP4"
										},
										{
											"begin": 590,
											"end": 604,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 590,
											"end": 604,
											"name": "AND"
										},
										{
											"begin": 590,
											"end": 604,
											"name": "DUP2"
										},
										{
											"begin": 590,
											"end": 604,
											"name": "PUSH [tag]",
											"value": "337"
										},
										{
											"begin": 590,
											"end": 604,
											"name": "JUMPI"
										},
										{
											"begin": 590,
											"end": 604,
											"name": "INVALID"
										},
										{
											"begin": 590,
											"end": 604,
											"name": "tag",
											"value": "337"
										},
										{
											"begin": 590,
											"end": 604,
											"name": "JUMPDEST"
										},
										{
											"begin": 590,
											"end": 604,
											"name": "DIV"
										},
										{
											"begin": 586,
											"end": 604,
											"name": "SWAP1"
										},
										{
											"begin": 586,
											"end": 604,
											"name": "POP"
										},
										{
											"begin": 505,
											"end": 611,
											"name": "SWAP3"
										},
										{
											"begin": 505,
											"end": 611,
											"name": "SWAP2"
										},
										{
											"begin": 505,
											"end": 611,
											"name": "POP"
										},
										{
											"begin": 505,
											"end": 611,
											"name": "POP"
										},
										{
											"begin": 505,
											"end": 611,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 198,
											"end": 333,
											"name": "tag",
											"value": "295"
										},
										{
											"begin": 198,
											"end": 333,
											"name": "JUMPDEST"
										},
										{
											"begin": 256,
											"end": 265,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 300,
											"end": 301,
											"name": "DUP3"
										},
										{
											"begin": 294,
											"end": 295,
											"name": "DUP3"
										},
										{
											"begin": 290,
											"end": 291,
											"name": "DUP5"
										},
										{
											"begin": 290,
											"end": 295,
											"name": "ADD"
										},
										{
											"begin": 286,
											"end": 295,
											"name": "SWAP2"
										},
										{
											"begin": 286,
											"end": 295,
											"name": "POP"
										},
										{
											"begin": 286,
											"end": 295,
											"name": "DUP2"
										},
										{
											"begin": 285,
											"end": 301,
											"name": "LT"
										},
										{
											"begin": 285,
											"end": 301,
											"name": "ISZERO"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH [tag]",
											"value": "339"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "JUMPI"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MLOAD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP2"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP3"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP2"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SUB"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP3"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP2"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "64732D6D6174682D6164642D6F766572666C6F77000000000000000000000000"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP2"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "POP"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SWAP2"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "POP"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "POP"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MLOAD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SWAP2"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SUB"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SWAP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "REVERT"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "tag",
											"value": "339"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "JUMPDEST"
										},
										{
											"begin": 198,
											"end": 333,
											"name": "SWAP3"
										},
										{
											"begin": 198,
											"end": 333,
											"name": "SWAP2"
										},
										{
											"begin": 198,
											"end": 333,
											"name": "POP"
										},
										{
											"begin": 198,
											"end": 333,
											"name": "POP"
										},
										{
											"begin": 198,
											"end": 333,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"50B0A6DD250A09C1CD083AD4BF9F97424665D60E7BC0A208A1151C7D0051999C": "50616e63616b653a20494e53554646494349454e545f494e5055545f414d4f554e54",
										"6C050B0A8D3F2D18D11271EE0A551B7748437B8FA9A6165C561190D34A2947D6": "50616e63616b653a20494e53554646494349454e545f4c49515549444954595f4255524e4544",
										"C654718515B5F98052EB92744D97D32CCCABF6E8B2BAE886738591C9B906CFD8": "50616e63616b653a20494e53554646494349454e545f4f55545055545f414d4f554e54",
										"EF633320352A650C1D75752F13E6C73D8D8F7F26A5596A6D026C1BF50D2F7713": "50616e63616b653a20494e53554646494349454e545f4c49515549444954595f4d494e544544"
									}
								},
								"8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429"
							}
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"MINIMUM_LIQUIDITY()": "ba9a7a56",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address)": "89afcb44",
							"decimals()": "313ce567",
							"factory()": "c45a0155",
							"getReserves()": "0902f1ac",
							"initialize(address,address)": "485cc955",
							"kLast()": "7464fc3d",
							"mint(address)": "6a627842",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"price0CumulativeLast()": "5909c0d5",
							"price1CumulativeLast()": "5a3d5493",
							"skim(address)": "bc25cf77",
							"swap(uint256,uint256,address,bytes)": "022c0d9f",
							"symbol()": "95d89b41",
							"sync()": "fff6cae9",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"_reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"_reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"_blockTimestampLast\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"DexSwap/DexPair.sol\":\"DexPair\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"DexSwap/DexPair.sol\":{\"keccak256\":\"0x83ec83bbfe156576034dfea40a760134db50cb69df5f3502fb92729102821667\",\"urls\":[\"bzz-raw://fdfe756b4d16ba61478ee58f9a9109ff8fc1120d557044b8e6416b0542276a65\",\"dweb:/ipfs/Qmc6eWECUMNTnhPbWrhBdLvTxHkmfRGgSNweDCjH1JkmnZ\"]},\"DexSwap/PancakeERC20.sol\":{\"keccak256\":\"0x8e9e75294ecf30d0b421a05964427e90fc8bb2392db2e14b652cbfe8bfb53730\",\"urls\":[\"bzz-raw://74f9d491845913a29423a997ebd9ec7d3b636562849396a562f7313f08a3d59d\",\"dweb:/ipfs/QmRpzY42ZHFygyEDgQeoYJEwgssk11CjEKvhvJeRpNnshX\"]},\"DexSwap/interfaces/IERC20.sol\":{\"keccak256\":\"0x5c2a1626814dfa8c9d73f14358eb349acf411633fdc5dca35fb607dacc7c20dd\",\"urls\":[\"bzz-raw://08b11bb3192bb52d3f341682413419cd516b772c5d9284485e4f846088e640bd\",\"dweb:/ipfs/QmYMcMrR53adeWN75xspymBCFSkWYfAJwtCDfnKaWRuJVy\"]},\"DexSwap/interfaces/IPancakeCallee.sol\":{\"keccak256\":\"0xf87708f8fc59352a86cbdc8317a93b46b5d89437418b170cc2778879f8a25fe7\",\"urls\":[\"bzz-raw://71b8ba3e36df11202737c838309b6171e6bf6783796db62c363720f03df0d067\",\"dweb:/ipfs/QmbLpNoZfZrCWqvWCuq6oaeLCnDgqSw6sAH5SGRN2PSwpL\"]},\"DexSwap/interfaces/IPancakeERC20.sol\":{\"keccak256\":\"0x1c12c7596bbb8cae6c81f403722344bdbb8e6b3adad577d8e75d3b92005e06e1\",\"urls\":[\"bzz-raw://07464188002aa47af55741ea345b54a062619ce1890b37e2acc71e31e2cb6c0e\",\"dweb:/ipfs/QmcvxDZNR5kPar3NLNsVEr2BTRVcuJh9eoFtd5Tb6LQibJ\"]},\"DexSwap/interfaces/IPancakeFactory.sol\":{\"keccak256\":\"0xea125e6c4e3c52bce633dc5667b1e108c63ef48866943eb6c4074f19b23ed7c5\",\"urls\":[\"bzz-raw://c875e62eaaeab86a84108aa360d1dab9e9b4c9dd06299595bfb512c4259b1050\",\"dweb:/ipfs/QmW88oRqeybnNXsLM4P6cfTfYPdpEUR3742rYkPY2zmFv2\"]},\"DexSwap/interfaces/IPancakePair.sol\":{\"keccak256\":\"0xb3d3ac8e3e41ff3b87b26672225c38b36be5a52008288bd6a3b83b7d68f572d6\",\"urls\":[\"bzz-raw://3ab097e4c47e0069f2e45cce7ccbb6d731c107fd4fff2db13663425a17e52ee5\",\"dweb:/ipfs/QmNmrZbJj5YG3QrLVUNMS4VnXNBfSRwqwZ8nAEdALMFQSR\"]},\"DexSwap/libraries/Math.sol\":{\"keccak256\":\"0x9e94097dd206ec6121005eb1e67e8347a2cfca90fb7d0b599522ce2f8a36c09b\",\"urls\":[\"bzz-raw://bfa9f239f212c94f413dc5ef4f5cabc853e789519bd9610a51fd7a2ea222d8fb\",\"dweb:/ipfs/QmR1YCU8VQ28BnqeRQ9WqSwqjxLzmtJYz2KqW2XQKjP9dR\"]},\"DexSwap/libraries/SafeMath.sol\":{\"keccak256\":\"0xd0cc5ede4252f34f9adf75af689fb003aa6349f229b9bba72db43cba9bb1c9d9\",\"urls\":[\"bzz-raw://a2cb594533aebe5028b93c5c429b23907a4830964d8c6728565992bee4cf1eef\",\"dweb:/ipfs/QmdSBCeJiqjQeGZ2K79DXaDfaqJMtXCWAyXDWJ3KNDWZKM\"]},\"DexSwap/libraries/UQ112x112.sol\":{\"keccak256\":\"0x0cd289c012b341feda98ad4cc732ee5ce64cd5d0b106796e4c8edcdad1c2e43b\",\"urls\":[\"bzz-raw://098881b3c407c56d0e9a707f6d6bc5ced2ae78dfe58aa82055c754ee2dd4c97a\",\"dweb:/ipfs/QmQEU9ynXqGR14fYyLgQbdxYebxQsCHsgwE2hr7xAeLzCC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1068,
								"contract": "DexSwap/DexPair.sol:DexPair",
								"label": "totalSupply",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 1072,
								"contract": "DexSwap/DexPair.sol:DexPair",
								"label": "balanceOf",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1078,
								"contract": "DexSwap/DexPair.sol:DexPair",
								"label": "allowance",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1080,
								"contract": "DexSwap/DexPair.sol:DexPair",
								"label": "DOMAIN_SEPARATOR",
								"offset": 0,
								"slot": "3",
								"type": "t_bytes32"
							},
							{
								"astId": 1087,
								"contract": "DexSwap/DexPair.sol:DexPair",
								"label": "nonces",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 34,
								"contract": "DexSwap/DexPair.sol:DexPair",
								"label": "factory",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 36,
								"contract": "DexSwap/DexPair.sol:DexPair",
								"label": "token0",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 38,
								"contract": "DexSwap/DexPair.sol:DexPair",
								"label": "token1",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 40,
								"contract": "DexSwap/DexPair.sol:DexPair",
								"label": "reserve0",
								"offset": 0,
								"slot": "8",
								"type": "t_uint112"
							},
							{
								"astId": 42,
								"contract": "DexSwap/DexPair.sol:DexPair",
								"label": "reserve1",
								"offset": 14,
								"slot": "8",
								"type": "t_uint112"
							},
							{
								"astId": 44,
								"contract": "DexSwap/DexPair.sol:DexPair",
								"label": "blockTimestampLast",
								"offset": 28,
								"slot": "8",
								"type": "t_uint32"
							},
							{
								"astId": 46,
								"contract": "DexSwap/DexPair.sol:DexPair",
								"label": "price0CumulativeLast",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 48,
								"contract": "DexSwap/DexPair.sol:DexPair",
								"label": "price1CumulativeLast",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 50,
								"contract": "DexSwap/DexPair.sol:DexPair",
								"label": "kLast",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 53,
								"contract": "DexSwap/DexPair.sol:DexPair",
								"label": "unlocked",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint112": {
								"encoding": "inplace",
								"label": "uint112",
								"numberOfBytes": "14"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"DexSwap/PancakeERC20.sol": {
				"PancakeERC20": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"DexSwap/PancakeERC20.sol\":139:3670  contract PancakeERC20 is IPancakeERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"DexSwap/PancakeERC20.sol\":974:1421  constructor() public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"DexSwap/PancakeERC20.sol\":974:1421  constructor() public {... */\n  pop\n    /* \"DexSwap/PancakeERC20.sol\":1005:1020  uint256 chainId */\n  0x00\n    /* \"DexSwap/PancakeERC20.sol\":1064:1071  chainid */\n  chainid\n    /* \"DexSwap/PancakeERC20.sol\":1053:1071  chainId := chainid */\n  swap1\n  pop\n    /* \"DexSwap/PancakeERC20.sol\":1160:1255  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n  mload(0x40)\n  dup1\n  dup1\n  data_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n  0x52\n  swap2\n  codecopy\n  0x52\n  add\n  swap1\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  keccak256\n    /* \"DexSwap/PancakeERC20.sol\":1289:1293  name */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0b\n  dup2\n  mstore\n  0x20\n  add\n  0x44657853776170204c5073000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"DexSwap/PancakeERC20.sol\":1273:1295  keccak256(bytes(name)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"DexSwap/PancakeERC20.sol\":1323:1333  bytes(\"1\") */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x01\n  dup2\n  mstore\n  0x20\n  add\n  0x3100000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"DexSwap/PancakeERC20.sol\":1313:1334  keccak256(bytes(\"1\")) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"DexSwap/PancakeERC20.sol\":1352:1359  chainId */\n  dup4\n    /* \"DexSwap/PancakeERC20.sol\":1385:1389  this */\n  address\n    /* \"DexSwap/PancakeERC20.sol\":1132:1404  abi.encode(... */\n  add(0x20, mload(0x40))\n  dup1\n  dup7\n  dup2\n  mstore\n  0x20\n  add\n  dup6\n  dup2\n  mstore\n  0x20\n  add\n  dup5\n  dup2\n  mstore\n  0x20\n  add\n  dup4\n  dup2\n  mstore\n  0x20\n  add\n  dup3\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n    /* \"--CODEGEN--\":49:53   */\n  0x20\n    /* \"--CODEGEN--\":39:46   */\n  dup2\n    /* \"--CODEGEN--\":30:37   */\n  dup4\n    /* \"--CODEGEN--\":26:47   */\n  sub\n    /* \"--CODEGEN--\":22:54   */\n  sub\n    /* \"--CODEGEN--\":13:20   */\n  dup2\n    /* \"--CODEGEN--\":6:55   */\n  mstore\n    /* \"DexSwap/PancakeERC20.sol\":1132:1404  abi.encode(... */\n  swap1\n  0x40\n  mstore\n    /* \"DexSwap/PancakeERC20.sol\":1109:1414  keccak256(... */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"DexSwap/PancakeERC20.sol\":1090:1106  DOMAIN_SEPARATOR */\n  0x03\n    /* \"DexSwap/PancakeERC20.sol\":1090:1414  DOMAIN_SEPARATOR = keccak256(... */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"DexSwap/PancakeERC20.sol\":974:1421  constructor() public {... */\n  pop\n    /* \"DexSwap/PancakeERC20.sol\":139:3670  contract PancakeERC20 is IPancakeERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f 454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429\n\nsub_0: assembly {\n        /* \"DexSwap/PancakeERC20.sol\":139:3670  contract PancakeERC20 is IPancakeERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"DexSwap/PancakeERC20.sol\":139:3670  contract PancakeERC20 is IPancakeERC20 {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3644e515\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x3644e515\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x30adf81f\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"DexSwap/PancakeERC20.sol\":217:260  string public constant name = \"DexSwap LPs\" */\n    tag_3:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_20:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_20)\n    tag_22:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"DexSwap/PancakeERC20.sol\":217:260  string public constant name = \"DexSwap LPs\" */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_23\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_23:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DexSwap/PancakeERC20.sol\":2307:2454  function approve(address spender, uint256 value) external returns (bool) {... */\n    tag_4:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_25:\n        /* \"DexSwap/PancakeERC20.sol\":2307:2454  function approve(address spender, uint256 value) external returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_26\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DexSwap/PancakeERC20.sol\":357:383  uint256 public totalSupply */\n    tag_5:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DexSwap/PancakeERC20.sol\":2605:2936  function transferFrom(... */\n    tag_6:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_30:\n        /* \"DexSwap/PancakeERC20.sol\":2605:2936  function transferFrom(... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_31\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DexSwap/PancakeERC20.sol\":651:759  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_7:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DexSwap/PancakeERC20.sol\":316:351  uint8 public constant decimals = 18 */\n    tag_8:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DexSwap/PancakeERC20.sol\":510:541  bytes32 public DOMAIN_SEPARATOR */\n    tag_9:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DexSwap/PancakeERC20.sol\":389:433  mapping(address => uint256) public balanceOf */\n    tag_10:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_39:\n        /* \"DexSwap/PancakeERC20.sol\":389:433  mapping(address => uint256) public balanceOf */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DexSwap/PancakeERC20.sol\":765:806  mapping(address => uint256) public nonces */\n    tag_11:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_42:\n        /* \"DexSwap/PancakeERC20.sol\":765:806  mapping(address => uint256) public nonces */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_43\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DexSwap/PancakeERC20.sol\":266:310  string public constant symbol = \"DexSwap-LP\" */\n    tag_12:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_46:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_48\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_46)\n    tag_48:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"DexSwap/PancakeERC20.sol\":266:310  string public constant symbol = \"DexSwap-LP\" */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_49\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_49:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DexSwap/PancakeERC20.sol\":2460:2599  function transfer(address to, uint256 value) external returns (bool) {... */\n    tag_13:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_51:\n        /* \"DexSwap/PancakeERC20.sol\":2460:2599  function transfer(address to, uint256 value) external returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DexSwap/PancakeERC20.sol\":2942:3668  function permit(... */\n    tag_14:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xe0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_54\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_54:\n        /* \"DexSwap/PancakeERC20.sol\":2942:3668  function permit(... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"DexSwap/PancakeERC20.sol\":439:503  mapping(address => mapping(address => uint256)) public allowance */\n    tag_15:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_57\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_57:\n        /* \"DexSwap/PancakeERC20.sol\":439:503  mapping(address => mapping(address => uint256)) public allowance */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DexSwap/PancakeERC20.sol\":217:260  string public constant name = \"DexSwap LPs\" */\n    tag_19:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      0x44657853776170204c5073000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"DexSwap/PancakeERC20.sol\":2307:2454  function approve(address spender, uint256 value) external returns (bool) {... */\n    tag_26:\n        /* \"DexSwap/PancakeERC20.sol\":2374:2378  bool */\n      0x00\n        /* \"DexSwap/PancakeERC20.sol\":2390:2426  _approve(msg.sender, spender, value) */\n      tag_60\n        /* \"DexSwap/PancakeERC20.sol\":2399:2409  msg.sender */\n      caller\n        /* \"DexSwap/PancakeERC20.sol\":2411:2418  spender */\n      dup5\n        /* \"DexSwap/PancakeERC20.sol\":2420:2425  value */\n      dup5\n        /* \"DexSwap/PancakeERC20.sol\":2390:2398  _approve */\n      tag_61\n        /* \"DexSwap/PancakeERC20.sol\":2390:2426  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_60:\n        /* \"DexSwap/PancakeERC20.sol\":2443:2447  true */\n      0x01\n        /* \"DexSwap/PancakeERC20.sol\":2436:2447  return true */\n      swap1\n      pop\n        /* \"DexSwap/PancakeERC20.sol\":2307:2454  function approve(address spender, uint256 value) external returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"DexSwap/PancakeERC20.sol\":357:383  uint256 public totalSupply */\n    tag_28:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"DexSwap/PancakeERC20.sol\":2605:2936  function transferFrom(... */\n    tag_31:\n        /* \"DexSwap/PancakeERC20.sol\":2716:2720  bool */\n      0x00\n        /* \"DexSwap/PancakeERC20.sol\":2775:2777  -1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"DexSwap/PancakeERC20.sol\":2736:2745  allowance */\n      0x02\n        /* \"DexSwap/PancakeERC20.sol\":2736:2751  allowance[from] */\n      0x00\n        /* \"DexSwap/PancakeERC20.sol\":2746:2750  from */\n      dup7\n        /* \"DexSwap/PancakeERC20.sol\":2736:2751  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DexSwap/PancakeERC20.sol\":2736:2763  allowance[from][msg.sender] */\n      0x00\n        /* \"DexSwap/PancakeERC20.sol\":2752:2762  msg.sender */\n      caller\n        /* \"DexSwap/PancakeERC20.sol\":2736:2763  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"DexSwap/PancakeERC20.sol\":2736:2778  allowance[from][msg.sender] != uint256(-1) */\n      eq\n        /* \"DexSwap/PancakeERC20.sol\":2732:2873  if (allowance[from][msg.sender] != uint256(-1)) {... */\n      tag_63\n      jumpi\n        /* \"DexSwap/PancakeERC20.sol\":2824:2862  allowance[from][msg.sender].sub(value) */\n      tag_64\n        /* \"DexSwap/PancakeERC20.sol\":2856:2861  value */\n      dup3\n        /* \"DexSwap/PancakeERC20.sol\":2824:2833  allowance */\n      0x02\n        /* \"DexSwap/PancakeERC20.sol\":2824:2839  allowance[from] */\n      0x00\n        /* \"DexSwap/PancakeERC20.sol\":2834:2838  from */\n      dup8\n        /* \"DexSwap/PancakeERC20.sol\":2824:2839  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DexSwap/PancakeERC20.sol\":2824:2851  allowance[from][msg.sender] */\n      0x00\n        /* \"DexSwap/PancakeERC20.sol\":2840:2850  msg.sender */\n      caller\n        /* \"DexSwap/PancakeERC20.sol\":2824:2851  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"DexSwap/PancakeERC20.sol\":2824:2855  allowance[from][msg.sender].sub */\n      tag_65\n      swap1\n        /* \"DexSwap/PancakeERC20.sol\":2824:2862  allowance[from][msg.sender].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_64:\n        /* \"DexSwap/PancakeERC20.sol\":2794:2803  allowance */\n      0x02\n        /* \"DexSwap/PancakeERC20.sol\":2794:2809  allowance[from] */\n      0x00\n        /* \"DexSwap/PancakeERC20.sol\":2804:2808  from */\n      dup7\n        /* \"DexSwap/PancakeERC20.sol\":2794:2809  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DexSwap/PancakeERC20.sol\":2794:2821  allowance[from][msg.sender] */\n      0x00\n        /* \"DexSwap/PancakeERC20.sol\":2810:2820  msg.sender */\n      caller\n        /* \"DexSwap/PancakeERC20.sol\":2794:2821  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DexSwap/PancakeERC20.sol\":2794:2862  allowance[from][msg.sender] = allowance[from][msg.sender].sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DexSwap/PancakeERC20.sol\":2732:2873  if (allowance[from][msg.sender] != uint256(-1)) {... */\n    tag_63:\n        /* \"DexSwap/PancakeERC20.sol\":2882:2908  _transfer(from, to, value) */\n      tag_66\n        /* \"DexSwap/PancakeERC20.sol\":2892:2896  from */\n      dup5\n        /* \"DexSwap/PancakeERC20.sol\":2898:2900  to */\n      dup5\n        /* \"DexSwap/PancakeERC20.sol\":2902:2907  value */\n      dup5\n        /* \"DexSwap/PancakeERC20.sol\":2882:2891  _transfer */\n      tag_67\n        /* \"DexSwap/PancakeERC20.sol\":2882:2908  _transfer(from, to, value) */\n      jump\t// in\n    tag_66:\n        /* \"DexSwap/PancakeERC20.sol\":2925:2929  true */\n      0x01\n        /* \"DexSwap/PancakeERC20.sol\":2918:2929  return true */\n      swap1\n      pop\n        /* \"DexSwap/PancakeERC20.sol\":2605:2936  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DexSwap/PancakeERC20.sol\":651:759  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_33:\n        /* \"DexSwap/PancakeERC20.sol\":693:759  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"DexSwap/PancakeERC20.sol\":651:759  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x00\n      shl\n      dup2\n      jump\t// out\n        /* \"DexSwap/PancakeERC20.sol\":316:351  uint8 public constant decimals = 18 */\n    tag_35:\n        /* \"DexSwap/PancakeERC20.sol\":349:351  18 */\n      0x12\n        /* \"DexSwap/PancakeERC20.sol\":316:351  uint8 public constant decimals = 18 */\n      dup2\n      jump\t// out\n        /* \"DexSwap/PancakeERC20.sol\":510:541  bytes32 public DOMAIN_SEPARATOR */\n    tag_37:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"DexSwap/PancakeERC20.sol\":389:433  mapping(address => uint256) public balanceOf */\n    tag_40:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"DexSwap/PancakeERC20.sol\":765:806  mapping(address => uint256) public nonces */\n    tag_43:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"DexSwap/PancakeERC20.sol\":266:310  string public constant symbol = \"DexSwap-LP\" */\n    tag_45:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0a\n      dup2\n      mstore\n      0x20\n      add\n      0x446578537761702d4c5000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"DexSwap/PancakeERC20.sol\":2460:2599  function transfer(address to, uint256 value) external returns (bool) {... */\n    tag_52:\n        /* \"DexSwap/PancakeERC20.sol\":2523:2527  bool */\n      0x00\n        /* \"DexSwap/PancakeERC20.sol\":2539:2571  _transfer(msg.sender, to, value) */\n      tag_69\n        /* \"DexSwap/PancakeERC20.sol\":2549:2559  msg.sender */\n      caller\n        /* \"DexSwap/PancakeERC20.sol\":2561:2563  to */\n      dup5\n        /* \"DexSwap/PancakeERC20.sol\":2565:2570  value */\n      dup5\n        /* \"DexSwap/PancakeERC20.sol\":2539:2548  _transfer */\n      tag_67\n        /* \"DexSwap/PancakeERC20.sol\":2539:2571  _transfer(msg.sender, to, value) */\n      jump\t// in\n    tag_69:\n        /* \"DexSwap/PancakeERC20.sol\":2588:2592  true */\n      0x01\n        /* \"DexSwap/PancakeERC20.sol\":2581:2592  return true */\n      swap1\n      pop\n        /* \"DexSwap/PancakeERC20.sol\":2460:2599  function transfer(address to, uint256 value) external returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"DexSwap/PancakeERC20.sol\":2942:3668  function permit(... */\n    tag_55:\n        /* \"DexSwap/PancakeERC20.sol\":3155:3170  block.timestamp */\n      timestamp\n        /* \"DexSwap/PancakeERC20.sol\":3143:3151  deadline */\n      dup5\n        /* \"DexSwap/PancakeERC20.sol\":3143:3170  deadline >= block.timestamp */\n      lt\n      iszero\n        /* \"DexSwap/PancakeERC20.sol\":3135:3191  require(deadline >= block.timestamp, \"Pancake: EXPIRED\") */\n      tag_71\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x10\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x50616e63616b653a204558504952454400000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_71:\n        /* \"DexSwap/PancakeERC20.sol\":3201:3215  bytes32 digest */\n      0x00\n        /* \"DexSwap/PancakeERC20.sol\":3303:3319  DOMAIN_SEPARATOR */\n      sload(0x03)\n        /* \"DexSwap/PancakeERC20.sol\":693:759  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"DexSwap/PancakeERC20.sol\":3358:3373  PERMIT_TYPEHASH */\n      0x00\n      shl\n        /* \"DexSwap/PancakeERC20.sol\":3375:3380  owner */\n      dup10\n        /* \"DexSwap/PancakeERC20.sol\":3382:3389  spender */\n      dup10\n        /* \"DexSwap/PancakeERC20.sol\":3391:3396  value */\n      dup10\n        /* \"DexSwap/PancakeERC20.sol\":3398:3404  nonces */\n      0x04\n        /* \"DexSwap/PancakeERC20.sol\":3398:3411  nonces[owner] */\n      0x00\n        /* \"DexSwap/PancakeERC20.sol\":3405:3410  owner */\n      dup15\n        /* \"DexSwap/PancakeERC20.sol\":3398:3411  nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"DexSwap/PancakeERC20.sol\":3398:3413  nonces[owner]++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"DexSwap/PancakeERC20.sol\":3415:3423  deadline */\n      dup11\n        /* \"DexSwap/PancakeERC20.sol\":3347:3424  abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline) */\n      add(0x20, mload(0x40))\n      dup1\n      dup8\n      dup2\n      mstore\n      0x20\n      add\n      dup7\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"DexSwap/PancakeERC20.sol\":3347:3424  abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline) */\n      swap1\n      0x40\n      mstore\n        /* \"DexSwap/PancakeERC20.sol\":3337:3425  keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"DexSwap/PancakeERC20.sol\":3241:3439  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      dup1\n      dup1\n      0x1901000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x02\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"DexSwap/PancakeERC20.sol\":3241:3439  abi.encodePacked(... */\n      swap1\n      0x40\n      mstore\n        /* \"DexSwap/PancakeERC20.sol\":3218:3449  keccak256(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"DexSwap/PancakeERC20.sol\":3201:3449  bytes32 digest = keccak256(... */\n      swap1\n      pop\n        /* \"DexSwap/PancakeERC20.sol\":3459:3483  address recoveredAddress */\n      0x00\n        /* \"DexSwap/PancakeERC20.sol\":3486:3512  ecrecover(digest, v, r, s) */\n      0x01\n        /* \"DexSwap/PancakeERC20.sol\":3496:3502  digest */\n      dup3\n        /* \"DexSwap/PancakeERC20.sol\":3504:3505  v */\n      dup7\n        /* \"DexSwap/PancakeERC20.sol\":3507:3508  r */\n      dup7\n        /* \"DexSwap/PancakeERC20.sol\":3510:3511  s */\n      dup7\n        /* \"DexSwap/PancakeERC20.sol\":3486:3512  ecrecover(digest, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_72\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_72:\n        /* \"DexSwap/PancakeERC20.sol\":3486:3512  ecrecover(digest, v, r, s) */\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"DexSwap/PancakeERC20.sol\":3459:3512  address recoveredAddress = ecrecover(digest, v, r, s) */\n      swap1\n      pop\n        /* \"DexSwap/PancakeERC20.sol\":3558:3559  0 */\n      0x00\n        /* \"DexSwap/PancakeERC20.sol\":3530:3560  recoveredAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/PancakeERC20.sol\":3530:3546  recoveredAddress */\n      dup2\n        /* \"DexSwap/PancakeERC20.sol\":3530:3560  recoveredAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"DexSwap/PancakeERC20.sol\":3530:3589  recoveredAddress != address(0) && recoveredAddress == owner */\n      dup1\n      iszero\n      tag_73\n      jumpi\n      pop\n        /* \"DexSwap/PancakeERC20.sol\":3584:3589  owner */\n      dup9\n        /* \"DexSwap/PancakeERC20.sol\":3564:3589  recoveredAddress == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/PancakeERC20.sol\":3564:3580  recoveredAddress */\n      dup2\n        /* \"DexSwap/PancakeERC20.sol\":3564:3589  recoveredAddress == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"DexSwap/PancakeERC20.sol\":3530:3589  recoveredAddress != address(0) && recoveredAddress == owner */\n    tag_73:\n        /* \"DexSwap/PancakeERC20.sol\":3522:3620  require(recoveredAddress != address(0) && recoveredAddress == owner, \"Pancake: INVALID_SIGNATURE\") */\n      tag_74\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x50616e63616b653a20494e56414c49445f5349474e4154555245000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_74:\n        /* \"DexSwap/PancakeERC20.sol\":3630:3661  _approve(owner, spender, value) */\n      tag_75\n        /* \"DexSwap/PancakeERC20.sol\":3639:3644  owner */\n      dup10\n        /* \"DexSwap/PancakeERC20.sol\":3646:3653  spender */\n      dup10\n        /* \"DexSwap/PancakeERC20.sol\":3655:3660  value */\n      dup10\n        /* \"DexSwap/PancakeERC20.sol\":3630:3638  _approve */\n      tag_61\n        /* \"DexSwap/PancakeERC20.sol\":3630:3661  _approve(owner, spender, value) */\n      jump\t// in\n    tag_75:\n        /* \"DexSwap/PancakeERC20.sol\":2942:3668  function permit(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DexSwap/PancakeERC20.sol\":439:503  mapping(address => mapping(address => uint256)) public allowance */\n    tag_58:\n      mstore(0x20, 0x02)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"DexSwap/PancakeERC20.sol\":1847:2046  function _approve(... */\n    tag_61:\n        /* \"DexSwap/PancakeERC20.sol\":1988:1993  value */\n      dup1\n        /* \"DexSwap/PancakeERC20.sol\":1960:1969  allowance */\n      0x02\n        /* \"DexSwap/PancakeERC20.sol\":1960:1976  allowance[owner] */\n      0x00\n        /* \"DexSwap/PancakeERC20.sol\":1970:1975  owner */\n      dup6\n        /* \"DexSwap/PancakeERC20.sol\":1960:1976  allowance[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DexSwap/PancakeERC20.sol\":1960:1985  allowance[owner][spender] */\n      0x00\n        /* \"DexSwap/PancakeERC20.sol\":1977:1984  spender */\n      dup5\n        /* \"DexSwap/PancakeERC20.sol\":1960:1985  allowance[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DexSwap/PancakeERC20.sol\":1960:1993  allowance[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DexSwap/PancakeERC20.sol\":2024:2031  spender */\n      dup2\n        /* \"DexSwap/PancakeERC20.sol\":2008:2039  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/PancakeERC20.sol\":2017:2022  owner */\n      dup4\n        /* \"DexSwap/PancakeERC20.sol\":2008:2039  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"DexSwap/PancakeERC20.sol\":2033:2038  value */\n      dup4\n        /* \"DexSwap/PancakeERC20.sol\":2008:2039  Approval(owner, spender, value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"DexSwap/PancakeERC20.sol\":1847:2046  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DexSwap/libraries/SafeMath.sol\":339:475  function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n    tag_65:\n        /* \"DexSwap/libraries/SafeMath.sol\":397:406  uint256 z */\n      0x00\n        /* \"DexSwap/libraries/SafeMath.sol\":441:442  x */\n      dup3\n        /* \"DexSwap/libraries/SafeMath.sol\":435:436  y */\n      dup3\n        /* \"DexSwap/libraries/SafeMath.sol\":431:432  x */\n      dup5\n        /* \"DexSwap/libraries/SafeMath.sol\":431:436  x - y */\n      sub\n        /* \"DexSwap/libraries/SafeMath.sol\":427:436  z = x - y */\n      swap2\n      pop\n      dup2\n        /* \"DexSwap/libraries/SafeMath.sol\":426:442  (z = x - y) <= x */\n      gt\n      iszero\n        /* \"DexSwap/libraries/SafeMath.sol\":418:468  require((z = x - y) <= x, \"ds-math-sub-underflow\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x15\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x64732d6d6174682d7375622d756e646572666c6f770000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_78:\n        /* \"DexSwap/libraries/SafeMath.sol\":339:475  function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"DexSwap/PancakeERC20.sol\":2052:2301  function _transfer(... */\n    tag_67:\n        /* \"DexSwap/PancakeERC20.sol\":2178:2204  balanceOf[from].sub(value) */\n      tag_80\n        /* \"DexSwap/PancakeERC20.sol\":2198:2203  value */\n      dup2\n        /* \"DexSwap/PancakeERC20.sol\":2178:2187  balanceOf */\n      0x01\n        /* \"DexSwap/PancakeERC20.sol\":2178:2193  balanceOf[from] */\n      0x00\n        /* \"DexSwap/PancakeERC20.sol\":2188:2192  from */\n      dup7\n        /* \"DexSwap/PancakeERC20.sol\":2178:2193  balanceOf[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"DexSwap/PancakeERC20.sol\":2178:2197  balanceOf[from].sub */\n      tag_65\n      swap1\n        /* \"DexSwap/PancakeERC20.sol\":2178:2204  balanceOf[from].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_80:\n        /* \"DexSwap/PancakeERC20.sol\":2160:2169  balanceOf */\n      0x01\n        /* \"DexSwap/PancakeERC20.sol\":2160:2175  balanceOf[from] */\n      0x00\n        /* \"DexSwap/PancakeERC20.sol\":2170:2174  from */\n      dup6\n        /* \"DexSwap/PancakeERC20.sol\":2160:2175  balanceOf[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DexSwap/PancakeERC20.sol\":2160:2204  balanceOf[from] = balanceOf[from].sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DexSwap/PancakeERC20.sol\":2230:2254  balanceOf[to].add(value) */\n      tag_81\n        /* \"DexSwap/PancakeERC20.sol\":2248:2253  value */\n      dup2\n        /* \"DexSwap/PancakeERC20.sol\":2230:2239  balanceOf */\n      0x01\n        /* \"DexSwap/PancakeERC20.sol\":2230:2243  balanceOf[to] */\n      0x00\n        /* \"DexSwap/PancakeERC20.sol\":2240:2242  to */\n      dup6\n        /* \"DexSwap/PancakeERC20.sol\":2230:2243  balanceOf[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"DexSwap/PancakeERC20.sol\":2230:2247  balanceOf[to].add */\n      tag_82\n      swap1\n        /* \"DexSwap/PancakeERC20.sol\":2230:2254  balanceOf[to].add(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_81:\n        /* \"DexSwap/PancakeERC20.sol\":2214:2223  balanceOf */\n      0x01\n        /* \"DexSwap/PancakeERC20.sol\":2214:2227  balanceOf[to] */\n      0x00\n        /* \"DexSwap/PancakeERC20.sol\":2224:2226  to */\n      dup5\n        /* \"DexSwap/PancakeERC20.sol\":2214:2227  balanceOf[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DexSwap/PancakeERC20.sol\":2214:2254  balanceOf[to] = balanceOf[to].add(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DexSwap/PancakeERC20.sol\":2284:2286  to */\n      dup2\n        /* \"DexSwap/PancakeERC20.sol\":2269:2294  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DexSwap/PancakeERC20.sol\":2278:2282  from */\n      dup4\n        /* \"DexSwap/PancakeERC20.sol\":2269:2294  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"DexSwap/PancakeERC20.sol\":2288:2293  value */\n      dup4\n        /* \"DexSwap/PancakeERC20.sol\":2269:2294  Transfer(from, to, value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"DexSwap/PancakeERC20.sol\":2052:2301  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DexSwap/libraries/SafeMath.sol\":198:333  function add(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n    tag_82:\n        /* \"DexSwap/libraries/SafeMath.sol\":256:265  uint256 z */\n      0x00\n        /* \"DexSwap/libraries/SafeMath.sol\":300:301  x */\n      dup3\n        /* \"DexSwap/libraries/SafeMath.sol\":294:295  y */\n      dup3\n        /* \"DexSwap/libraries/SafeMath.sol\":290:291  x */\n      dup5\n        /* \"DexSwap/libraries/SafeMath.sol\":290:295  x + y */\n      add\n        /* \"DexSwap/libraries/SafeMath.sol\":286:295  z = x + y */\n      swap2\n      pop\n      dup2\n        /* \"DexSwap/libraries/SafeMath.sol\":285:301  (z = x + y) >= x */\n      lt\n      iszero\n        /* \"DexSwap/libraries/SafeMath.sol\":277:326  require((z = x + y) >= x, \"ds-math-add-overflow\") */\n      tag_84\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x64732d6d6174682d6164642d6f766572666c6f77000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_84:\n        /* \"DexSwap/libraries/SafeMath.sol\":198:333  function add(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa265627a7a72315820158bf41a51cf6dc35ca8f49903864880f992bbb70bfe7a69a0c77ac5a83e935c64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506000469050604051808061109060529139605201905060405180910390206040518060400160405280600b81526020017f44657853776170204c5073000000000000000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250805190602001208330604051602001808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001955050505050506040516020818303038152906040528051906020012060038190555050610f618061012f6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80633644e5151161008c57806395d89b411161006657806395d89b4114610371578063a9059cbb146103f4578063d505accf1461045a578063dd62ed3e146104f3576100cf565b80633644e515146102a357806370a08231146102c15780637ecebe0014610319576100cf565b806306fdde03146100d4578063095ea7b31461015757806318160ddd146101bd57806323b872dd146101db57806330adf81f14610261578063313ce5671461027f575b600080fd5b6100dc61056b565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561011c578082015181840152602081019050610101565b50505050905090810190601f1680156101495780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a36004803603604081101561016d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a4565b604051808215151515815260200191505060405180910390f35b6101c56105bb565b6040518082815260200191505060405180910390f35b610247600480360360608110156101f157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105c1565b604051808215151515815260200191505060405180910390f35b61026961078c565b6040518082815260200191505060405180910390f35b6102876107b3565b604051808260ff1660ff16815260200191505060405180910390f35b6102ab6107b8565b6040518082815260200191505060405180910390f35b610303600480360360208110156102d757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107be565b6040518082815260200191505060405180910390f35b61035b6004803603602081101561032f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107d6565b6040518082815260200191505060405180910390f35b6103796107ee565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103b957808201518184015260208101905061039e565b50505050905090810190601f1680156103e65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104406004803603604081101561040a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610827565b604051808215151515815260200191505060405180910390f35b6104f1600480360360e081101561047057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff169060200190929190803590602001909291908035906020019092919050505061083e565b005b6105556004803603604081101561050957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b82565b6040518082815260200191505060405180910390f35b6040518060400160405280600b81526020017f44657853776170204c507300000000000000000000000000000000000000000081525081565b60006105b1338484610ba7565b6001905092915050565b60005481565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610776576106f582600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c9290919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b610781848484610d15565b600190509392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b601281565b60035481565b60016020528060005260406000206000915090505481565b60046020528060005260406000206000915090505481565b6040518060400160405280600a81526020017f446578537761702d4c500000000000000000000000000000000000000000000081525081565b6000610834338484610d15565b6001905092915050565b428410156108b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f50616e63616b653a20455850495245440000000000000000000000000000000081525060200191505060405180910390fd5b60006003547f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b898989600460008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558a604051602001808781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200196505050505050506040516020818303038152906040528051906020012060405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050600060018286868660405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610a86573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610afa57508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610b6c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f50616e63616b653a20494e56414c49445f5349474e415455524500000000000081525060200191505060405180910390fd5b610b77898989610ba7565b505050505050505050565b6002602052816000526040600020602052806000526040600020600091509150505481565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b6000828284039150811115610d0f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f64732d6d6174682d7375622d756e646572666c6f77000000000000000000000081525060200191505060405180910390fd5b92915050565b610d6781600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c9290919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610dfc81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ea990919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000828284019150811015610f26576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d6d6174682d6164642d6f766572666c6f7700000000000000000000000081525060200191505060405180910390fd5b9291505056fea265627a7a72315820158bf41a51cf6dc35ca8f49903864880f992bbb70bfe7a69a0c77ac5a83e935c64736f6c63430005100032454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 CHAINID SWAP1 POP PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x1090 PUSH1 0x52 SWAP2 CODECOPY PUSH1 0x52 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44657853776170204C5073000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP PUSH2 0xF61 DUP1 PUSH2 0x12F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3644E515 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4F3 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x319 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x27F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x101 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x149 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C5 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH2 0x78C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x287 PUSH2 0x7B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x303 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x379 PUSH2 0x7EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3B9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x39E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3E6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x440 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x827 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x83E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x555 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44657853776170204C5073000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B1 CALLER DUP5 DUP5 PUSH2 0xBA7 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x776 JUMPI PUSH2 0x6F5 DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x781 DUP5 DUP5 DUP5 PUSH2 0xD15 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x446578537761702D4C5000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x834 CALLER DUP5 DUP5 PUSH2 0xD15 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x8B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A204558504952454400000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP10 DUP10 DUP10 PUSH1 0x4 PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA86 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xAFA JUMPI POP DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xB6C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A20494E56414C49445F5349474E4154555245000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB77 DUP10 DUP10 DUP10 PUSH2 0xBA7 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 SUB SWAP2 POP DUP2 GT ISZERO PUSH2 0xD0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D7375622D756E646572666C6F770000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD67 DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xDFC DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xEA9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 ADD SWAP2 POP DUP2 LT ISZERO PUSH2 0xF26 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D6164642D6F766572666C6F77000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 ISZERO DUP12 DELEGATECALL BYTE MLOAD 0xCF PUSH14 0xC35CA8F49903864880F992BBB70B INVALID PUSH27 0x69A0C77AC5A83E935C64736F6C6343000510003245495037313244 PUSH16 0x6D61696E28737472696E67206E616D65 0x2C PUSH20 0x7472696E672076657273696F6E2C75696E743235 CALLDATASIZE KECCAK256 PUSH4 0x6861696E 0x49 PUSH5 0x2C61646472 PUSH6 0x737320766572 PUSH10 0x6679696E67436F6E7472 PUSH2 0x6374 0x29 ",
							"sourceMap": "139:3531:1:-;;;974:447;8:9:-1;5:2;;;30:1;27;20:12;5:2;974:447:1;1005:15;1064:7;1053:18;;1160:95;;;;;;;;;;;;;;;;;;;1289:4;;;;;;;;;;;;;;;;;1273:22;;;;;;1323:10;;;;;;;;;;;;;;;;;1313:21;;;;;;1352:7;1385:4;1132:272;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1132:272:1;;;1109:305;;;;;;1090:16;:324;;;;974:447;139:3531;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80633644e5151161008c57806395d89b411161006657806395d89b4114610371578063a9059cbb146103f4578063d505accf1461045a578063dd62ed3e146104f3576100cf565b80633644e515146102a357806370a08231146102c15780637ecebe0014610319576100cf565b806306fdde03146100d4578063095ea7b31461015757806318160ddd146101bd57806323b872dd146101db57806330adf81f14610261578063313ce5671461027f575b600080fd5b6100dc61056b565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561011c578082015181840152602081019050610101565b50505050905090810190601f1680156101495780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a36004803603604081101561016d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a4565b604051808215151515815260200191505060405180910390f35b6101c56105bb565b6040518082815260200191505060405180910390f35b610247600480360360608110156101f157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105c1565b604051808215151515815260200191505060405180910390f35b61026961078c565b6040518082815260200191505060405180910390f35b6102876107b3565b604051808260ff1660ff16815260200191505060405180910390f35b6102ab6107b8565b6040518082815260200191505060405180910390f35b610303600480360360208110156102d757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107be565b6040518082815260200191505060405180910390f35b61035b6004803603602081101561032f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107d6565b6040518082815260200191505060405180910390f35b6103796107ee565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103b957808201518184015260208101905061039e565b50505050905090810190601f1680156103e65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104406004803603604081101561040a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610827565b604051808215151515815260200191505060405180910390f35b6104f1600480360360e081101561047057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff169060200190929190803590602001909291908035906020019092919050505061083e565b005b6105556004803603604081101561050957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b82565b6040518082815260200191505060405180910390f35b6040518060400160405280600b81526020017f44657853776170204c507300000000000000000000000000000000000000000081525081565b60006105b1338484610ba7565b6001905092915050565b60005481565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610776576106f582600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c9290919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b610781848484610d15565b600190509392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b601281565b60035481565b60016020528060005260406000206000915090505481565b60046020528060005260406000206000915090505481565b6040518060400160405280600a81526020017f446578537761702d4c500000000000000000000000000000000000000000000081525081565b6000610834338484610d15565b6001905092915050565b428410156108b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f50616e63616b653a20455850495245440000000000000000000000000000000081525060200191505060405180910390fd5b60006003547f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b898989600460008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558a604051602001808781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200196505050505050506040516020818303038152906040528051906020012060405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050600060018286868660405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610a86573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610afa57508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610b6c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f50616e63616b653a20494e56414c49445f5349474e415455524500000000000081525060200191505060405180910390fd5b610b77898989610ba7565b505050505050505050565b6002602052816000526040600020602052806000526040600020600091509150505481565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b6000828284039150811115610d0f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f64732d6d6174682d7375622d756e646572666c6f77000000000000000000000081525060200191505060405180910390fd5b92915050565b610d6781600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c9290919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610dfc81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ea990919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000828284019150811015610f26576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d6d6174682d6164642d6f766572666c6f7700000000000000000000000081525060200191505060405180910390fd5b9291505056fea265627a7a72315820158bf41a51cf6dc35ca8f49903864880f992bbb70bfe7a69a0c77ac5a83e935c64736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3644E515 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4F3 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x319 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x27F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x101 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x149 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C5 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH2 0x78C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x287 PUSH2 0x7B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x303 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x379 PUSH2 0x7EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3B9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x39E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3E6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x440 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x827 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x83E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x555 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44657853776170204C5073000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B1 CALLER DUP5 DUP5 PUSH2 0xBA7 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x776 JUMPI PUSH2 0x6F5 DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x781 DUP5 DUP5 DUP5 PUSH2 0xD15 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x446578537761702D4C5000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x834 CALLER DUP5 DUP5 PUSH2 0xD15 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x8B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A204558504952454400000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP10 DUP10 DUP10 PUSH1 0x4 PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA86 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xAFA JUMPI POP DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xB6C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A20494E56414C49445F5349474E4154555245000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB77 DUP10 DUP10 DUP10 PUSH2 0xBA7 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 SUB SWAP2 POP DUP2 GT ISZERO PUSH2 0xD0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D7375622D756E646572666C6F770000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD67 DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xDFC DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xEA9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 ADD SWAP2 POP DUP2 LT ISZERO PUSH2 0xF26 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D6164642D6F766572666C6F77000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 ISZERO DUP12 DELEGATECALL BYTE MLOAD 0xCF PUSH14 0xC35CA8F49903864880F992BBB70B INVALID PUSH27 0x69A0C77AC5A83E935C64736F6C6343000510003200000000000000 ",
							"sourceMap": "139:3531:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;139:3531:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;217:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;217:43:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2307:147;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2307:147:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;357:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2605:331;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2605:331:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;651:108;;;:::i;:::-;;;;;;;;;;;;;;;;;;;316:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;510:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;389:44;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;389:44:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;765:41;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;765:41:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;266:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;266:44:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2460:139;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2460:139:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2942:726;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2942:726:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;439:64;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;439:64:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;217:43;;;;;;;;;;;;;;;;;;;:::o;2307:147::-;2374:4;2390:36;2399:10;2411:7;2420:5;2390:8;:36::i;:::-;2443:4;2436:11;;2307:147;;;;:::o;357:26::-;;;;:::o;2605:331::-;2716:4;2775:2;2736:9;:15;2746:4;2736:15;;;;;;;;;;;;;;;:27;2752:10;2736:27;;;;;;;;;;;;;;;;:42;2732:141;;2824:38;2856:5;2824:9;:15;2834:4;2824:15;;;;;;;;;;;;;;;:27;2840:10;2824:27;;;;;;;;;;;;;;;;:31;;:38;;;;:::i;:::-;2794:9;:15;2804:4;2794:15;;;;;;;;;;;;;;;:27;2810:10;2794:27;;;;;;;;;;;;;;;:68;;;;2732:141;2882:26;2892:4;2898:2;2902:5;2882:9;:26::i;:::-;2925:4;2918:11;;2605:331;;;;;:::o;651:108::-;693:66;651:108;;;:::o;316:35::-;349:2;316:35;:::o;510:31::-;;;;:::o;389:44::-;;;;;;;;;;;;;;;;;:::o;765:41::-;;;;;;;;;;;;;;;;;:::o;266:44::-;;;;;;;;;;;;;;;;;;;:::o;2460:139::-;2523:4;2539:32;2549:10;2561:2;2565:5;2539:9;:32::i;:::-;2588:4;2581:11;;2460:139;;;;:::o;2942:726::-;3155:15;3143:8;:27;;3135:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3201:14;3303:16;;693:66;3358:15;;3375:5;3382:7;3391:5;3398:6;:13;3405:5;3398:13;;;;;;;;;;;;;;;;:15;;;;;;;;;;;;3415:8;3347:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3347:77:1;;;3337:88;;;;;;3241:198;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3241:198:1;;;3218:231;;;;;;3201:248;;3459:24;3486:26;3496:6;3504:1;3507;3510;3486:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3486:26:1;;;;;;;;3459:53;;3558:1;3530:30;;:16;:30;;;;:59;;;;;3584:5;3564:25;;:16;:25;;;3530:59;3522:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3630:31;3639:5;3646:7;3655:5;3630:8;:31::i;:::-;2942:726;;;;;;;;;:::o;439:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1847:199::-;1988:5;1960:9;:16;1970:5;1960:16;;;;;;;;;;;;;;;:25;1977:7;1960:25;;;;;;;;;;;;;;;:33;;;;2024:7;2008:31;;2017:5;2008:31;;;2033:5;2008:31;;;;;;;;;;;;;;;;;;1847:199;;;:::o;339:136:8:-;397:9;441:1;435;431;:5;427:9;;;426:16;;418:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;339:136;;;;:::o;2052:249:1:-;2178:26;2198:5;2178:9;:15;2188:4;2178:15;;;;;;;;;;;;;;;;:19;;:26;;;;:::i;:::-;2160:9;:15;2170:4;2160:15;;;;;;;;;;;;;;;:44;;;;2230:24;2248:5;2230:9;:13;2240:2;2230:13;;;;;;;;;;;;;;;;:17;;:24;;;;:::i;:::-;2214:9;:13;2224:2;2214:13;;;;;;;;;;;;;;;:40;;;;2284:2;2269:25;;2278:4;2269:25;;;2288:5;2269:25;;;;;;;;;;;;;;;;;;2052:249;;;:::o;198:135:8:-;256:9;300:1;294;290;:5;286:9;;;285:16;;277:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;198:135;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "787400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "1028",
								"PERMIT_TYPEHASH()": "300",
								"allowance(address,address)": "1355",
								"approve(address,uint256)": "22431",
								"balanceOf(address)": "1214",
								"decimals()": "328",
								"name()": "infinite",
								"nonces(address)": "1236",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1050",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 139,
									"end": 3670,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 139,
									"end": 3670,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 139,
									"end": 3670,
									"name": "MSTORE"
								},
								{
									"begin": 974,
									"end": 1421,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 974,
									"end": 1421,
									"name": "POP"
								},
								{
									"begin": 1005,
									"end": 1020,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1064,
									"end": 1071,
									"name": "CHAINID"
								},
								{
									"begin": 1053,
									"end": 1071,
									"name": "SWAP1"
								},
								{
									"begin": 1053,
									"end": 1071,
									"name": "POP"
								},
								{
									"begin": 1160,
									"end": 1255,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1160,
									"end": 1255,
									"name": "MLOAD"
								},
								{
									"begin": 1160,
									"end": 1255,
									"name": "DUP1"
								},
								{
									"begin": 1160,
									"end": 1255,
									"name": "DUP1"
								},
								{
									"begin": 1160,
									"end": 1255,
									"name": "PUSH data",
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 1160,
									"end": 1255,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1160,
									"end": 1255,
									"name": "SWAP2"
								},
								{
									"begin": 1160,
									"end": 1255,
									"name": "CODECOPY"
								},
								{
									"begin": 1160,
									"end": 1255,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1160,
									"end": 1255,
									"name": "ADD"
								},
								{
									"begin": 1160,
									"end": 1255,
									"name": "SWAP1"
								},
								{
									"begin": 1160,
									"end": 1255,
									"name": "POP"
								},
								{
									"begin": 1160,
									"end": 1255,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1160,
									"end": 1255,
									"name": "MLOAD"
								},
								{
									"begin": 1160,
									"end": 1255,
									"name": "DUP1"
								},
								{
									"begin": 1160,
									"end": 1255,
									"name": "SWAP2"
								},
								{
									"begin": 1160,
									"end": 1255,
									"name": "SUB"
								},
								{
									"begin": 1160,
									"end": 1255,
									"name": "SWAP1"
								},
								{
									"begin": 1160,
									"end": 1255,
									"name": "KECCAK256"
								},
								{
									"begin": 1289,
									"end": 1293,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1289,
									"end": 1293,
									"name": "MLOAD"
								},
								{
									"begin": 1289,
									"end": 1293,
									"name": "DUP1"
								},
								{
									"begin": 1289,
									"end": 1293,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1289,
									"end": 1293,
									"name": "ADD"
								},
								{
									"begin": 1289,
									"end": 1293,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1289,
									"end": 1293,
									"name": "MSTORE"
								},
								{
									"begin": 1289,
									"end": 1293,
									"name": "DUP1"
								},
								{
									"begin": 1289,
									"end": 1293,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 1289,
									"end": 1293,
									"name": "DUP2"
								},
								{
									"begin": 1289,
									"end": 1293,
									"name": "MSTORE"
								},
								{
									"begin": 1289,
									"end": 1293,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1289,
									"end": 1293,
									"name": "ADD"
								},
								{
									"begin": 1289,
									"end": 1293,
									"name": "PUSH",
									"value": "44657853776170204C5073000000000000000000000000000000000000000000"
								},
								{
									"begin": 1289,
									"end": 1293,
									"name": "DUP2"
								},
								{
									"begin": 1289,
									"end": 1293,
									"name": "MSTORE"
								},
								{
									"begin": 1289,
									"end": 1293,
									"name": "POP"
								},
								{
									"begin": 1273,
									"end": 1295,
									"name": "DUP1"
								},
								{
									"begin": 1273,
									"end": 1295,
									"name": "MLOAD"
								},
								{
									"begin": 1273,
									"end": 1295,
									"name": "SWAP1"
								},
								{
									"begin": 1273,
									"end": 1295,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1273,
									"end": 1295,
									"name": "ADD"
								},
								{
									"begin": 1273,
									"end": 1295,
									"name": "KECCAK256"
								},
								{
									"begin": 1323,
									"end": 1333,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1323,
									"end": 1333,
									"name": "MLOAD"
								},
								{
									"begin": 1323,
									"end": 1333,
									"name": "DUP1"
								},
								{
									"begin": 1323,
									"end": 1333,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1323,
									"end": 1333,
									"name": "ADD"
								},
								{
									"begin": 1323,
									"end": 1333,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1323,
									"end": 1333,
									"name": "MSTORE"
								},
								{
									"begin": 1323,
									"end": 1333,
									"name": "DUP1"
								},
								{
									"begin": 1323,
									"end": 1333,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1323,
									"end": 1333,
									"name": "DUP2"
								},
								{
									"begin": 1323,
									"end": 1333,
									"name": "MSTORE"
								},
								{
									"begin": 1323,
									"end": 1333,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1323,
									"end": 1333,
									"name": "ADD"
								},
								{
									"begin": 1323,
									"end": 1333,
									"name": "PUSH",
									"value": "3100000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1323,
									"end": 1333,
									"name": "DUP2"
								},
								{
									"begin": 1323,
									"end": 1333,
									"name": "MSTORE"
								},
								{
									"begin": 1323,
									"end": 1333,
									"name": "POP"
								},
								{
									"begin": 1313,
									"end": 1334,
									"name": "DUP1"
								},
								{
									"begin": 1313,
									"end": 1334,
									"name": "MLOAD"
								},
								{
									"begin": 1313,
									"end": 1334,
									"name": "SWAP1"
								},
								{
									"begin": 1313,
									"end": 1334,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1313,
									"end": 1334,
									"name": "ADD"
								},
								{
									"begin": 1313,
									"end": 1334,
									"name": "KECCAK256"
								},
								{
									"begin": 1352,
									"end": 1359,
									"name": "DUP4"
								},
								{
									"begin": 1385,
									"end": 1389,
									"name": "ADDRESS"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "MLOAD"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "ADD"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "DUP1"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "DUP7"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "DUP2"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "MSTORE"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "ADD"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "DUP6"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "DUP2"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "MSTORE"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "ADD"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "DUP5"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "DUP2"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "MSTORE"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "ADD"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "DUP4"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "DUP2"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "MSTORE"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "ADD"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "DUP3"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "AND"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "AND"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "DUP2"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "MSTORE"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "ADD"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "SWAP6"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "POP"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "POP"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "POP"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "POP"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "POP"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "POP"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "MLOAD"
								},
								{
									"begin": 49,
									"end": 53,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 39,
									"end": 46,
									"name": "DUP2"
								},
								{
									"begin": 30,
									"end": 37,
									"name": "DUP4"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "SUB"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "SUB"
								},
								{
									"begin": 13,
									"end": 20,
									"name": "DUP2"
								},
								{
									"begin": 6,
									"end": 55,
									"name": "MSTORE"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "SWAP1"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1132,
									"end": 1404,
									"name": "MSTORE"
								},
								{
									"begin": 1109,
									"end": 1414,
									"name": "DUP1"
								},
								{
									"begin": 1109,
									"end": 1414,
									"name": "MLOAD"
								},
								{
									"begin": 1109,
									"end": 1414,
									"name": "SWAP1"
								},
								{
									"begin": 1109,
									"end": 1414,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1109,
									"end": 1414,
									"name": "ADD"
								},
								{
									"begin": 1109,
									"end": 1414,
									"name": "KECCAK256"
								},
								{
									"begin": 1090,
									"end": 1106,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 1090,
									"end": 1414,
									"name": "DUP2"
								},
								{
									"begin": 1090,
									"end": 1414,
									"name": "SWAP1"
								},
								{
									"begin": 1090,
									"end": 1414,
									"name": "SSTORE"
								},
								{
									"begin": 1090,
									"end": 1414,
									"name": "POP"
								},
								{
									"begin": 974,
									"end": 1421,
									"name": "POP"
								},
								{
									"begin": 139,
									"end": 3670,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 139,
									"end": 3670,
									"name": "DUP1"
								},
								{
									"begin": 139,
									"end": 3670,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 139,
									"end": 3670,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 139,
									"end": 3670,
									"name": "CODECOPY"
								},
								{
									"begin": 139,
									"end": 3670,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 139,
									"end": 3670,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820158bf41a51cf6dc35ca8f49903864880f992bbb70bfe7a69a0c77ac5a83e935c64736f6c63430005100032",
									".code": [
										{
											"begin": 139,
											"end": 3670,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "MSTORE"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "POP"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "LT"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "SHR"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "PUSH",
											"value": "3644E515"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "GT"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "GT"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "PUSH",
											"value": "D505ACCF"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "JUMP"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "JUMPDEST"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "PUSH",
											"value": "3644E515"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "PUSH",
											"value": "7ECEBE00"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "JUMP"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "JUMPDEST"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "PUSH",
											"value": "30ADF81F"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "JUMPDEST"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 3670,
											"name": "REVERT"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "JUMPDEST"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "JUMPDEST"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "MLOAD"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "ADD"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP3"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SUB"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP3"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "MSTORE"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP4"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "MLOAD"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "MSTORE"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "ADD"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SWAP2"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "MLOAD"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SWAP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "ADD"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SWAP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP4"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SWAP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SWAP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "ADD"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SWAP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "AND"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "ISZERO"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "JUMPI"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP3"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SUB"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "MLOAD"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP4"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SUB"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "EXP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SUB"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "NOT"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "AND"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "MSTORE"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "ADD"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SWAP2"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "JUMPDEST"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SWAP3"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "MLOAD"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SWAP2"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SUB"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "SWAP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "RETURN"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "JUMPDEST"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "DUP1"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "DUP2"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "ADD"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "SWAP1"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "DUP1"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "DUP1"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "AND"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "SWAP1"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "ADD"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "SWAP1"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "SWAP3"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "SWAP2"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "SWAP1"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "DUP1"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "SWAP1"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "ADD"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "SWAP1"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "SWAP3"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "SWAP2"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "SWAP1"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "POP"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "POP"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "POP"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "JUMPDEST"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "MLOAD"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "DUP1"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "DUP3"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "ISZERO"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "ISZERO"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "ISZERO"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "ISZERO"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "DUP2"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "MSTORE"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "ADD"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "SWAP2"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "POP"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "POP"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "MLOAD"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "DUP1"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "SWAP2"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "SUB"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "SWAP1"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "RETURN"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "JUMPDEST"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "JUMPDEST"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "MLOAD"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "DUP1"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "DUP3"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "DUP2"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "MSTORE"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "ADD"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "SWAP2"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "POP"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "POP"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "MLOAD"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "DUP1"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "SWAP2"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "SUB"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "SWAP1"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "RETURN"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "JUMPDEST"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "DUP1"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "DUP2"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "ADD"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "SWAP1"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "DUP1"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "DUP1"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "AND"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "SWAP1"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "ADD"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "SWAP1"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "SWAP3"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "SWAP2"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "SWAP1"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "DUP1"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "AND"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "SWAP1"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "ADD"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "SWAP1"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "SWAP3"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "SWAP2"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "SWAP1"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "DUP1"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "SWAP1"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "ADD"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "SWAP1"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "SWAP3"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "SWAP2"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "SWAP1"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "POP"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "POP"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "POP"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "JUMPDEST"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "MLOAD"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "DUP1"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "DUP3"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "ISZERO"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "ISZERO"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "ISZERO"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "ISZERO"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "DUP2"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "MSTORE"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "ADD"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "SWAP2"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "POP"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "POP"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "MLOAD"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "DUP1"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "SWAP2"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "SUB"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "SWAP1"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "RETURN"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "JUMPDEST"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "JUMPDEST"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "MLOAD"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "DUP1"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "DUP3"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "DUP2"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "MSTORE"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "ADD"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "SWAP2"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "POP"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "POP"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "MLOAD"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "DUP1"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "SWAP2"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "SUB"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "SWAP1"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "RETURN"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "JUMPDEST"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "JUMPDEST"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "MLOAD"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "DUP1"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "DUP3"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "AND"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "AND"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "DUP2"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "MSTORE"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "ADD"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "SWAP2"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "POP"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "POP"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "MLOAD"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "DUP1"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "SWAP2"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "SUB"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "SWAP1"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "RETURN"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "JUMPDEST"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "JUMPDEST"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "MLOAD"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "DUP1"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "DUP3"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "DUP2"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "MSTORE"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "ADD"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "SWAP2"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "POP"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "POP"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "MLOAD"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "DUP1"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "SWAP2"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "SUB"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "SWAP1"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "RETURN"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "JUMPDEST"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "DUP1"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "DUP2"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "ADD"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "SWAP1"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "DUP1"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "DUP1"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "SWAP1"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "ADD"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "SWAP1"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "SWAP3"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "SWAP2"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "SWAP1"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "POP"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "POP"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "POP"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "JUMPDEST"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "MLOAD"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "DUP1"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "DUP3"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "DUP2"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "MSTORE"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "ADD"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "SWAP2"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "POP"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "POP"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "MLOAD"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "DUP1"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "SWAP2"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "SUB"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "SWAP1"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "RETURN"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "JUMPDEST"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "DUP1"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "DUP2"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "ADD"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "SWAP1"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "DUP1"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "DUP1"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "AND"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "SWAP1"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "ADD"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "SWAP1"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "SWAP3"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "SWAP2"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "SWAP1"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "POP"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "POP"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "POP"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "JUMPDEST"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "MLOAD"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "DUP1"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "DUP3"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "DUP2"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "MSTORE"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "ADD"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "SWAP2"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "POP"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "POP"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "MLOAD"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "DUP1"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "SWAP2"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "SUB"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "SWAP1"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "RETURN"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "JUMPDEST"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "JUMPDEST"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "MLOAD"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "ADD"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP3"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP2"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "SUB"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP3"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "MSTORE"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP4"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP2"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP2"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "MLOAD"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP2"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "MSTORE"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "ADD"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "SWAP2"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "POP"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "MLOAD"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "ADD"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP4"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "POP"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "POP"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "POP"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "POP"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP2"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "ADD"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "AND"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "ISZERO"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "JUMPI"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP3"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "SUB"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "MLOAD"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP4"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "SUB"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "EXP"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "SUB"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "NOT"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "AND"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP2"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "MSTORE"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "ADD"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "SWAP2"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "POP"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "JUMPDEST"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "POP"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "SWAP3"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "POP"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "POP"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "POP"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "MLOAD"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "SWAP2"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "SUB"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "RETURN"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "JUMPDEST"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "DUP1"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "DUP2"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "ADD"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "SWAP1"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "DUP1"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "DUP1"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "AND"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "SWAP1"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "ADD"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "SWAP1"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "SWAP3"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "SWAP2"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "SWAP1"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "DUP1"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "SWAP1"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "ADD"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "SWAP1"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "SWAP3"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "SWAP2"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "SWAP1"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "POP"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "POP"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "POP"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "JUMPDEST"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "MLOAD"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "DUP1"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "DUP3"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "ISZERO"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "ISZERO"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "ISZERO"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "ISZERO"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "DUP2"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "MSTORE"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "ADD"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "SWAP2"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "POP"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "POP"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "MLOAD"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "DUP1"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "SWAP2"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "SUB"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "SWAP1"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "RETURN"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "JUMPDEST"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "DUP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "DUP2"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "ADD"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "DUP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "DUP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "AND"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "ADD"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP3"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP2"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "DUP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "AND"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "ADD"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP3"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP2"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "DUP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "ADD"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP3"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP2"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "DUP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "ADD"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP3"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP2"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "DUP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "AND"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "ADD"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP3"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP2"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "DUP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "ADD"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP3"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP2"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "DUP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "ADD"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP3"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP2"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "SWAP1"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "POP"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "POP"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "POP"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "JUMPDEST"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "STOP"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "JUMPDEST"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "DUP1"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "DUP2"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "ADD"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "SWAP1"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "DUP1"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "DUP1"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "AND"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "SWAP1"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "ADD"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "SWAP1"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "SWAP3"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "SWAP2"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "SWAP1"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "DUP1"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "AND"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "SWAP1"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "ADD"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "SWAP1"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "SWAP3"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "SWAP2"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "SWAP1"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "POP"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "POP"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "POP"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "JUMPDEST"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "MLOAD"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "DUP1"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "DUP3"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "DUP2"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "MSTORE"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "ADD"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "SWAP2"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "POP"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "POP"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "MLOAD"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "DUP1"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "SWAP2"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "SUB"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "SWAP1"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "RETURN"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "JUMPDEST"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "MLOAD"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "ADD"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "MSTORE"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "MSTORE"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "ADD"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "PUSH",
											"value": "44657853776170204C5073000000000000000000000000000000000000000000"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "MSTORE"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 260,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "JUMPDEST"
										},
										{
											"begin": 2374,
											"end": 2378,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2390,
											"end": 2426,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 2399,
											"end": 2409,
											"name": "CALLER"
										},
										{
											"begin": 2411,
											"end": 2418,
											"name": "DUP5"
										},
										{
											"begin": 2420,
											"end": 2425,
											"name": "DUP5"
										},
										{
											"begin": 2390,
											"end": 2398,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 2390,
											"end": 2426,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2390,
											"end": 2426,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 2390,
											"end": 2426,
											"name": "JUMPDEST"
										},
										{
											"begin": 2443,
											"end": 2447,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2436,
											"end": 2447,
											"name": "SWAP1"
										},
										{
											"begin": 2436,
											"end": 2447,
											"name": "POP"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "SWAP3"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "SWAP2"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "POP"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "POP"
										},
										{
											"begin": 2307,
											"end": 2454,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "JUMPDEST"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "SLOAD"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "DUP2"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "JUMPDEST"
										},
										{
											"begin": 2716,
											"end": 2720,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2775,
											"end": 2777,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2736,
											"end": 2745,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2736,
											"end": 2751,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2746,
											"end": 2750,
											"name": "DUP7"
										},
										{
											"begin": 2736,
											"end": 2751,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2736,
											"end": 2751,
											"name": "AND"
										},
										{
											"begin": 2736,
											"end": 2751,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2736,
											"end": 2751,
											"name": "AND"
										},
										{
											"begin": 2736,
											"end": 2751,
											"name": "DUP2"
										},
										{
											"begin": 2736,
											"end": 2751,
											"name": "MSTORE"
										},
										{
											"begin": 2736,
											"end": 2751,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2736,
											"end": 2751,
											"name": "ADD"
										},
										{
											"begin": 2736,
											"end": 2751,
											"name": "SWAP1"
										},
										{
											"begin": 2736,
											"end": 2751,
											"name": "DUP2"
										},
										{
											"begin": 2736,
											"end": 2751,
											"name": "MSTORE"
										},
										{
											"begin": 2736,
											"end": 2751,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2736,
											"end": 2751,
											"name": "ADD"
										},
										{
											"begin": 2736,
											"end": 2751,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2736,
											"end": 2751,
											"name": "KECCAK256"
										},
										{
											"begin": 2736,
											"end": 2763,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2752,
											"end": 2762,
											"name": "CALLER"
										},
										{
											"begin": 2736,
											"end": 2763,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2736,
											"end": 2763,
											"name": "AND"
										},
										{
											"begin": 2736,
											"end": 2763,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2736,
											"end": 2763,
											"name": "AND"
										},
										{
											"begin": 2736,
											"end": 2763,
											"name": "DUP2"
										},
										{
											"begin": 2736,
											"end": 2763,
											"name": "MSTORE"
										},
										{
											"begin": 2736,
											"end": 2763,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2736,
											"end": 2763,
											"name": "ADD"
										},
										{
											"begin": 2736,
											"end": 2763,
											"name": "SWAP1"
										},
										{
											"begin": 2736,
											"end": 2763,
											"name": "DUP2"
										},
										{
											"begin": 2736,
											"end": 2763,
											"name": "MSTORE"
										},
										{
											"begin": 2736,
											"end": 2763,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2736,
											"end": 2763,
											"name": "ADD"
										},
										{
											"begin": 2736,
											"end": 2763,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2736,
											"end": 2763,
											"name": "KECCAK256"
										},
										{
											"begin": 2736,
											"end": 2763,
											"name": "SLOAD"
										},
										{
											"begin": 2736,
											"end": 2778,
											"name": "EQ"
										},
										{
											"begin": 2732,
											"end": 2873,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 2732,
											"end": 2873,
											"name": "JUMPI"
										},
										{
											"begin": 2824,
											"end": 2862,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 2856,
											"end": 2861,
											"name": "DUP3"
										},
										{
											"begin": 2824,
											"end": 2833,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2824,
											"end": 2839,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2834,
											"end": 2838,
											"name": "DUP8"
										},
										{
											"begin": 2824,
											"end": 2839,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2824,
											"end": 2839,
											"name": "AND"
										},
										{
											"begin": 2824,
											"end": 2839,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2824,
											"end": 2839,
											"name": "AND"
										},
										{
											"begin": 2824,
											"end": 2839,
											"name": "DUP2"
										},
										{
											"begin": 2824,
											"end": 2839,
											"name": "MSTORE"
										},
										{
											"begin": 2824,
											"end": 2839,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2824,
											"end": 2839,
											"name": "ADD"
										},
										{
											"begin": 2824,
											"end": 2839,
											"name": "SWAP1"
										},
										{
											"begin": 2824,
											"end": 2839,
											"name": "DUP2"
										},
										{
											"begin": 2824,
											"end": 2839,
											"name": "MSTORE"
										},
										{
											"begin": 2824,
											"end": 2839,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2824,
											"end": 2839,
											"name": "ADD"
										},
										{
											"begin": 2824,
											"end": 2839,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2824,
											"end": 2839,
											"name": "KECCAK256"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2840,
											"end": 2850,
											"name": "CALLER"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "AND"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "AND"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "DUP2"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "MSTORE"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "ADD"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "SWAP1"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "DUP2"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "MSTORE"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "ADD"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "KECCAK256"
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "SLOAD"
										},
										{
											"begin": 2824,
											"end": 2855,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 2824,
											"end": 2855,
											"name": "SWAP1"
										},
										{
											"begin": 2824,
											"end": 2862,
											"name": "SWAP2"
										},
										{
											"begin": 2824,
											"end": 2862,
											"name": "SWAP1"
										},
										{
											"begin": 2824,
											"end": 2862,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2824,
											"end": 2862,
											"name": "AND"
										},
										{
											"begin": 2824,
											"end": 2862,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2824,
											"end": 2862,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 2824,
											"end": 2862,
											"name": "JUMPDEST"
										},
										{
											"begin": 2794,
											"end": 2803,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2794,
											"end": 2809,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2804,
											"end": 2808,
											"name": "DUP7"
										},
										{
											"begin": 2794,
											"end": 2809,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2794,
											"end": 2809,
											"name": "AND"
										},
										{
											"begin": 2794,
											"end": 2809,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2794,
											"end": 2809,
											"name": "AND"
										},
										{
											"begin": 2794,
											"end": 2809,
											"name": "DUP2"
										},
										{
											"begin": 2794,
											"end": 2809,
											"name": "MSTORE"
										},
										{
											"begin": 2794,
											"end": 2809,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2809,
											"name": "ADD"
										},
										{
											"begin": 2794,
											"end": 2809,
											"name": "SWAP1"
										},
										{
											"begin": 2794,
											"end": 2809,
											"name": "DUP2"
										},
										{
											"begin": 2794,
											"end": 2809,
											"name": "MSTORE"
										},
										{
											"begin": 2794,
											"end": 2809,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2809,
											"name": "ADD"
										},
										{
											"begin": 2794,
											"end": 2809,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2794,
											"end": 2809,
											"name": "KECCAK256"
										},
										{
											"begin": 2794,
											"end": 2821,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2810,
											"end": 2820,
											"name": "CALLER"
										},
										{
											"begin": 2794,
											"end": 2821,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2794,
											"end": 2821,
											"name": "AND"
										},
										{
											"begin": 2794,
											"end": 2821,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2794,
											"end": 2821,
											"name": "AND"
										},
										{
											"begin": 2794,
											"end": 2821,
											"name": "DUP2"
										},
										{
											"begin": 2794,
											"end": 2821,
											"name": "MSTORE"
										},
										{
											"begin": 2794,
											"end": 2821,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2821,
											"name": "ADD"
										},
										{
											"begin": 2794,
											"end": 2821,
											"name": "SWAP1"
										},
										{
											"begin": 2794,
											"end": 2821,
											"name": "DUP2"
										},
										{
											"begin": 2794,
											"end": 2821,
											"name": "MSTORE"
										},
										{
											"begin": 2794,
											"end": 2821,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2821,
											"name": "ADD"
										},
										{
											"begin": 2794,
											"end": 2821,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2794,
											"end": 2821,
											"name": "KECCAK256"
										},
										{
											"begin": 2794,
											"end": 2862,
											"name": "DUP2"
										},
										{
											"begin": 2794,
											"end": 2862,
											"name": "SWAP1"
										},
										{
											"begin": 2794,
											"end": 2862,
											"name": "SSTORE"
										},
										{
											"begin": 2794,
											"end": 2862,
											"name": "POP"
										},
										{
											"begin": 2732,
											"end": 2873,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 2732,
											"end": 2873,
											"name": "JUMPDEST"
										},
										{
											"begin": 2882,
											"end": 2908,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2892,
											"end": 2896,
											"name": "DUP5"
										},
										{
											"begin": 2898,
											"end": 2900,
											"name": "DUP5"
										},
										{
											"begin": 2902,
											"end": 2907,
											"name": "DUP5"
										},
										{
											"begin": 2882,
											"end": 2891,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 2882,
											"end": 2908,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2882,
											"end": 2908,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2882,
											"end": 2908,
											"name": "JUMPDEST"
										},
										{
											"begin": 2925,
											"end": 2929,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2918,
											"end": 2929,
											"name": "SWAP1"
										},
										{
											"begin": 2918,
											"end": 2929,
											"name": "POP"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "SWAP4"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "SWAP3"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "POP"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "POP"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "POP"
										},
										{
											"begin": 2605,
											"end": 2936,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "JUMPDEST"
										},
										{
											"begin": 693,
											"end": 759,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "SHL"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "DUP2"
										},
										{
											"begin": 651,
											"end": 759,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "JUMPDEST"
										},
										{
											"begin": 349,
											"end": 351,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "DUP2"
										},
										{
											"begin": 316,
											"end": 351,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "JUMPDEST"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "SLOAD"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "DUP2"
										},
										{
											"begin": 510,
											"end": 541,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "JUMPDEST"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "MSTORE"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "DUP1"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "MSTORE"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "KECCAK256"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "SWAP2"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "POP"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "SWAP1"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "POP"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "SLOAD"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "DUP2"
										},
										{
											"begin": 389,
											"end": 433,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "JUMPDEST"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "MSTORE"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "DUP1"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "MSTORE"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "KECCAK256"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "SWAP2"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "POP"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "SWAP1"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "POP"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "SLOAD"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "DUP2"
										},
										{
											"begin": 765,
											"end": 806,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "JUMPDEST"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "MLOAD"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "ADD"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "MSTORE"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP2"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "MSTORE"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "ADD"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "PUSH",
											"value": "446578537761702D4C5000000000000000000000000000000000000000000000"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP2"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "MSTORE"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "POP"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "DUP2"
										},
										{
											"begin": 266,
											"end": 310,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "JUMPDEST"
										},
										{
											"begin": 2523,
											"end": 2527,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2539,
											"end": 2571,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 2549,
											"end": 2559,
											"name": "CALLER"
										},
										{
											"begin": 2561,
											"end": 2563,
											"name": "DUP5"
										},
										{
											"begin": 2565,
											"end": 2570,
											"name": "DUP5"
										},
										{
											"begin": 2539,
											"end": 2548,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 2539,
											"end": 2571,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2539,
											"end": 2571,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 2539,
											"end": 2571,
											"name": "JUMPDEST"
										},
										{
											"begin": 2588,
											"end": 2592,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2581,
											"end": 2592,
											"name": "SWAP1"
										},
										{
											"begin": 2581,
											"end": 2592,
											"name": "POP"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "SWAP3"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "SWAP2"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "POP"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "POP"
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "JUMPDEST"
										},
										{
											"begin": 3155,
											"end": 3170,
											"name": "TIMESTAMP"
										},
										{
											"begin": 3143,
											"end": 3151,
											"name": "DUP5"
										},
										{
											"begin": 3143,
											"end": 3170,
											"name": "LT"
										},
										{
											"begin": 3143,
											"end": 3170,
											"name": "ISZERO"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "JUMPI"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "MLOAD"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "DUP2"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "MSTORE"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "ADD"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "DUP1"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "DUP1"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "ADD"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "DUP3"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "DUP2"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "SUB"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "DUP3"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "MSTORE"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "DUP2"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "MSTORE"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "ADD"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "DUP1"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "PUSH",
											"value": "50616E63616B653A204558504952454400000000000000000000000000000000"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "DUP2"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "MSTORE"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "POP"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "ADD"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "SWAP2"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "POP"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "POP"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "MLOAD"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "DUP1"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "SWAP2"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "SUB"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "SWAP1"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "REVERT"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 3135,
											"end": 3191,
											"name": "JUMPDEST"
										},
										{
											"begin": 3201,
											"end": 3215,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3303,
											"end": 3319,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3303,
											"end": 3319,
											"name": "SLOAD"
										},
										{
											"begin": 693,
											"end": 759,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 3358,
											"end": 3373,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3358,
											"end": 3373,
											"name": "SHL"
										},
										{
											"begin": 3375,
											"end": 3380,
											"name": "DUP10"
										},
										{
											"begin": 3382,
											"end": 3389,
											"name": "DUP10"
										},
										{
											"begin": 3391,
											"end": 3396,
											"name": "DUP10"
										},
										{
											"begin": 3398,
											"end": 3404,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3398,
											"end": 3411,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3410,
											"name": "DUP15"
										},
										{
											"begin": 3398,
											"end": 3411,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3398,
											"end": 3411,
											"name": "AND"
										},
										{
											"begin": 3398,
											"end": 3411,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3398,
											"end": 3411,
											"name": "AND"
										},
										{
											"begin": 3398,
											"end": 3411,
											"name": "DUP2"
										},
										{
											"begin": 3398,
											"end": 3411,
											"name": "MSTORE"
										},
										{
											"begin": 3398,
											"end": 3411,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3398,
											"end": 3411,
											"name": "ADD"
										},
										{
											"begin": 3398,
											"end": 3411,
											"name": "SWAP1"
										},
										{
											"begin": 3398,
											"end": 3411,
											"name": "DUP2"
										},
										{
											"begin": 3398,
											"end": 3411,
											"name": "MSTORE"
										},
										{
											"begin": 3398,
											"end": 3411,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3398,
											"end": 3411,
											"name": "ADD"
										},
										{
											"begin": 3398,
											"end": 3411,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3398,
											"end": 3411,
											"name": "KECCAK256"
										},
										{
											"begin": 3398,
											"end": 3411,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3398,
											"end": 3413,
											"name": "DUP2"
										},
										{
											"begin": 3398,
											"end": 3413,
											"name": "SLOAD"
										},
										{
											"begin": 3398,
											"end": 3413,
											"name": "DUP1"
										},
										{
											"begin": 3398,
											"end": 3413,
											"name": "SWAP3"
										},
										{
											"begin": 3398,
											"end": 3413,
											"name": "SWAP2"
										},
										{
											"begin": 3398,
											"end": 3413,
											"name": "SWAP1"
										},
										{
											"begin": 3398,
											"end": 3413,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3398,
											"end": 3413,
											"name": "ADD"
										},
										{
											"begin": 3398,
											"end": 3413,
											"name": "SWAP2"
										},
										{
											"begin": 3398,
											"end": 3413,
											"name": "SWAP1"
										},
										{
											"begin": 3398,
											"end": 3413,
											"name": "POP"
										},
										{
											"begin": 3398,
											"end": 3413,
											"name": "SSTORE"
										},
										{
											"begin": 3415,
											"end": 3423,
											"name": "DUP11"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "MLOAD"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "ADD"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "DUP1"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "DUP8"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "DUP2"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "MSTORE"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "ADD"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "DUP7"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "AND"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "AND"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "DUP2"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "MSTORE"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "ADD"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "DUP6"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "AND"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "AND"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "DUP2"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "MSTORE"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "ADD"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "DUP5"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "DUP2"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "MSTORE"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "ADD"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "DUP4"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "DUP2"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "MSTORE"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "ADD"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "DUP3"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "DUP2"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "MSTORE"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "ADD"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "SWAP7"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "POP"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "POP"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "POP"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "POP"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "POP"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "POP"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "POP"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "SWAP1"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3347,
											"end": 3424,
											"name": "MSTORE"
										},
										{
											"begin": 3337,
											"end": 3425,
											"name": "DUP1"
										},
										{
											"begin": 3337,
											"end": 3425,
											"name": "MLOAD"
										},
										{
											"begin": 3337,
											"end": 3425,
											"name": "SWAP1"
										},
										{
											"begin": 3337,
											"end": 3425,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3337,
											"end": 3425,
											"name": "ADD"
										},
										{
											"begin": 3337,
											"end": 3425,
											"name": "KECCAK256"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "MLOAD"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "ADD"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "DUP1"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "DUP1"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "PUSH",
											"value": "1901000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "DUP2"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "MSTORE"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "POP"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "ADD"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "DUP4"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "DUP2"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "MSTORE"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "ADD"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "DUP3"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "DUP2"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "MSTORE"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "ADD"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "SWAP3"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "POP"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "POP"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "POP"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "SWAP1"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3241,
											"end": 3439,
											"name": "MSTORE"
										},
										{
											"begin": 3218,
											"end": 3449,
											"name": "DUP1"
										},
										{
											"begin": 3218,
											"end": 3449,
											"name": "MLOAD"
										},
										{
											"begin": 3218,
											"end": 3449,
											"name": "SWAP1"
										},
										{
											"begin": 3218,
											"end": 3449,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3218,
											"end": 3449,
											"name": "ADD"
										},
										{
											"begin": 3218,
											"end": 3449,
											"name": "KECCAK256"
										},
										{
											"begin": 3201,
											"end": 3449,
											"name": "SWAP1"
										},
										{
											"begin": 3201,
											"end": 3449,
											"name": "POP"
										},
										{
											"begin": 3459,
											"end": 3483,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3496,
											"end": 3502,
											"name": "DUP3"
										},
										{
											"begin": 3504,
											"end": 3505,
											"name": "DUP7"
										},
										{
											"begin": 3507,
											"end": 3508,
											"name": "DUP7"
										},
										{
											"begin": 3510,
											"end": 3511,
											"name": "DUP7"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "MLOAD"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "DUP2"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "MSTORE"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "ADD"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "MSTORE"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "MLOAD"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "DUP1"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "DUP6"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "DUP2"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "MSTORE"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "ADD"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "DUP5"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "AND"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "AND"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "DUP2"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "MSTORE"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "ADD"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "DUP4"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "DUP2"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "MSTORE"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "ADD"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "DUP3"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "DUP2"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "MSTORE"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "ADD"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "SWAP5"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "POP"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "POP"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "POP"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "POP"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "POP"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "MLOAD"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "DUP2"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "SUB"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "SWAP1"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "DUP1"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "DUP5"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "SUB"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "SWAP1"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "DUP6"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "GAS"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "STATICCALL"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "POP"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "POP"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "POP"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "MLOAD"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "SUB"
										},
										{
											"begin": 3486,
											"end": 3512,
											"name": "MLOAD"
										},
										{
											"begin": 3459,
											"end": 3512,
											"name": "SWAP1"
										},
										{
											"begin": 3459,
											"end": 3512,
											"name": "POP"
										},
										{
											"begin": 3558,
											"end": 3559,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3530,
											"end": 3560,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3530,
											"end": 3560,
											"name": "AND"
										},
										{
											"begin": 3530,
											"end": 3546,
											"name": "DUP2"
										},
										{
											"begin": 3530,
											"end": 3560,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3530,
											"end": 3560,
											"name": "AND"
										},
										{
											"begin": 3530,
											"end": 3560,
											"name": "EQ"
										},
										{
											"begin": 3530,
											"end": 3560,
											"name": "ISZERO"
										},
										{
											"begin": 3530,
											"end": 3589,
											"name": "DUP1"
										},
										{
											"begin": 3530,
											"end": 3589,
											"name": "ISZERO"
										},
										{
											"begin": 3530,
											"end": 3589,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 3530,
											"end": 3589,
											"name": "JUMPI"
										},
										{
											"begin": 3530,
											"end": 3589,
											"name": "POP"
										},
										{
											"begin": 3584,
											"end": 3589,
											"name": "DUP9"
										},
										{
											"begin": 3564,
											"end": 3589,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3564,
											"end": 3589,
											"name": "AND"
										},
										{
											"begin": 3564,
											"end": 3580,
											"name": "DUP2"
										},
										{
											"begin": 3564,
											"end": 3589,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3564,
											"end": 3589,
											"name": "AND"
										},
										{
											"begin": 3564,
											"end": 3589,
											"name": "EQ"
										},
										{
											"begin": 3530,
											"end": 3589,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 3530,
											"end": 3589,
											"name": "JUMPDEST"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "JUMPI"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "MLOAD"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "DUP2"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "MSTORE"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "ADD"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "DUP1"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "DUP1"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "ADD"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "DUP3"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "DUP2"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "SUB"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "DUP3"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "MSTORE"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "DUP2"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "MSTORE"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "ADD"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "DUP1"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "PUSH",
											"value": "50616E63616B653A20494E56414C49445F5349474E4154555245000000000000"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "DUP2"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "MSTORE"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "POP"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "ADD"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "SWAP2"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "POP"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "POP"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "MLOAD"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "DUP1"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "SWAP2"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "SUB"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "SWAP1"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "REVERT"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 3522,
											"end": 3620,
											"name": "JUMPDEST"
										},
										{
											"begin": 3630,
											"end": 3661,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 3639,
											"end": 3644,
											"name": "DUP10"
										},
										{
											"begin": 3646,
											"end": 3653,
											"name": "DUP10"
										},
										{
											"begin": 3655,
											"end": 3660,
											"name": "DUP10"
										},
										{
											"begin": 3630,
											"end": 3638,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 3630,
											"end": 3661,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3630,
											"end": 3661,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 3630,
											"end": 3661,
											"name": "JUMPDEST"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "POP"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "POP"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "POP"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "POP"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "POP"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "POP"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "POP"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "POP"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "POP"
										},
										{
											"begin": 2942,
											"end": 3668,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "JUMPDEST"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "MSTORE"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "DUP2"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "MSTORE"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "KECCAK256"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "MSTORE"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "DUP1"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "MSTORE"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "KECCAK256"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "SWAP2"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "POP"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "SWAP2"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "POP"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "POP"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "SLOAD"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "DUP2"
										},
										{
											"begin": 439,
											"end": 503,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1847,
											"end": 2046,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 1847,
											"end": 2046,
											"name": "JUMPDEST"
										},
										{
											"begin": 1988,
											"end": 1993,
											"name": "DUP1"
										},
										{
											"begin": 1960,
											"end": 1969,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1960,
											"end": 1976,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1970,
											"end": 1975,
											"name": "DUP6"
										},
										{
											"begin": 1960,
											"end": 1976,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1960,
											"end": 1976,
											"name": "AND"
										},
										{
											"begin": 1960,
											"end": 1976,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1960,
											"end": 1976,
											"name": "AND"
										},
										{
											"begin": 1960,
											"end": 1976,
											"name": "DUP2"
										},
										{
											"begin": 1960,
											"end": 1976,
											"name": "MSTORE"
										},
										{
											"begin": 1960,
											"end": 1976,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1960,
											"end": 1976,
											"name": "ADD"
										},
										{
											"begin": 1960,
											"end": 1976,
											"name": "SWAP1"
										},
										{
											"begin": 1960,
											"end": 1976,
											"name": "DUP2"
										},
										{
											"begin": 1960,
											"end": 1976,
											"name": "MSTORE"
										},
										{
											"begin": 1960,
											"end": 1976,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1960,
											"end": 1976,
											"name": "ADD"
										},
										{
											"begin": 1960,
											"end": 1976,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 1976,
											"name": "KECCAK256"
										},
										{
											"begin": 1960,
											"end": 1985,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1977,
											"end": 1984,
											"name": "DUP5"
										},
										{
											"begin": 1960,
											"end": 1985,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1960,
											"end": 1985,
											"name": "AND"
										},
										{
											"begin": 1960,
											"end": 1985,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1960,
											"end": 1985,
											"name": "AND"
										},
										{
											"begin": 1960,
											"end": 1985,
											"name": "DUP2"
										},
										{
											"begin": 1960,
											"end": 1985,
											"name": "MSTORE"
										},
										{
											"begin": 1960,
											"end": 1985,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1960,
											"end": 1985,
											"name": "ADD"
										},
										{
											"begin": 1960,
											"end": 1985,
											"name": "SWAP1"
										},
										{
											"begin": 1960,
											"end": 1985,
											"name": "DUP2"
										},
										{
											"begin": 1960,
											"end": 1985,
											"name": "MSTORE"
										},
										{
											"begin": 1960,
											"end": 1985,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1960,
											"end": 1985,
											"name": "ADD"
										},
										{
											"begin": 1960,
											"end": 1985,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 1985,
											"name": "KECCAK256"
										},
										{
											"begin": 1960,
											"end": 1993,
											"name": "DUP2"
										},
										{
											"begin": 1960,
											"end": 1993,
											"name": "SWAP1"
										},
										{
											"begin": 1960,
											"end": 1993,
											"name": "SSTORE"
										},
										{
											"begin": 1960,
											"end": 1993,
											"name": "POP"
										},
										{
											"begin": 2024,
											"end": 2031,
											"name": "DUP2"
										},
										{
											"begin": 2008,
											"end": 2039,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2008,
											"end": 2039,
											"name": "AND"
										},
										{
											"begin": 2017,
											"end": 2022,
											"name": "DUP4"
										},
										{
											"begin": 2008,
											"end": 2039,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2008,
											"end": 2039,
											"name": "AND"
										},
										{
											"begin": 2008,
											"end": 2039,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 2033,
											"end": 2038,
											"name": "DUP4"
										},
										{
											"begin": 2008,
											"end": 2039,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2008,
											"end": 2039,
											"name": "MLOAD"
										},
										{
											"begin": 2008,
											"end": 2039,
											"name": "DUP1"
										},
										{
											"begin": 2008,
											"end": 2039,
											"name": "DUP3"
										},
										{
											"begin": 2008,
											"end": 2039,
											"name": "DUP2"
										},
										{
											"begin": 2008,
											"end": 2039,
											"name": "MSTORE"
										},
										{
											"begin": 2008,
											"end": 2039,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2008,
											"end": 2039,
											"name": "ADD"
										},
										{
											"begin": 2008,
											"end": 2039,
											"name": "SWAP2"
										},
										{
											"begin": 2008,
											"end": 2039,
											"name": "POP"
										},
										{
											"begin": 2008,
											"end": 2039,
											"name": "POP"
										},
										{
											"begin": 2008,
											"end": 2039,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2008,
											"end": 2039,
											"name": "MLOAD"
										},
										{
											"begin": 2008,
											"end": 2039,
											"name": "DUP1"
										},
										{
											"begin": 2008,
											"end": 2039,
											"name": "SWAP2"
										},
										{
											"begin": 2008,
											"end": 2039,
											"name": "SUB"
										},
										{
											"begin": 2008,
											"end": 2039,
											"name": "SWAP1"
										},
										{
											"begin": 2008,
											"end": 2039,
											"name": "LOG3"
										},
										{
											"begin": 1847,
											"end": 2046,
											"name": "POP"
										},
										{
											"begin": 1847,
											"end": 2046,
											"name": "POP"
										},
										{
											"begin": 1847,
											"end": 2046,
											"name": "POP"
										},
										{
											"begin": 1847,
											"end": 2046,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 339,
											"end": 475,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 339,
											"end": 475,
											"name": "JUMPDEST"
										},
										{
											"begin": 397,
											"end": 406,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 441,
											"end": 442,
											"name": "DUP3"
										},
										{
											"begin": 435,
											"end": 436,
											"name": "DUP3"
										},
										{
											"begin": 431,
											"end": 432,
											"name": "DUP5"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "SUB"
										},
										{
											"begin": 427,
											"end": 436,
											"name": "SWAP2"
										},
										{
											"begin": 427,
											"end": 436,
											"name": "POP"
										},
										{
											"begin": 427,
											"end": 436,
											"name": "DUP2"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "GT"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "ISZERO"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "JUMPI"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MLOAD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP2"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP3"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP2"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SUB"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP3"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP2"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "64732D6D6174682D7375622D756E646572666C6F770000000000000000000000"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP2"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "POP"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SWAP2"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "POP"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "POP"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MLOAD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SWAP2"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SUB"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SWAP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "REVERT"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "JUMPDEST"
										},
										{
											"begin": 339,
											"end": 475,
											"name": "SWAP3"
										},
										{
											"begin": 339,
											"end": 475,
											"name": "SWAP2"
										},
										{
											"begin": 339,
											"end": 475,
											"name": "POP"
										},
										{
											"begin": 339,
											"end": 475,
											"name": "POP"
										},
										{
											"begin": 339,
											"end": 475,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2052,
											"end": 2301,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 2052,
											"end": 2301,
											"name": "JUMPDEST"
										},
										{
											"begin": 2178,
											"end": 2204,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 2198,
											"end": 2203,
											"name": "DUP2"
										},
										{
											"begin": 2178,
											"end": 2187,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2178,
											"end": 2193,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2188,
											"end": 2192,
											"name": "DUP7"
										},
										{
											"begin": 2178,
											"end": 2193,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2178,
											"end": 2193,
											"name": "AND"
										},
										{
											"begin": 2178,
											"end": 2193,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2178,
											"end": 2193,
											"name": "AND"
										},
										{
											"begin": 2178,
											"end": 2193,
											"name": "DUP2"
										},
										{
											"begin": 2178,
											"end": 2193,
											"name": "MSTORE"
										},
										{
											"begin": 2178,
											"end": 2193,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2178,
											"end": 2193,
											"name": "ADD"
										},
										{
											"begin": 2178,
											"end": 2193,
											"name": "SWAP1"
										},
										{
											"begin": 2178,
											"end": 2193,
											"name": "DUP2"
										},
										{
											"begin": 2178,
											"end": 2193,
											"name": "MSTORE"
										},
										{
											"begin": 2178,
											"end": 2193,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2178,
											"end": 2193,
											"name": "ADD"
										},
										{
											"begin": 2178,
											"end": 2193,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2178,
											"end": 2193,
											"name": "KECCAK256"
										},
										{
											"begin": 2178,
											"end": 2193,
											"name": "SLOAD"
										},
										{
											"begin": 2178,
											"end": 2197,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 2178,
											"end": 2197,
											"name": "SWAP1"
										},
										{
											"begin": 2178,
											"end": 2204,
											"name": "SWAP2"
										},
										{
											"begin": 2178,
											"end": 2204,
											"name": "SWAP1"
										},
										{
											"begin": 2178,
											"end": 2204,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2178,
											"end": 2204,
											"name": "AND"
										},
										{
											"begin": 2178,
											"end": 2204,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2178,
											"end": 2204,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 2178,
											"end": 2204,
											"name": "JUMPDEST"
										},
										{
											"begin": 2160,
											"end": 2169,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2160,
											"end": 2175,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2170,
											"end": 2174,
											"name": "DUP6"
										},
										{
											"begin": 2160,
											"end": 2175,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2160,
											"end": 2175,
											"name": "AND"
										},
										{
											"begin": 2160,
											"end": 2175,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2160,
											"end": 2175,
											"name": "AND"
										},
										{
											"begin": 2160,
											"end": 2175,
											"name": "DUP2"
										},
										{
											"begin": 2160,
											"end": 2175,
											"name": "MSTORE"
										},
										{
											"begin": 2160,
											"end": 2175,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2160,
											"end": 2175,
											"name": "ADD"
										},
										{
											"begin": 2160,
											"end": 2175,
											"name": "SWAP1"
										},
										{
											"begin": 2160,
											"end": 2175,
											"name": "DUP2"
										},
										{
											"begin": 2160,
											"end": 2175,
											"name": "MSTORE"
										},
										{
											"begin": 2160,
											"end": 2175,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2160,
											"end": 2175,
											"name": "ADD"
										},
										{
											"begin": 2160,
											"end": 2175,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2160,
											"end": 2175,
											"name": "KECCAK256"
										},
										{
											"begin": 2160,
											"end": 2204,
											"name": "DUP2"
										},
										{
											"begin": 2160,
											"end": 2204,
											"name": "SWAP1"
										},
										{
											"begin": 2160,
											"end": 2204,
											"name": "SSTORE"
										},
										{
											"begin": 2160,
											"end": 2204,
											"name": "POP"
										},
										{
											"begin": 2230,
											"end": 2254,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 2248,
											"end": 2253,
											"name": "DUP2"
										},
										{
											"begin": 2230,
											"end": 2239,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2230,
											"end": 2243,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2240,
											"end": 2242,
											"name": "DUP6"
										},
										{
											"begin": 2230,
											"end": 2243,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2230,
											"end": 2243,
											"name": "AND"
										},
										{
											"begin": 2230,
											"end": 2243,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2230,
											"end": 2243,
											"name": "AND"
										},
										{
											"begin": 2230,
											"end": 2243,
											"name": "DUP2"
										},
										{
											"begin": 2230,
											"end": 2243,
											"name": "MSTORE"
										},
										{
											"begin": 2230,
											"end": 2243,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2230,
											"end": 2243,
											"name": "ADD"
										},
										{
											"begin": 2230,
											"end": 2243,
											"name": "SWAP1"
										},
										{
											"begin": 2230,
											"end": 2243,
											"name": "DUP2"
										},
										{
											"begin": 2230,
											"end": 2243,
											"name": "MSTORE"
										},
										{
											"begin": 2230,
											"end": 2243,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2230,
											"end": 2243,
											"name": "ADD"
										},
										{
											"begin": 2230,
											"end": 2243,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2230,
											"end": 2243,
											"name": "KECCAK256"
										},
										{
											"begin": 2230,
											"end": 2243,
											"name": "SLOAD"
										},
										{
											"begin": 2230,
											"end": 2247,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 2230,
											"end": 2247,
											"name": "SWAP1"
										},
										{
											"begin": 2230,
											"end": 2254,
											"name": "SWAP2"
										},
										{
											"begin": 2230,
											"end": 2254,
											"name": "SWAP1"
										},
										{
											"begin": 2230,
											"end": 2254,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2230,
											"end": 2254,
											"name": "AND"
										},
										{
											"begin": 2230,
											"end": 2254,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2230,
											"end": 2254,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 2230,
											"end": 2254,
											"name": "JUMPDEST"
										},
										{
											"begin": 2214,
											"end": 2223,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2214,
											"end": 2227,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2224,
											"end": 2226,
											"name": "DUP5"
										},
										{
											"begin": 2214,
											"end": 2227,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2214,
											"end": 2227,
											"name": "AND"
										},
										{
											"begin": 2214,
											"end": 2227,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2214,
											"end": 2227,
											"name": "AND"
										},
										{
											"begin": 2214,
											"end": 2227,
											"name": "DUP2"
										},
										{
											"begin": 2214,
											"end": 2227,
											"name": "MSTORE"
										},
										{
											"begin": 2214,
											"end": 2227,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2214,
											"end": 2227,
											"name": "ADD"
										},
										{
											"begin": 2214,
											"end": 2227,
											"name": "SWAP1"
										},
										{
											"begin": 2214,
											"end": 2227,
											"name": "DUP2"
										},
										{
											"begin": 2214,
											"end": 2227,
											"name": "MSTORE"
										},
										{
											"begin": 2214,
											"end": 2227,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2214,
											"end": 2227,
											"name": "ADD"
										},
										{
											"begin": 2214,
											"end": 2227,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2214,
											"end": 2227,
											"name": "KECCAK256"
										},
										{
											"begin": 2214,
											"end": 2254,
											"name": "DUP2"
										},
										{
											"begin": 2214,
											"end": 2254,
											"name": "SWAP1"
										},
										{
											"begin": 2214,
											"end": 2254,
											"name": "SSTORE"
										},
										{
											"begin": 2214,
											"end": 2254,
											"name": "POP"
										},
										{
											"begin": 2284,
											"end": 2286,
											"name": "DUP2"
										},
										{
											"begin": 2269,
											"end": 2294,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2269,
											"end": 2294,
											"name": "AND"
										},
										{
											"begin": 2278,
											"end": 2282,
											"name": "DUP4"
										},
										{
											"begin": 2269,
											"end": 2294,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2269,
											"end": 2294,
											"name": "AND"
										},
										{
											"begin": 2269,
											"end": 2294,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 2288,
											"end": 2293,
											"name": "DUP4"
										},
										{
											"begin": 2269,
											"end": 2294,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2269,
											"end": 2294,
											"name": "MLOAD"
										},
										{
											"begin": 2269,
											"end": 2294,
											"name": "DUP1"
										},
										{
											"begin": 2269,
											"end": 2294,
											"name": "DUP3"
										},
										{
											"begin": 2269,
											"end": 2294,
											"name": "DUP2"
										},
										{
											"begin": 2269,
											"end": 2294,
											"name": "MSTORE"
										},
										{
											"begin": 2269,
											"end": 2294,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2269,
											"end": 2294,
											"name": "ADD"
										},
										{
											"begin": 2269,
											"end": 2294,
											"name": "SWAP2"
										},
										{
											"begin": 2269,
											"end": 2294,
											"name": "POP"
										},
										{
											"begin": 2269,
											"end": 2294,
											"name": "POP"
										},
										{
											"begin": 2269,
											"end": 2294,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2269,
											"end": 2294,
											"name": "MLOAD"
										},
										{
											"begin": 2269,
											"end": 2294,
											"name": "DUP1"
										},
										{
											"begin": 2269,
											"end": 2294,
											"name": "SWAP2"
										},
										{
											"begin": 2269,
											"end": 2294,
											"name": "SUB"
										},
										{
											"begin": 2269,
											"end": 2294,
											"name": "SWAP1"
										},
										{
											"begin": 2269,
											"end": 2294,
											"name": "LOG3"
										},
										{
											"begin": 2052,
											"end": 2301,
											"name": "POP"
										},
										{
											"begin": 2052,
											"end": 2301,
											"name": "POP"
										},
										{
											"begin": 2052,
											"end": 2301,
											"name": "POP"
										},
										{
											"begin": 2052,
											"end": 2301,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 198,
											"end": 333,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 198,
											"end": 333,
											"name": "JUMPDEST"
										},
										{
											"begin": 256,
											"end": 265,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 300,
											"end": 301,
											"name": "DUP3"
										},
										{
											"begin": 294,
											"end": 295,
											"name": "DUP3"
										},
										{
											"begin": 290,
											"end": 291,
											"name": "DUP5"
										},
										{
											"begin": 290,
											"end": 295,
											"name": "ADD"
										},
										{
											"begin": 286,
											"end": 295,
											"name": "SWAP2"
										},
										{
											"begin": 286,
											"end": 295,
											"name": "POP"
										},
										{
											"begin": 286,
											"end": 295,
											"name": "DUP2"
										},
										{
											"begin": 285,
											"end": 301,
											"name": "LT"
										},
										{
											"begin": 285,
											"end": 301,
											"name": "ISZERO"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "JUMPI"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MLOAD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP2"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP3"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP2"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SUB"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP3"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP2"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "64732D6D6174682D6164642D6F766572666C6F77000000000000000000000000"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP2"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "POP"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SWAP2"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "POP"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "POP"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MLOAD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SWAP2"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SUB"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SWAP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "REVERT"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "JUMPDEST"
										},
										{
											"begin": 198,
											"end": 333,
											"name": "SWAP3"
										},
										{
											"begin": 198,
											"end": 333,
											"name": "SWAP2"
										},
										{
											"begin": 198,
											"end": 333,
											"name": "POP"
										},
										{
											"begin": 198,
											"end": 333,
											"name": "POP"
										},
										{
											"begin": 198,
											"end": 333,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								},
								"8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429"
							}
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"DexSwap/PancakeERC20.sol\":\"PancakeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"DexSwap/PancakeERC20.sol\":{\"keccak256\":\"0x8e9e75294ecf30d0b421a05964427e90fc8bb2392db2e14b652cbfe8bfb53730\",\"urls\":[\"bzz-raw://74f9d491845913a29423a997ebd9ec7d3b636562849396a562f7313f08a3d59d\",\"dweb:/ipfs/QmRpzY42ZHFygyEDgQeoYJEwgssk11CjEKvhvJeRpNnshX\"]},\"DexSwap/interfaces/IPancakeERC20.sol\":{\"keccak256\":\"0x1c12c7596bbb8cae6c81f403722344bdbb8e6b3adad577d8e75d3b92005e06e1\",\"urls\":[\"bzz-raw://07464188002aa47af55741ea345b54a062619ce1890b37e2acc71e31e2cb6c0e\",\"dweb:/ipfs/QmcvxDZNR5kPar3NLNsVEr2BTRVcuJh9eoFtd5Tb6LQibJ\"]},\"DexSwap/libraries/SafeMath.sol\":{\"keccak256\":\"0xd0cc5ede4252f34f9adf75af689fb003aa6349f229b9bba72db43cba9bb1c9d9\",\"urls\":[\"bzz-raw://a2cb594533aebe5028b93c5c429b23907a4830964d8c6728565992bee4cf1eef\",\"dweb:/ipfs/QmdSBCeJiqjQeGZ2K79DXaDfaqJMtXCWAyXDWJ3KNDWZKM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1068,
								"contract": "DexSwap/PancakeERC20.sol:PancakeERC20",
								"label": "totalSupply",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 1072,
								"contract": "DexSwap/PancakeERC20.sol:PancakeERC20",
								"label": "balanceOf",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1078,
								"contract": "DexSwap/PancakeERC20.sol:PancakeERC20",
								"label": "allowance",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1080,
								"contract": "DexSwap/PancakeERC20.sol:PancakeERC20",
								"label": "DOMAIN_SEPARATOR",
								"offset": 0,
								"slot": "3",
								"type": "t_bytes32"
							},
							{
								"astId": 1087,
								"contract": "DexSwap/PancakeERC20.sol:PancakeERC20",
								"label": "nonces",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"DexSwap/interfaces/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"DexSwap/interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"DexSwap/interfaces/IERC20.sol\":{\"keccak256\":\"0x5c2a1626814dfa8c9d73f14358eb349acf411633fdc5dca35fb607dacc7c20dd\",\"urls\":[\"bzz-raw://08b11bb3192bb52d3f341682413419cd516b772c5d9284485e4f846088e640bd\",\"dweb:/ipfs/QmYMcMrR53adeWN75xspymBCFSkWYfAJwtCDfnKaWRuJVy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"DexSwap/interfaces/IPancakeCallee.sol": {
				"IPancakeCallee": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "pancakeCall",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"pancakeCall(address,uint256,uint256,bytes)": "84800812"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"pancakeCall\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"DexSwap/interfaces/IPancakeCallee.sol\":\"IPancakeCallee\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"DexSwap/interfaces/IPancakeCallee.sol\":{\"keccak256\":\"0xf87708f8fc59352a86cbdc8317a93b46b5d89437418b170cc2778879f8a25fe7\",\"urls\":[\"bzz-raw://71b8ba3e36df11202737c838309b6171e6bf6783796db62c363720f03df0d067\",\"dweb:/ipfs/QmbLpNoZfZrCWqvWCuq6oaeLCnDgqSw6sAH5SGRN2PSwpL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"DexSwap/interfaces/IPancakeERC20.sol": {
				"IPancakeERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"DexSwap/interfaces/IPancakeERC20.sol\":\"IPancakeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"DexSwap/interfaces/IPancakeERC20.sol\":{\"keccak256\":\"0x1c12c7596bbb8cae6c81f403722344bdbb8e6b3adad577d8e75d3b92005e06e1\",\"urls\":[\"bzz-raw://07464188002aa47af55741ea345b54a062619ce1890b37e2acc71e31e2cb6c0e\",\"dweb:/ipfs/QmcvxDZNR5kPar3NLNsVEr2BTRVcuJh9eoFtd5Tb6LQibJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"DexSwap/interfaces/IPancakeFactory.sol": {
				"IPancakeFactory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pair",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "PairCreated",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "INIT_CODE_PAIR_HASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allPairs",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "allPairsLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "createPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "feeTo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "feeToSetter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "getPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeTo",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeToSetter",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"INIT_CODE_PAIR_HASH()": "5855a25a",
							"allPairs(uint256)": "1e3dd18b",
							"allPairsLength()": "574f2ba3",
							"createPair(address,address)": "c9c65396",
							"feeTo()": "017e7e58",
							"feeToSetter()": "094b7415",
							"getPair(address,address)": "e6a43905",
							"setFeeTo(address)": "f46901ed",
							"setFeeToSetter(address)": "a2e74af6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"INIT_CODE_PAIR_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"DexSwap/interfaces/IPancakeFactory.sol\":\"IPancakeFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"DexSwap/interfaces/IPancakeFactory.sol\":{\"keccak256\":\"0xea125e6c4e3c52bce633dc5667b1e108c63ef48866943eb6c4074f19b23ed7c5\",\"urls\":[\"bzz-raw://c875e62eaaeab86a84108aa360d1dab9e9b4c9dd06299595bfb512c4259b1050\",\"dweb:/ipfs/QmW88oRqeybnNXsLM4P6cfTfYPdpEUR3742rYkPY2zmFv2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"DexSwap/interfaces/IPancakePair.sol": {
				"IPancakePair": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								}
							],
							"name": "Sync",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MINIMUM_LIQUIDITY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								},
								{
									"internalType": "uint32",
									"name": "blockTimestampLast",
									"type": "uint32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "kLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "price0CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "price1CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "skim",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "sync",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"MINIMUM_LIQUIDITY()": "ba9a7a56",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address)": "89afcb44",
							"decimals()": "313ce567",
							"factory()": "c45a0155",
							"getReserves()": "0902f1ac",
							"initialize(address,address)": "485cc955",
							"kLast()": "7464fc3d",
							"mint(address)": "6a627842",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"price0CumulativeLast()": "5909c0d5",
							"price1CumulativeLast()": "5a3d5493",
							"skim(address)": "bc25cf77",
							"swap(uint256,uint256,address,bytes)": "022c0d9f",
							"symbol()": "95d89b41",
							"sync()": "fff6cae9",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestampLast\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"DexSwap/interfaces/IPancakePair.sol\":\"IPancakePair\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"DexSwap/interfaces/IPancakePair.sol\":{\"keccak256\":\"0xb3d3ac8e3e41ff3b87b26672225c38b36be5a52008288bd6a3b83b7d68f572d6\",\"urls\":[\"bzz-raw://3ab097e4c47e0069f2e45cce7ccbb6d731c107fd4fff2db13663425a17e52ee5\",\"dweb:/ipfs/QmNmrZbJj5YG3QrLVUNMS4VnXNBfSRwqwZ8nAEdALMFQSR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"DexSwap/libraries/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"DexSwap/libraries/Math.sol\":115:655  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"DexSwap/libraries/Math.sol\":115:655  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a723158202fdbf95b04755ab4e32960ccf32e0500a7935681e14b0a8cfa5660db4b5dd53964736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158202fdbf95b04755ab4e32960ccf32e0500a7935681e14b0a8cfa5660db4b5dd53964736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x2F 0xDB 0xF9 JUMPDEST DIV PUSH22 0x5AB4E32960CCF32E0500A7935681E14B0A8CFA5660DB 0x4B 0x5D 0xD5 CODECOPY PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "115:540:7:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158202fdbf95b04755ab4e32960ccf32e0500a7935681e14b0a8cfa5660db4b5dd53964736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x2F 0xDB 0xF9 JUMPDEST DIV PUSH22 0x5AB4E32960CCF32E0500A7935681E14B0A8CFA5660DB 0x4B 0x5D 0xD5 CODECOPY PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "115:540:7:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"min(uint256,uint256)": "infinite",
								"sqrt(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 115,
									"end": 655,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 115,
									"end": 655,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158202fdbf95b04755ab4e32960ccf32e0500a7935681e14b0a8cfa5660db4b5dd53964736f6c63430005100032",
									".code": [
										{
											"begin": 115,
											"end": 655,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 115,
											"end": 655,
											"name": "ADDRESS"
										},
										{
											"begin": 115,
											"end": 655,
											"name": "EQ"
										},
										{
											"begin": 115,
											"end": 655,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 115,
											"end": 655,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 115,
											"end": 655,
											"name": "MSTORE"
										},
										{
											"begin": 115,
											"end": 655,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 115,
											"end": 655,
											"name": "DUP1"
										},
										{
											"begin": 115,
											"end": 655,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"DexSwap/libraries/Math.sol\":\"Math\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"DexSwap/libraries/Math.sol\":{\"keccak256\":\"0x9e94097dd206ec6121005eb1e67e8347a2cfca90fb7d0b599522ce2f8a36c09b\",\"urls\":[\"bzz-raw://bfa9f239f212c94f413dc5ef4f5cabc853e789519bd9610a51fd7a2ea222d8fb\",\"dweb:/ipfs/QmR1YCU8VQ28BnqeRQ9WqSwqjxLzmtJYz2KqW2XQKjP9dR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"DexSwap/libraries/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"DexSwap/libraries/SafeMath.sol\":175:632  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"DexSwap/libraries/SafeMath.sol\":175:632  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820cf2744ffba8800665607ac6c87476ad52348fc26d6988c917deed7ce65cf589c64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820cf2744ffba8800665607ac6c87476ad52348fc26d6988c917deed7ce65cf589c64736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xCF 0x27 DIFFICULTY SELFDESTRUCT 0xBA DUP9 STOP PUSH7 0x5607AC6C87476A 0xD5 0x23 0x48 0xFC 0x26 0xD6 SWAP9 DUP13 SWAP2 PUSH30 0xEED7CE65CF589C64736F6C63430005100032000000000000000000000000 ",
							"sourceMap": "175:457:8:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820cf2744ffba8800665607ac6c87476ad52348fc26d6988c917deed7ce65cf589c64736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xCF 0x27 DIFFICULTY SELFDESTRUCT 0xBA DUP9 STOP PUSH7 0x5607AC6C87476A 0xD5 0x23 0x48 0xFC 0x26 0xD6 SWAP9 DUP13 SWAP2 PUSH30 0xEED7CE65CF589C64736F6C63430005100032000000000000000000000000 ",
							"sourceMap": "175:457:8:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 175,
									"end": 632,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 175,
									"end": 632,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820cf2744ffba8800665607ac6c87476ad52348fc26d6988c917deed7ce65cf589c64736f6c63430005100032",
									".code": [
										{
											"begin": 175,
											"end": 632,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "ADDRESS"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "EQ"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "MSTORE"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "DUP1"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"DexSwap/libraries/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"DexSwap/libraries/SafeMath.sol\":{\"keccak256\":\"0xd0cc5ede4252f34f9adf75af689fb003aa6349f229b9bba72db43cba9bb1c9d9\",\"urls\":[\"bzz-raw://a2cb594533aebe5028b93c5c429b23907a4830964d8c6728565992bee4cf1eef\",\"dweb:/ipfs/QmdSBCeJiqjQeGZ2K79DXaDfaqJMtXCWAyXDWJ3KNDWZKM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"DexSwap/libraries/UQ112x112.sol": {
				"UQ112x112": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"DexSwap/libraries/UQ112x112.sol\":219:613  library UQ112x112 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"DexSwap/libraries/UQ112x112.sol\":219:613  library UQ112x112 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820f4c2ba256b4dc605740d496375034873e6b0322bc2fc8e594a9ec2007d00afbd64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820f4c2ba256b4dc605740d496375034873e6b0322bc2fc8e594a9ec2007d00afbd64736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 DELEGATECALL 0xC2 0xBA 0x25 PUSH12 0x4DC605740D496375034873E6 0xB0 ORIGIN 0x2B 0xC2 0xFC DUP15 MSIZE 0x4A SWAP15 0xC2 STOP PUSH30 0xAFBD64736F6C6343000510003200000000000000000000000000000000 ",
							"sourceMap": "219:394:9:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820f4c2ba256b4dc605740d496375034873e6b0322bc2fc8e594a9ec2007d00afbd64736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 DELEGATECALL 0xC2 0xBA 0x25 PUSH12 0x4DC605740D496375034873E6 0xB0 ORIGIN 0x2B 0xC2 0xFC DUP15 MSIZE 0x4A SWAP15 0xC2 STOP PUSH30 0xAFBD64736F6C6343000510003200000000000000000000000000000000 ",
							"sourceMap": "219:394:9:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"encode(uint112)": "infinite",
								"uqdiv(uint224,uint112)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 219,
									"end": 613,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 219,
									"end": 613,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820f4c2ba256b4dc605740d496375034873e6b0322bc2fc8e594a9ec2007d00afbd64736f6c63430005100032",
									".code": [
										{
											"begin": 219,
											"end": 613,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 219,
											"end": 613,
											"name": "ADDRESS"
										},
										{
											"begin": 219,
											"end": 613,
											"name": "EQ"
										},
										{
											"begin": 219,
											"end": 613,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 219,
											"end": 613,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 219,
											"end": 613,
											"name": "MSTORE"
										},
										{
											"begin": 219,
											"end": 613,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 219,
											"end": 613,
											"name": "DUP1"
										},
										{
											"begin": 219,
											"end": 613,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"DexSwap/libraries/UQ112x112.sol\":\"UQ112x112\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"DexSwap/libraries/UQ112x112.sol\":{\"keccak256\":\"0x0cd289c012b341feda98ad4cc732ee5ce64cd5d0b106796e4c8edcdad1c2e43b\",\"urls\":[\"bzz-raw://098881b3c407c56d0e9a707f6d6bc5ced2ae78dfe58aa82055c754ee2dd4c97a\",\"dweb:/ipfs/QmQEU9ynXqGR14fYyLgQbdxYebxQsCHsgwE2hr7xAeLzCC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"DexSwap/DexPair.sol": {
				"ast": {
					"absolutePath": "DexSwap/DexPair.sol",
					"exportedSymbols": {
						"DexPair": [
							1048
						]
					},
					"id": 1049,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:0"
						},
						{
							"absolutePath": "DexSwap/interfaces/IPancakePair.sol",
							"file": "./interfaces/IPancakePair.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 1049,
							"sourceUnit": 1960,
							"src": "62:39:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "DexSwap/PancakeERC20.sol",
							"file": "./PancakeERC20.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 1049,
							"sourceUnit": 1434,
							"src": "102:28:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "DexSwap/libraries/Math.sol",
							"file": "./libraries/Math.sol",
							"id": 4,
							"nodeType": "ImportDirective",
							"scope": 1049,
							"sourceUnit": 2036,
							"src": "131:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "DexSwap/libraries/UQ112x112.sol",
							"file": "./libraries/UQ112x112.sol",
							"id": 5,
							"nodeType": "ImportDirective",
							"scope": 1049,
							"sourceUnit": 2153,
							"src": "162:35:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "DexSwap/interfaces/IERC20.sol",
							"file": "./interfaces/IERC20.sol",
							"id": 6,
							"nodeType": "ImportDirective",
							"scope": 1049,
							"sourceUnit": 1518,
							"src": "198:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "DexSwap/interfaces/IPancakeFactory.sol",
							"file": "./interfaces/IPancakeFactory.sol",
							"id": 7,
							"nodeType": "ImportDirective",
							"scope": 1049,
							"sourceUnit": 1718,
							"src": "232:42:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "DexSwap/interfaces/IPancakeCallee.sol",
							"file": "./interfaces/IPancakeCallee.sol",
							"id": 8,
							"nodeType": "ImportDirective",
							"scope": 1049,
							"sourceUnit": 1532,
							"src": "275:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 9,
										"name": "IPancakePair",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1959,
										"src": "338:12:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPancakePair_$1959",
											"typeString": "contract IPancakePair"
										}
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "338:12:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 11,
										"name": "PancakeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1433,
										"src": "352:12:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_PancakeERC20_$1433",
											"typeString": "contract PancakeERC20"
										}
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "352:12:0"
								}
							],
							"contractDependencies": [
								1433,
								1649,
								1959
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1048,
							"linearizedBaseContracts": [
								1048,
								1433,
								1649,
								1959
							],
							"name": "DexPair",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 15,
									"libraryName": {
										"contractScope": null,
										"id": 13,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2110,
										"src": "377:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$2110",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "371:25:0",
									"typeName": {
										"id": 14,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "391:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 18,
									"libraryName": {
										"contractScope": null,
										"id": 16,
										"name": "UQ112x112",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2152,
										"src": "407:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_UQ112x112_$2152",
											"typeString": "library UQ112x112"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "401:28:0",
									"typeName": {
										"id": 17,
										"name": "uint224",
										"nodeType": "ElementaryTypeName",
										"src": "421:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint224",
											"typeString": "uint224"
										}
									}
								},
								{
									"constant": true,
									"id": 23,
									"name": "MINIMUM_LIQUIDITY",
									"nodeType": "VariableDeclaration",
									"scope": 1048,
									"src": "435:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 19,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "435:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"id": 22,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"hexValue": "3130",
											"id": 20,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "476:2:0",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "33",
											"id": 21,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "480:1:0",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_3_by_1",
												"typeString": "int_const 3"
											},
											"value": "3"
										},
										"src": "476:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 32,
									"name": "SELECTOR",
									"nodeType": "VariableDeclaration",
									"scope": 1048,
									"src": "487:88:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 24,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "487:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"arguments": [
													{
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "7472616e7366657228616464726573732c75696e7432353629",
																"id": 28,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "545:27:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b",
																	"typeString": "literal_string \"transfer(address,uint256)\""
																},
																"value": "transfer(address,uint256)"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b",
																	"typeString": "literal_string \"transfer(address,uint256)\""
																}
															],
															"id": 27,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "539:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																"typeString": "type(bytes storage pointer)"
															},
															"typeName": "bytes"
														},
														"id": 29,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "539:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													],
													"id": 26,
													"name": "keccak256",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2161,
													"src": "529:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
														"typeString": "function (bytes memory) pure returns (bytes32)"
													}
												},
												"id": 30,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "529:45:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											],
											"id": 25,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "522:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes4_$",
												"typeString": "type(bytes4)"
											},
											"typeName": "bytes4"
										},
										"id": 31,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "522:53:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 34,
									"name": "factory",
									"nodeType": "VariableDeclaration",
									"scope": 1048,
									"src": "582:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 33,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "582:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 36,
									"name": "token0",
									"nodeType": "VariableDeclaration",
									"scope": 1048,
									"src": "610:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 35,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "610:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 38,
									"name": "token1",
									"nodeType": "VariableDeclaration",
									"scope": 1048,
									"src": "637:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 37,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "637:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 40,
									"name": "reserve0",
									"nodeType": "VariableDeclaration",
									"scope": 1048,
									"src": "665:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint112",
										"typeString": "uint112"
									},
									"typeName": {
										"id": 39,
										"name": "uint112",
										"nodeType": "ElementaryTypeName",
										"src": "665:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint112",
											"typeString": "uint112"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 42,
									"name": "reserve1",
									"nodeType": "VariableDeclaration",
									"scope": 1048,
									"src": "761:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint112",
										"typeString": "uint112"
									},
									"typeName": {
										"id": 41,
										"name": "uint112",
										"nodeType": "ElementaryTypeName",
										"src": "761:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint112",
											"typeString": "uint112"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 44,
									"name": "blockTimestampLast",
									"nodeType": "VariableDeclaration",
									"scope": 1048,
									"src": "857:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 43,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "857:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 46,
									"name": "price0CumulativeLast",
									"nodeType": "VariableDeclaration",
									"scope": 1048,
									"src": "954:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 45,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "954:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 48,
									"name": "price1CumulativeLast",
									"nodeType": "VariableDeclaration",
									"scope": 1048,
									"src": "992:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 47,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "992:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 50,
									"name": "kLast",
									"nodeType": "VariableDeclaration",
									"scope": 1048,
									"src": "1030:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 49,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1030:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 53,
									"name": "unlocked",
									"nodeType": "VariableDeclaration",
									"scope": 1048,
									"src": "1134:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 51,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1134:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31",
										"id": 52,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1158:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "1181:113:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 56,
																"name": "unlocked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 53,
																"src": "1199:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 57,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1211:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1199:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a204c4f434b4544",
															"id": 59,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1214:17:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c084a590425edfe86a11f73831c0243820669c7e4ae4ddc8e665ae7ef10c474a",
																"typeString": "literal_string \"Pancake: LOCKED\""
															},
															"value": "Pancake: LOCKED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c084a590425edfe86a11f73831c0243820669c7e4ae4ddc8e665ae7ef10c474a",
																"typeString": "literal_string \"Pancake: LOCKED\""
															}
														],
														"id": 55,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2170,
															2171
														],
														"referencedDeclaration": 2171,
														"src": "1191:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1191:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 61,
												"nodeType": "ExpressionStatement",
												"src": "1191:41:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 62,
														"name": "unlocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "1242:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 63,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1253:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1242:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 65,
												"nodeType": "ExpressionStatement",
												"src": "1242:12:0"
											},
											{
												"id": 66,
												"nodeType": "PlaceholderStatement",
												"src": "1264:1:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 67,
														"name": "unlocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "1275:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1286:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1275:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 70,
												"nodeType": "ExpressionStatement",
												"src": "1275:12:0"
											}
										]
									},
									"documentation": null,
									"id": 72,
									"name": "lock",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1178:2:0"
									},
									"src": "1165:129:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "1410:117:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 81,
														"name": "_reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 75,
														"src": "1420:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 82,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "1432:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "1420:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "1420:20:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 85,
														"name": "_reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 77,
														"src": "1450:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 86,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "1462:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "1450:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"id": 88,
												"nodeType": "ExpressionStatement",
												"src": "1450:20:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 89,
														"name": "_blockTimestampLast",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "1480:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 90,
														"name": "blockTimestampLast",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "1502:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "1480:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "1480:40:0"
											}
										]
									},
									"documentation": null,
									"id": 94,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1320:2:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"name": "_reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1344:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 74,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1344:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"name": "_reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1363:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 76,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1363:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"name": "_blockTimestampLast",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1382:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 78,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1382:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1343:66:0"
									},
									"scope": 1048,
									"src": "1300:227:0",
									"stateMutability": "view",
									"superFunction": 1901,
									"visibility": "public"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "1603:212:0",
										"statements": [
											{
												"assignments": [
													104,
													106
												],
												"declarations": [
													{
														"constant": false,
														"id": 104,
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 135,
														"src": "1614:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 103,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1614:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 106,
														"name": "data",
														"nodeType": "VariableDeclaration",
														"scope": 135,
														"src": "1628:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 105,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1628:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 116,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 111,
																	"name": "SELECTOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1683:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 112,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 98,
																	"src": "1693:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 113,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 100,
																	"src": "1697:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 109,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2154,
																	"src": "1660:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1660:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1660:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 107,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 96,
															"src": "1649:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 108,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1649:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1649:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1613:91:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 118,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 104,
																"src": "1722:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 122,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 119,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 106,
																					"src": "1734:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 120,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "1734:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 121,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1749:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1734:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 125,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 106,
																					"src": "1765:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"components": [
																						{
																							"argumentTypes": null,
																							"id": 126,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1772:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": "bool"
																						}
																					],
																					"id": 127,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1771:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 123,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2154,
																					"src": "1754:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 124,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "1754:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 128,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1754:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1734:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 130,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1733:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1722:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a205452414e534645525f4641494c4544",
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1781:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4a184d07b37269afc05419c3e30fc72fcfc73d01055a62dee4e00c06fa61eb4a",
																"typeString": "literal_string \"Pancake: TRANSFER_FAILED\""
															},
															"value": "Pancake: TRANSFER_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4a184d07b37269afc05419c3e30fc72fcfc73d01055a62dee4e00c06fa61eb4a",
																"typeString": "literal_string \"Pancake: TRANSFER_FAILED\""
															}
														],
														"id": 117,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2170,
															2171
														],
														"referencedDeclaration": 2171,
														"src": "1714:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1714:94:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "1714:94:0"
											}
										]
									},
									"documentation": null,
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "1556:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1556:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "1571:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1571:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 100,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "1583:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1583:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1555:39:0"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1603:0:0"
									},
									"scope": 1048,
									"src": "1533:282:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 144,
									"name": "Mint",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1832:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1832:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"indexed": false,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1856:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1856:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"indexed": false,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1870:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1870:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1831:52:0"
									},
									"src": "1821:63:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 154,
									"name": "Burn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "1900:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1900:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"indexed": false,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "1924:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1924:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"indexed": false,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "1938:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1938:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "1952:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1952:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1899:72:0"
									},
									"src": "1889:83:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 168,
									"name": "Swap",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1997:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"indexed": false,
												"name": "amount0In",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "2029:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2029:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"indexed": false,
												"name": "amount1In",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "2053:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2053:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"indexed": false,
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "2077:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 161,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2077:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": false,
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "2102:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2102:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "2127:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2127:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1987:164:0"
									},
									"src": "1977:175:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 174,
									"name": "Sync",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"indexed": false,
												"name": "reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "2168:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 169,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "2168:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"indexed": false,
												"name": "reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "2186:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 171,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "2186:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2167:36:0"
									},
									"src": "2157:47:0"
								},
								{
									"body": {
										"id": 182,
										"nodeType": "Block",
										"src": "2231:37:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 177,
														"name": "factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "2241:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 178,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2167,
															"src": "2251:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 179,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2251:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2241:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 181,
												"nodeType": "ExpressionStatement",
												"src": "2241:20:0"
											}
										]
									},
									"documentation": null,
									"id": 183,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2221:2:0"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2231:0:0"
									},
									"scope": 1048,
									"src": "2210:58:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 206,
										"nodeType": "Block",
										"src": "2393:141:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 191,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2167,
																	"src": "2411:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2411:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 193,
																"name": "factory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 34,
																"src": "2425:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2411:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a20464f5242494444454e",
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2434:20:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f0c1e1712466d3d36724e0a82edec721666e68b8fe9433d191f13e7c47aec611",
																"typeString": "literal_string \"Pancake: FORBIDDEN\""
															},
															"value": "Pancake: FORBIDDEN"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f0c1e1712466d3d36724e0a82edec721666e68b8fe9433d191f13e7c47aec611",
																"typeString": "literal_string \"Pancake: FORBIDDEN\""
															}
														],
														"id": 190,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2170,
															2171
														],
														"referencedDeclaration": 2171,
														"src": "2403:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2403:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 197,
												"nodeType": "ExpressionStatement",
												"src": "2403:52:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 198,
														"name": "token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "2485:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 199,
														"name": "_token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "2494:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2485:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 201,
												"nodeType": "ExpressionStatement",
												"src": "2485:16:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 202,
														"name": "token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "2511:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 203,
														"name": "_token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 187,
														"src": "2520:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2511:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 205,
												"nodeType": "ExpressionStatement",
												"src": "2511:16:0"
											}
										]
									},
									"documentation": null,
									"id": 207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"name": "_token0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "2350:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2350:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"name": "_token1",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "2367:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2367:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2349:34:0"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2393:0:0"
									},
									"scope": 1048,
									"src": "2330:204:0",
									"stateMutability": "nonpayable",
									"superFunction": 1958,
									"visibility": "external"
								},
								{
									"body": {
										"id": 314,
										"nodeType": "Block",
										"src": "2709:752:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 219,
																	"name": "balance0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 209,
																	"src": "2727:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 222,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "-",
																			"prefix": true,
																			"src": "2747:2:0",
																			"subExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 221,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2748:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_minus_1_by_1",
																				"typeString": "int_const -1"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_minus_1_by_1",
																				"typeString": "int_const -1"
																			}
																		],
																		"id": 220,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2739:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint112_$",
																			"typeString": "type(uint112)"
																		},
																		"typeName": "uint112"
																	},
																	"id": 223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2739:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "2727:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 225,
																	"name": "balance1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "2754:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 228,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "-",
																			"prefix": true,
																			"src": "2774:2:0",
																			"subExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 227,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2775:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_minus_1_by_1",
																				"typeString": "int_const -1"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_minus_1_by_1",
																				"typeString": "int_const -1"
																			}
																		],
																		"id": 226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2766:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint112_$",
																			"typeString": "type(uint112)"
																		},
																		"typeName": "uint112"
																	},
																	"id": 229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2766:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "2754:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2727:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a204f564552464c4f57",
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2779:19:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ecd319b2d162405bd72b657f3fdaddf991823264b7f8c130bf28f20adeb81259",
																"typeString": "literal_string \"Pancake: OVERFLOW\""
															},
															"value": "Pancake: OVERFLOW"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ecd319b2d162405bd72b657f3fdaddf991823264b7f8c130bf28f20adeb81259",
																"typeString": "literal_string \"Pancake: OVERFLOW\""
															}
														],
														"id": 218,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2170,
															2171
														],
														"referencedDeclaration": 2171,
														"src": "2719:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2719:80:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 234,
												"nodeType": "ExpressionStatement",
												"src": "2719:80:0"
											},
											{
												"assignments": [
													236
												],
												"declarations": [
													{
														"constant": false,
														"id": 236,
														"name": "blockTimestamp",
														"nodeType": "VariableDeclaration",
														"scope": 314,
														"src": "2809:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 235,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "2809:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 245,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 238,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2157,
																	"src": "2840:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2840:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																},
																"id": 242,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 240,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2858:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2861:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "2858:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																}
															},
															"src": "2840:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 237,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2833:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": "uint32"
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2833:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2809:55:0"
											},
											{
												"assignments": [
													247
												],
												"declarations": [
													{
														"constant": false,
														"id": 247,
														"name": "timeElapsed",
														"nodeType": "VariableDeclaration",
														"scope": 314,
														"src": "2874:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 246,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "2874:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 248,
														"name": "blockTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "2895:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 249,
														"name": "blockTimestampLast",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "2912:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "2895:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2874:56:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 258,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 252,
																"name": "timeElapsed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 247,
																"src": "2967:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 253,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2981:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2967:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 255,
																"name": "_reserve0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 213,
																"src": "2986:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2999:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2986:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "2967:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"id": 261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 259,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "3004:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3017:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3004:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2967:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 292,
												"nodeType": "IfStatement",
												"src": "2963:332:0",
												"trueBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "3020:275:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 263,
																	"name": "price0CumulativeLast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 46,
																	"src": "3094:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 270,
																						"name": "_reserve0",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 213,
																						"src": "3157:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"id": 267,
																								"name": "_reserve1",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 215,
																								"src": "3140:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint112",
																									"typeString": "uint112"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint112",
																									"typeString": "uint112"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"id": 265,
																								"name": "UQ112x112",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2152,
																								"src": "3123:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_UQ112x112_$2152_$",
																									"typeString": "type(library UQ112x112)"
																								}
																							},
																							"id": 266,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "encode",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2133,
																							"src": "3123:16:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint112_$returns$_t_uint224_$",
																								"typeString": "function (uint112) pure returns (uint224)"
																							}
																						},
																						"id": 268,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3123:27:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint224",
																							"typeString": "uint224"
																						}
																					},
																					"id": 269,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "uqdiv",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2151,
																					"src": "3123:33:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint224_$_t_uint112_$returns$_t_uint224_$bound_to$_t_uint224_$",
																						"typeString": "function (uint224,uint112) pure returns (uint224)"
																					}
																				},
																				"id": 271,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3123:44:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint224",
																					"typeString": "uint224"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint224",
																					"typeString": "uint224"
																				}
																			],
																			"id": 264,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3118:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": "uint"
																		},
																		"id": 272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3118:50:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 273,
																		"name": "timeElapsed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 247,
																		"src": "3171:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"src": "3118:64:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3094:88:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 276,
															"nodeType": "ExpressionStatement",
															"src": "3094:88:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 277,
																	"name": "price1CumulativeLast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 48,
																	"src": "3196:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 284,
																						"name": "_reserve1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 215,
																						"src": "3259:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"id": 281,
																								"name": "_reserve0",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 213,
																								"src": "3242:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint112",
																									"typeString": "uint112"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint112",
																									"typeString": "uint112"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"id": 279,
																								"name": "UQ112x112",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2152,
																								"src": "3225:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_UQ112x112_$2152_$",
																									"typeString": "type(library UQ112x112)"
																								}
																							},
																							"id": 280,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "encode",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2133,
																							"src": "3225:16:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint112_$returns$_t_uint224_$",
																								"typeString": "function (uint112) pure returns (uint224)"
																							}
																						},
																						"id": 282,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3225:27:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint224",
																							"typeString": "uint224"
																						}
																					},
																					"id": 283,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "uqdiv",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2151,
																					"src": "3225:33:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint224_$_t_uint112_$returns$_t_uint224_$bound_to$_t_uint224_$",
																						"typeString": "function (uint224,uint112) pure returns (uint224)"
																					}
																				},
																				"id": 285,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3225:44:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint224",
																					"typeString": "uint224"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint224",
																					"typeString": "uint224"
																				}
																			],
																			"id": 278,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3220:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": "uint"
																		},
																		"id": 286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3220:50:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 287,
																		"name": "timeElapsed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 247,
																		"src": "3273:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"src": "3220:64:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3196:88:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 290,
															"nodeType": "ExpressionStatement",
															"src": "3196:88:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 293,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "3304:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 295,
																"name": "balance0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "3323:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3315:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint112_$",
																"typeString": "type(uint112)"
															},
															"typeName": "uint112"
														},
														"id": 296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3315:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "3304:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "3304:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 299,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "3342:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 301,
																"name": "balance1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 211,
																"src": "3361:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 300,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3353:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint112_$",
																"typeString": "type(uint112)"
															},
															"typeName": "uint112"
														},
														"id": 302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3353:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "3342:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"id": 304,
												"nodeType": "ExpressionStatement",
												"src": "3342:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 305,
														"name": "blockTimestampLast",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "3380:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 306,
														"name": "blockTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "3401:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "3380:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "3380:35:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 310,
															"name": "reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "3435:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 311,
															"name": "reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 42,
															"src": "3445:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 309,
														"name": "Sync",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															174
														],
														"referencedDeclaration": 174,
														"src": "3430:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint112_$_t_uint112_$returns$__$",
															"typeString": "function (uint112,uint112)"
														}
													},
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3430:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 313,
												"nodeType": "EmitStatement",
												"src": "3425:29:0"
											}
										]
									},
									"documentation": null,
									"id": 315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"name": "balance0",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "2633:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2633:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"name": "balance1",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "2648:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2648:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"name": "_reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "2663:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 212,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "2663:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"name": "_reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "2682:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 214,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2632:68:0"
									},
									"returnParameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2709:0:0"
									},
									"scope": 1048,
									"src": "2616:845:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "3632:747:0",
										"statements": [
											{
												"assignments": [
													325
												],
												"declarations": [
													{
														"constant": false,
														"id": 325,
														"name": "feeTo",
														"nodeType": "VariableDeclaration",
														"scope": 426,
														"src": "3642:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 324,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3642:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 331,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 327,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 34,
																	"src": "3674:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 326,
																"name": "IPancakeFactory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1717,
																"src": "3658:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IPancakeFactory_$1717_$",
																	"typeString": "type(contract IPancakeFactory)"
																}
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3658:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPancakeFactory_$1717",
																"typeString": "contract IPancakeFactory"
															}
														},
														"id": 329,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "feeTo",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1666,
														"src": "3658:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3658:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3642:48:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 332,
														"name": "feeOn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "3700:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 337,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 333,
															"name": "feeTo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 325,
															"src": "3708:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3725:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 334,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3717:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3717:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"src": "3708:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3700:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 339,
												"nodeType": "ExpressionStatement",
												"src": "3700:27:0"
											},
											{
												"assignments": [
													341
												],
												"declarations": [
													{
														"constant": false,
														"id": 341,
														"name": "_kLast",
														"nodeType": "VariableDeclaration",
														"scope": 426,
														"src": "3737:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 340,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3737:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 343,
												"initialValue": {
													"argumentTypes": null,
													"id": 342,
													"name": "kLast",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 50,
													"src": "3751:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3737:19:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 344,
													"name": "feeOn",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 322,
													"src": "3785:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 418,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 416,
															"name": "_kLast",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "4326:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4336:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4326:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 424,
													"nodeType": "IfStatement",
													"src": "4322:51:0",
													"trueBody": {
														"id": 423,
														"nodeType": "Block",
														"src": "4339:34:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 419,
																		"name": "kLast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 50,
																		"src": "4353:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4361:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4353:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 422,
																"nodeType": "ExpressionStatement",
																"src": "4353:9:0"
															}
														]
													}
												},
												"id": 425,
												"nodeType": "IfStatement",
												"src": "3781:592:0",
												"trueBody": {
													"id": 415,
													"nodeType": "Block",
													"src": "3792:524:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 345,
																	"name": "_kLast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 341,
																	"src": "3810:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3820:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3810:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 414,
															"nodeType": "IfStatement",
															"src": "3806:500:0",
															"trueBody": {
																"id": 413,
																"nodeType": "Block",
																"src": "3823:483:0",
																"statements": [
																	{
																		"assignments": [
																			349
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 349,
																				"name": "rootK",
																				"nodeType": "VariableDeclaration",
																				"scope": 413,
																				"src": "3841:10:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 348,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "3841:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 359,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 356,
																							"name": "_reserve1",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 319,
																							"src": "3884:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint112",
																								"typeString": "uint112"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint112",
																								"typeString": "uint112"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"arguments": [
																								{
																									"argumentTypes": null,
																									"id": 353,
																									"name": "_reserve0",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 317,
																									"src": "3869:9:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint112",
																										"typeString": "uint112"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint112",
																										"typeString": "uint112"
																									}
																								],
																								"id": 352,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "3864:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_uint256_$",
																									"typeString": "type(uint256)"
																								},
																								"typeName": "uint"
																							},
																							"id": 354,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "3864:15:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 355,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2109,
																						"src": "3864:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 357,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3864:30:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 350,
																					"name": "Math",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2035,
																					"src": "3854:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Math_$2035_$",
																						"typeString": "type(library Math)"
																					}
																				},
																				"id": 351,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sqrt",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2034,
																				"src": "3854:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 358,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3854:41:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3841:54:0"
																	},
																	{
																		"assignments": [
																			361
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 361,
																				"name": "rootKLast",
																				"nodeType": "VariableDeclaration",
																				"scope": 413,
																				"src": "3913:14:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 360,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "3913:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 366,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 364,
																					"name": "_kLast",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 341,
																					"src": "3940:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 362,
																					"name": "Math",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2035,
																					"src": "3930:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Math_$2035_$",
																						"typeString": "type(library Math)"
																					}
																				},
																				"id": 363,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sqrt",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2034,
																				"src": "3930:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 365,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3930:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3913:34:0"
																	},
																	{
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 369,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 367,
																				"name": "rootK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 349,
																				"src": "3969:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 368,
																				"name": "rootKLast",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 361,
																				"src": "3977:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3969:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": null,
																		"id": 412,
																		"nodeType": "IfStatement",
																		"src": "3965:327:0",
																		"trueBody": {
																			"id": 411,
																			"nodeType": "Block",
																			"src": "3988:304:0",
																			"statements": [
																				{
																					"assignments": [
																						371
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 371,
																							"name": "numerator",
																							"nodeType": "VariableDeclaration",
																							"scope": 411,
																							"src": "4010:14:0",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 370,
																								"name": "uint",
																								"nodeType": "ElementaryTypeName",
																								"src": "4010:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"value": null,
																							"visibility": "internal"
																						}
																					],
																					"id": 382,
																					"initialValue": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"hexValue": "38",
																								"id": 380,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4069:1:0",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_8_by_1",
																									"typeString": "int_const 8"
																								},
																								"value": "8"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_rational_8_by_1",
																									"typeString": "int_const 8"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"arguments": [
																											{
																												"argumentTypes": null,
																												"id": 376,
																												"name": "rootKLast",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 361,
																												"src": "4053:9:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											],
																											"expression": {
																												"argumentTypes": null,
																												"id": 374,
																												"name": "rootK",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 349,
																												"src": "4043:5:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 375,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "sub",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 2081,
																											"src": "4043:9:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																												"typeString": "function (uint256,uint256) pure returns (uint256)"
																											}
																										},
																										"id": 377,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "4043:20:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"expression": {
																										"argumentTypes": null,
																										"id": 372,
																										"name": "totalSupply",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1068,
																										"src": "4027:11:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 373,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "mul",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 2109,
																									"src": "4027:15:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 378,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4027:37:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 379,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "mul",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2109,
																							"src": "4027:41:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 381,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4027:44:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "4010:61:0"
																				},
																				{
																					"assignments": [
																						384
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 384,
																							"name": "denominator",
																							"nodeType": "VariableDeclaration",
																							"scope": 411,
																							"src": "4093:16:0",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 383,
																								"name": "uint",
																								"nodeType": "ElementaryTypeName",
																								"src": "4093:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"value": null,
																							"visibility": "internal"
																						}
																					],
																					"id": 395,
																					"initialValue": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"hexValue": "38",
																										"id": 392,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "4144:1:0",
																										"subdenomination": null,
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_8_by_1",
																											"typeString": "int_const 8"
																										},
																										"value": "8"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_8_by_1",
																											"typeString": "int_const 8"
																										}
																									],
																									"expression": {
																										"argumentTypes": null,
																										"id": 390,
																										"name": "rootKLast",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 361,
																										"src": "4130:9:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 391,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "mul",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 2109,
																									"src": "4130:13:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 393,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4130:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"hexValue": "3137",
																										"id": 387,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "4122:2:0",
																										"subdenomination": null,
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_17_by_1",
																											"typeString": "int_const 17"
																										},
																										"value": "17"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_17_by_1",
																											"typeString": "int_const 17"
																										}
																									],
																									"expression": {
																										"argumentTypes": null,
																										"id": 385,
																										"name": "rootK",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 349,
																										"src": "4112:5:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 386,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "mul",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 2109,
																									"src": "4112:9:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 388,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4112:13:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 389,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "add",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2059,
																							"src": "4112:17:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 394,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4112:35:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "4093:54:0"
																				},
																				{
																					"assignments": [
																						397
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 397,
																							"name": "liquidity",
																							"nodeType": "VariableDeclaration",
																							"scope": 411,
																							"src": "4169:14:0",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 396,
																								"name": "uint",
																								"nodeType": "ElementaryTypeName",
																								"src": "4169:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"value": null,
																							"visibility": "internal"
																						}
																					],
																					"id": 401,
																					"initialValue": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 400,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 398,
																							"name": "numerator",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 371,
																							"src": "4186:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "/",
																						"rightExpression": {
																							"argumentTypes": null,
																							"id": 399,
																							"name": "denominator",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 384,
																							"src": "4198:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "4186:23:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "4169:40:0"
																				},
																				{
																					"condition": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 404,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 402,
																							"name": "liquidity",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 397,
																							"src": "4235:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "30",
																							"id": 403,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4247:1:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "4235:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": null,
																					"id": 410,
																					"nodeType": "IfStatement",
																					"src": "4231:42:0",
																					"trueBody": {
																						"expression": {
																							"argumentTypes": null,
																							"arguments": [
																								{
																									"argumentTypes": null,
																									"id": 406,
																									"name": "feeTo",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 325,
																									"src": "4256:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								{
																									"argumentTypes": null,
																									"id": 407,
																									"name": "liquidity",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 397,
																									"src": "4263:9:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									},
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"id": 405,
																								"name": "_mint",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1170,
																								"src": "4250:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																									"typeString": "function (address,uint256)"
																								}
																							},
																							"id": 408,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "4250:23:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_tuple$__$",
																								"typeString": "tuple()"
																							}
																						},
																						"id": 409,
																						"nodeType": "ExpressionStatement",
																						"src": "4250:23:0"
																					}
																				}
																			]
																		}
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintFee",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"name": "_reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "3565:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 316,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "3565:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"name": "_reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "3584:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 318,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "3584:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3564:38:0"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"name": "feeOn",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "3620:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 321,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3620:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3619:12:0"
									},
									"scope": 1048,
									"src": "3547:832:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 571,
										"nodeType": "Block",
										"src": "4553:1152:0",
										"statements": [
											{
												"assignments": [
													437,
													439,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"name": "_reserve0",
														"nodeType": "VariableDeclaration",
														"scope": 571,
														"src": "4564:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 436,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "4564:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 439,
														"name": "_reserve1",
														"nodeType": "VariableDeclaration",
														"scope": 571,
														"src": "4583:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 438,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "4583:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 442,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 440,
														"name": "getReserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "4605:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
															"typeString": "function () view returns (uint112,uint112,uint32)"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4605:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
														"typeString": "tuple(uint112,uint112,uint32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4563:55:0"
											},
											{
												"assignments": [
													444
												],
												"declarations": [
													{
														"constant": false,
														"id": 444,
														"name": "balance0",
														"nodeType": "VariableDeclaration",
														"scope": 571,
														"src": "4643:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 443,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4643:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 453,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 450,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2199,
																	"src": "4692:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DexPair_$1048",
																		"typeString": "contract DexPair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DexPair_$1048",
																		"typeString": "contract DexPair"
																	}
																],
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4684:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4684:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 446,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 36,
																	"src": "4666:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 445,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1517,
																"src": "4659:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1517_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4659:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1517",
																"typeString": "contract IERC20"
															}
														},
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1478,
														"src": "4659:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4659:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4643:55:0"
											},
											{
												"assignments": [
													455
												],
												"declarations": [
													{
														"constant": false,
														"id": 455,
														"name": "balance1",
														"nodeType": "VariableDeclaration",
														"scope": 571,
														"src": "4708:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 454,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4708:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 464,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 461,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2199,
																	"src": "4757:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DexPair_$1048",
																		"typeString": "contract DexPair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DexPair_$1048",
																		"typeString": "contract DexPair"
																	}
																],
																"id": 460,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4749:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4749:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 457,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 38,
																	"src": "4731:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 456,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1517,
																"src": "4724:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1517_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4724:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1517",
																"typeString": "contract IERC20"
															}
														},
														"id": 459,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1478,
														"src": "4724:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4724:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4708:55:0"
											},
											{
												"assignments": [
													466
												],
												"declarations": [
													{
														"constant": false,
														"id": 466,
														"name": "amount0",
														"nodeType": "VariableDeclaration",
														"scope": 571,
														"src": "4773:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 465,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4773:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 471,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 469,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4801:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 467,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "4788:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2081,
														"src": "4788:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4788:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4773:38:0"
											},
											{
												"assignments": [
													473
												],
												"declarations": [
													{
														"constant": false,
														"id": 473,
														"name": "amount1",
														"nodeType": "VariableDeclaration",
														"scope": 571,
														"src": "4821:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 472,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4821:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 478,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 476,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "4849:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 474,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4836:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2081,
														"src": "4836:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4836:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4821:38:0"
											},
											{
												"assignments": [
													480
												],
												"declarations": [
													{
														"constant": false,
														"id": 480,
														"name": "feeOn",
														"nodeType": "VariableDeclaration",
														"scope": 571,
														"src": "4870:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 479,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4870:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 485,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 482,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4892:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 483,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "4903:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 481,
														"name": "_mintFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "4883:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint112_$_t_uint112_$returns$_t_bool_$",
															"typeString": "function (uint112,uint112) returns (bool)"
														}
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4883:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4870:43:0"
											},
											{
												"assignments": [
													487
												],
												"declarations": [
													{
														"constant": false,
														"id": 487,
														"name": "_totalSupply",
														"nodeType": "VariableDeclaration",
														"scope": 571,
														"src": "4923:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 486,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4923:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 489,
												"initialValue": {
													"argumentTypes": null,
													"id": 488,
													"name": "totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1068,
													"src": "4943:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4923:31:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 490,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5046:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 491,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5062:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5046:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 532,
													"nodeType": "Block",
													"src": "5266:123:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 514,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 434,
																	"src": "5280:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 522,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 519,
																						"name": "_totalSupply",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 487,
																						"src": "5313:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 517,
																						"name": "amount0",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 466,
																						"src": "5301:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 518,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2109,
																					"src": "5301:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 520,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5301:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 521,
																				"name": "_reserve0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 437,
																				"src": "5329:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint112",
																					"typeString": "uint112"
																				}
																			},
																			"src": "5301:37:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 528,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 525,
																						"name": "_totalSupply",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 487,
																						"src": "5352:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 523,
																						"name": "amount1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 473,
																						"src": "5340:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 524,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2109,
																					"src": "5340:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 526,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5340:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 527,
																				"name": "_reserve1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 439,
																				"src": "5368:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint112",
																					"typeString": "uint112"
																				}
																			},
																			"src": "5340:37:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 515,
																			"name": "Math",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2035,
																			"src": "5292:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Math_$2035_$",
																				"typeString": "type(library Math)"
																			}
																		},
																		"id": 516,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "min",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1980,
																		"src": "5292:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5292:86:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5280:98:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 531,
															"nodeType": "ExpressionStatement",
															"src": "5280:98:0"
														}
													]
												},
												"id": 533,
												"nodeType": "IfStatement",
												"src": "5042:347:0",
												"trueBody": {
													"id": 513,
													"nodeType": "Block",
													"src": "5065:195:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 493,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 434,
																	"src": "5079:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 502,
																			"name": "MINIMUM_LIQUIDITY",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 23,
																			"src": "5127:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 498,
																							"name": "amount1",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 473,
																							"src": "5113:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"id": 496,
																							"name": "amount0",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 466,
																							"src": "5101:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 497,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2109,
																						"src": "5101:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 499,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5101:20:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 494,
																					"name": "Math",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2035,
																					"src": "5091:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Math_$2035_$",
																						"typeString": "type(library Math)"
																					}
																				},
																				"id": 495,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sqrt",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2034,
																				"src": "5091:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5091:31:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2081,
																		"src": "5091:35:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5091:54:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5079:66:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 505,
															"nodeType": "ExpressionStatement",
															"src": "5079:66:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5172:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5164:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5164:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 510,
																		"name": "MINIMUM_LIQUIDITY",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 23,
																		"src": "5176:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 506,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1170,
																	"src": "5158:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5158:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 512,
															"nodeType": "ExpressionStatement",
															"src": "5158:36:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 535,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 434,
																"src": "5406:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5418:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5406:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a20494e53554646494349454e545f4c49515549444954595f4d494e544544",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5421:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef633320352a650c1d75752f13e6c73d8d8f7f26a5596a6d026c1bf50d2f7713",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_LIQUIDITY_MINTED\""
															},
															"value": "Pancake: INSUFFICIENT_LIQUIDITY_MINTED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef633320352a650c1d75752f13e6c73d8d8f7f26a5596a6d026c1bf50d2f7713",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_LIQUIDITY_MINTED\""
															}
														],
														"id": 534,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2170,
															2171
														],
														"referencedDeclaration": 2171,
														"src": "5398:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5398:64:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "5398:64:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 542,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "5478:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 543,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 434,
															"src": "5482:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 541,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "5472:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5472:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 545,
												"nodeType": "ExpressionStatement",
												"src": "5472:20:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 547,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "5511:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 548,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "5521:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 549,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "5531:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 550,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "5542:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 546,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "5503:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint112_$_t_uint112_$returns$__$",
															"typeString": "function (uint256,uint256,uint112,uint112)"
														}
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5503:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 552,
												"nodeType": "ExpressionStatement",
												"src": "5503:49:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 553,
													"name": "feeOn",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 480,
													"src": "5566:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 563,
												"nodeType": "IfStatement",
												"src": "5562:47:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 554,
															"name": "kLast",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 50,
															"src": "5573:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 559,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 42,
																	"src": "5600:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 556,
																			"name": "reserve0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 40,
																			"src": "5586:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		],
																		"id": 555,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5581:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": "uint"
																	},
																	"id": 557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5581:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2109,
																"src": "5581:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5581:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5573:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 562,
													"nodeType": "ExpressionStatement",
													"src": "5573:36:0"
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 565,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2167,
																"src": "5669:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5669:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 567,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "5681:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 568,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "5690:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 564,
														"name": "Mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															144
														],
														"referencedDeclaration": 144,
														"src": "5664:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5664:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 570,
												"nodeType": "EmitStatement",
												"src": "5659:39:0"
											}
										]
									},
									"documentation": null,
									"id": 572,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 432,
											"modifierName": {
												"argumentTypes": null,
												"id": 431,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 72,
												"src": "4523:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4523:4:0"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "4502:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4502:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4501:12:0"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "4537:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 433,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4537:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4536:16:0"
									},
									"scope": 1048,
									"src": "4488:1217:0",
									"stateMutability": "nonpayable",
									"superFunction": 1923,
									"visibility": "external"
								},
								{
									"body": {
										"id": 735,
										"nodeType": "Block",
										"src": "5891:1365:0",
										"statements": [
											{
												"assignments": [
													584,
													586,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 584,
														"name": "_reserve0",
														"nodeType": "VariableDeclaration",
														"scope": 735,
														"src": "5902:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 583,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "5902:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 586,
														"name": "_reserve1",
														"nodeType": "VariableDeclaration",
														"scope": 735,
														"src": "5921:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 585,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "5921:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 589,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 587,
														"name": "getReserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "5943:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
															"typeString": "function () view returns (uint112,uint112,uint32)"
														}
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5943:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
														"typeString": "tuple(uint112,uint112,uint32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5901:55:0"
											},
											{
												"assignments": [
													591
												],
												"declarations": [
													{
														"constant": false,
														"id": 591,
														"name": "_token0",
														"nodeType": "VariableDeclaration",
														"scope": 735,
														"src": "5981:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 590,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5981:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 593,
												"initialValue": {
													"argumentTypes": null,
													"id": 592,
													"name": "token0",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 36,
													"src": "5999:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5981:24:0"
											},
											{
												"assignments": [
													595
												],
												"declarations": [
													{
														"constant": false,
														"id": 595,
														"name": "_token1",
														"nodeType": "VariableDeclaration",
														"scope": 735,
														"src": "6061:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 594,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6061:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 597,
												"initialValue": {
													"argumentTypes": null,
													"id": 596,
													"name": "token1",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 38,
													"src": "6079:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6061:24:0"
											},
											{
												"assignments": [
													599
												],
												"declarations": [
													{
														"constant": false,
														"id": 599,
														"name": "balance0",
														"nodeType": "VariableDeclaration",
														"scope": 735,
														"src": "6141:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 598,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6141:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 608,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 605,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2199,
																	"src": "6191:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DexPair_$1048",
																		"typeString": "contract DexPair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DexPair_$1048",
																		"typeString": "contract DexPair"
																	}
																],
																"id": 604,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6183:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6183:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 601,
																	"name": "_token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 591,
																	"src": "6164:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 600,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1517,
																"src": "6157:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1517_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6157:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1517",
																"typeString": "contract IERC20"
															}
														},
														"id": 603,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1478,
														"src": "6157:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6157:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6141:56:0"
											},
											{
												"assignments": [
													610
												],
												"declarations": [
													{
														"constant": false,
														"id": 610,
														"name": "balance1",
														"nodeType": "VariableDeclaration",
														"scope": 735,
														"src": "6207:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 609,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6207:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 619,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 616,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2199,
																	"src": "6257:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DexPair_$1048",
																		"typeString": "contract DexPair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DexPair_$1048",
																		"typeString": "contract DexPair"
																	}
																],
																"id": 615,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6249:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6249:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 612,
																	"name": "_token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 595,
																	"src": "6230:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 611,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1517,
																"src": "6223:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1517_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6223:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1517",
																"typeString": "contract IERC20"
															}
														},
														"id": 614,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1478,
														"src": "6223:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6223:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6207:56:0"
											},
											{
												"assignments": [
													621
												],
												"declarations": [
													{
														"constant": false,
														"id": 621,
														"name": "liquidity",
														"nodeType": "VariableDeclaration",
														"scope": 735,
														"src": "6273:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 620,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6273:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 627,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 622,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "6290:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 626,
													"indexExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 624,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2199,
																"src": "6308:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_DexPair_$1048",
																	"typeString": "contract DexPair"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_DexPair_$1048",
																	"typeString": "contract DexPair"
																}
															],
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6300:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 625,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6300:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6290:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6273:41:0"
											},
											{
												"assignments": [
													629
												],
												"declarations": [
													{
														"constant": false,
														"id": 629,
														"name": "feeOn",
														"nodeType": "VariableDeclaration",
														"scope": 735,
														"src": "6325:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 628,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6325:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 634,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 631,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "6347:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 632,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "6358:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 630,
														"name": "_mintFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "6338:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint112_$_t_uint112_$returns$_t_bool_$",
															"typeString": "function (uint112,uint112) returns (bool)"
														}
													},
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6338:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6325:43:0"
											},
											{
												"assignments": [
													636
												],
												"declarations": [
													{
														"constant": false,
														"id": 636,
														"name": "_totalSupply",
														"nodeType": "VariableDeclaration",
														"scope": 735,
														"src": "6378:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 635,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6378:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 638,
												"initialValue": {
													"argumentTypes": null,
													"id": 637,
													"name": "totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1068,
													"src": "6398:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6378:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 639,
														"name": "amount0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 579,
														"src": "6497:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 645,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 642,
																	"name": "balance0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 599,
																	"src": "6521:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 640,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 621,
																	"src": "6507:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2109,
																"src": "6507:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6507:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 644,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "6533:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6507:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6497:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 647,
												"nodeType": "ExpressionStatement",
												"src": "6497:48:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 648,
														"name": "amount1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "6603:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 654,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 651,
																	"name": "balance1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 610,
																	"src": "6627:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 649,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 621,
																	"src": "6613:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2109,
																"src": "6613:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6613:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 653,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "6639:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6613:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6603:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 656,
												"nodeType": "ExpressionStatement",
												"src": "6603:48:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 660,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 658,
																	"name": "amount0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 579,
																	"src": "6717:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6727:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6717:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 663,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 661,
																	"name": "amount1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 581,
																	"src": "6732:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6742:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6732:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "6717:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a20494e53554646494349454e545f4c49515549444954595f4255524e4544",
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6745:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6c050b0a8d3f2d18d11271ee0a551b7748437b8fa9a6165c561190d34a2947d6",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_LIQUIDITY_BURNED\""
															},
															"value": "Pancake: INSUFFICIENT_LIQUIDITY_BURNED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6c050b0a8d3f2d18d11271ee0a551b7748437b8fa9a6165c561190d34a2947d6",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_LIQUIDITY_BURNED\""
															}
														],
														"id": 657,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2170,
															2171
														],
														"referencedDeclaration": 2171,
														"src": "6709:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6709:77:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 667,
												"nodeType": "ExpressionStatement",
												"src": "6709:77:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 670,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2199,
																	"src": "6810:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DexPair_$1048",
																		"typeString": "contract DexPair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DexPair_$1048",
																		"typeString": "contract DexPair"
																	}
																],
																"id": 669,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6802:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 671,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6802:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 672,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "6817:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 668,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1204,
														"src": "6796:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6796:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 674,
												"nodeType": "ExpressionStatement",
												"src": "6796:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 676,
															"name": "_token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 591,
															"src": "6851:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 677,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "6860:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 678,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "6864:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 675,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 136,
														"src": "6837:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6837:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 680,
												"nodeType": "ExpressionStatement",
												"src": "6837:35:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 682,
															"name": "_token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "6896:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 683,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "6905:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 684,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "6909:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 681,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 136,
														"src": "6882:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6882:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 686,
												"nodeType": "ExpressionStatement",
												"src": "6882:35:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 687,
														"name": "balance0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "6927:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 693,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2199,
																		"src": "6972:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_DexPair_$1048",
																			"typeString": "contract DexPair"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_DexPair_$1048",
																			"typeString": "contract DexPair"
																		}
																	],
																	"id": 692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6964:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6964:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 689,
																		"name": "_token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 591,
																		"src": "6945:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 688,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1517,
																	"src": "6938:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$1517_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6938:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1517",
																	"typeString": "contract IERC20"
																}
															},
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1478,
															"src": "6938:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 695,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6938:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6927:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 697,
												"nodeType": "ExpressionStatement",
												"src": "6927:51:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 698,
														"name": "balance1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 610,
														"src": "6988:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 704,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2199,
																		"src": "7033:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_DexPair_$1048",
																			"typeString": "contract DexPair"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_DexPair_$1048",
																			"typeString": "contract DexPair"
																		}
																	],
																	"id": 703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7025:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7025:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 700,
																		"name": "_token1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 595,
																		"src": "7006:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 699,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1517,
																	"src": "6999:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$1517_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 701,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6999:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1517",
																	"typeString": "contract IERC20"
																}
															},
															"id": 702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1478,
															"src": "6999:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6999:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6988:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 708,
												"nodeType": "ExpressionStatement",
												"src": "6988:51:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 710,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "7058:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 711,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "7068:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 712,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "7078:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 713,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "7089:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 709,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "7050:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint112_$_t_uint112_$returns$__$",
															"typeString": "function (uint256,uint256,uint112,uint112)"
														}
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7050:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 715,
												"nodeType": "ExpressionStatement",
												"src": "7050:49:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 716,
													"name": "feeOn",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 629,
													"src": "7113:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 726,
												"nodeType": "IfStatement",
												"src": "7109:47:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"id": 724,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 717,
															"name": "kLast",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 50,
															"src": "7120:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 722,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 42,
																	"src": "7147:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 719,
																			"name": "reserve0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 40,
																			"src": "7133:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		],
																		"id": 718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7128:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": "uint"
																	},
																	"id": 720,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7128:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2109,
																"src": "7128:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7128:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7120:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 725,
													"nodeType": "ExpressionStatement",
													"src": "7120:36:0"
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 728,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2167,
																"src": "7216:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "7216:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 730,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "7228:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 731,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "7237:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 732,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "7246:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 727,
														"name": "Burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															154
														],
														"referencedDeclaration": 154,
														"src": "7211:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,uint256,address)"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7211:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 734,
												"nodeType": "EmitStatement",
												"src": "7206:43:0"
											}
										]
									},
									"documentation": null,
									"id": 736,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 577,
											"modifierName": {
												"argumentTypes": null,
												"id": 576,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 72,
												"src": "5849:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "5849:4:0"
										}
									],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "5828:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5828:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5827:12:0"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "5863:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 578,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5863:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "5877:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 580,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5877:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5862:28:0"
									},
									"scope": 1048,
									"src": "5814:1442:0",
									"stateMutability": "nonpayable",
									"superFunction": 1932,
									"visibility": "external"
								},
								{
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "7460:1761:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 752,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 750,
																	"name": "amount0Out",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 738,
																	"src": "7478:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 751,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7491:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7478:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 755,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 753,
																	"name": "amount1Out",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 740,
																	"src": "7496:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7509:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7496:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7478:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a20494e53554646494349454e545f4f55545055545f414d4f554e54",
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7512:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c654718515b5f98052eb92744d97d32cccabf6e8b2bae886738591c9b906cfd8",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_OUTPUT_AMOUNT\""
															},
															"value": "Pancake: INSUFFICIENT_OUTPUT_AMOUNT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c654718515b5f98052eb92744d97d32cccabf6e8b2bae886738591c9b906cfd8",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_OUTPUT_AMOUNT\""
															}
														],
														"id": 749,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2170,
															2171
														],
														"referencedDeclaration": 2171,
														"src": "7470:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7470:80:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 759,
												"nodeType": "ExpressionStatement",
												"src": "7470:80:0"
											},
											{
												"assignments": [
													761,
													763,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"name": "_reserve0",
														"nodeType": "VariableDeclaration",
														"scope": 971,
														"src": "7561:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 760,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "7561:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 763,
														"name": "_reserve1",
														"nodeType": "VariableDeclaration",
														"scope": 971,
														"src": "7580:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 762,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "7580:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 766,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 764,
														"name": "getReserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "7602:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
															"typeString": "function () view returns (uint112,uint112,uint32)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7602:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
														"typeString": "tuple(uint112,uint112,uint32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7560:55:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 768,
																	"name": "amount0Out",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 738,
																	"src": "7648:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 769,
																	"name": "_reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "7661:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "7648:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 771,
																	"name": "amount1Out",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 740,
																	"src": "7674:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 772,
																	"name": "_reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 763,
																	"src": "7687:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "7674:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7648:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a20494e53554646494349454e545f4c4951554944495459",
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7698:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_410624995b1b083dcf6f8603df497c85feb7b93fc33473e1167ca929c6d9b9e6",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_LIQUIDITY\""
															},
															"value": "Pancake: INSUFFICIENT_LIQUIDITY"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_410624995b1b083dcf6f8603df497c85feb7b93fc33473e1167ca929c6d9b9e6",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_LIQUIDITY\""
															}
														],
														"id": 767,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2170,
															2171
														],
														"referencedDeclaration": 2171,
														"src": "7640:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7640:92:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 777,
												"nodeType": "ExpressionStatement",
												"src": "7640:92:0"
											},
											{
												"assignments": [
													779
												],
												"declarations": [
													{
														"constant": false,
														"id": 779,
														"name": "balance0",
														"nodeType": "VariableDeclaration",
														"scope": 971,
														"src": "7743:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 778,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7743:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 780,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "7743:13:0"
											},
											{
												"assignments": [
													782
												],
												"declarations": [
													{
														"constant": false,
														"id": 782,
														"name": "balance1",
														"nodeType": "VariableDeclaration",
														"scope": 971,
														"src": "7766:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 781,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7766:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 783,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "7766:13:0"
											},
											{
												"id": 861,
												"nodeType": "Block",
												"src": "7789:635:0",
												"statements": [
													{
														"assignments": [
															785
														],
														"declarations": [
															{
																"constant": false,
																"id": 785,
																"name": "_token0",
																"nodeType": "VariableDeclaration",
																"scope": 861,
																"src": "7854:15:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"typeName": {
																	"id": 784,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7854:7:0",
																	"stateMutability": "nonpayable",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"value": null,
																"visibility": "internal"
															}
														],
														"id": 787,
														"initialValue": {
															"argumentTypes": null,
															"id": 786,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "7872:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "7854:24:0"
													},
													{
														"assignments": [
															789
														],
														"declarations": [
															{
																"constant": false,
																"id": 789,
																"name": "_token1",
																"nodeType": "VariableDeclaration",
																"scope": 861,
																"src": "7888:15:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"typeName": {
																	"id": 788,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7888:7:0",
																	"stateMutability": "nonpayable",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"value": null,
																"visibility": "internal"
															}
														],
														"id": 791,
														"initialValue": {
															"argumentTypes": null,
															"id": 790,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 38,
															"src": "7906:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "7888:24:0"
													},
													{
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 795,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 793,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 742,
																			"src": "7930:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 794,
																			"name": "_token0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 785,
																			"src": "7936:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "7930:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 798,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 796,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 742,
																			"src": "7947:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 797,
																			"name": "_token1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 789,
																			"src": "7953:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "7947:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "7930:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "50616e63616b653a20494e56414c49445f544f",
																	"id": 800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7962:21:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2d7663edc966955a2d1409fdc782de8590859b8600a8a34482f57bae932ffa4e",
																		"typeString": "literal_string \"Pancake: INVALID_TO\""
																	},
																	"value": "Pancake: INVALID_TO"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2d7663edc966955a2d1409fdc782de8590859b8600a8a34482f57bae932ffa4e",
																		"typeString": "literal_string \"Pancake: INVALID_TO\""
																	}
																],
																"id": 792,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2170,
																	2171
																],
																"referencedDeclaration": 2171,
																"src": "7922:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7922:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 802,
														"nodeType": "ExpressionStatement",
														"src": "7922:62:0"
													},
													{
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 803,
																"name": "amount0Out",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 738,
																"src": "7998:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 804,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8011:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7998:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": null,
														"id": 812,
														"nodeType": "IfStatement",
														"src": "7994:58:0",
														"trueBody": {
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 807,
																		"name": "_token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 785,
																		"src": "8028:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 808,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 742,
																		"src": "8037:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 809,
																		"name": "amount0Out",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 738,
																		"src": "8041:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 806,
																	"name": "_safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 136,
																	"src": "8014:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8014:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 811,
															"nodeType": "ExpressionStatement",
															"src": "8014:38:0"
														}
													},
													{
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 813,
																"name": "amount1Out",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 740,
																"src": "8100:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 814,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8113:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8100:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": null,
														"id": 822,
														"nodeType": "IfStatement",
														"src": "8096:58:0",
														"trueBody": {
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 817,
																		"name": "_token1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 789,
																		"src": "8130:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 818,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 742,
																		"src": "8139:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 819,
																		"name": "amount1Out",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 740,
																		"src": "8143:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 816,
																	"name": "_safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 136,
																	"src": "8116:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 820,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8116:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 821,
															"nodeType": "ExpressionStatement",
															"src": "8116:38:0"
														}
													},
													{
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 823,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 744,
																	"src": "8202:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																},
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "8202:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8216:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8202:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": null,
														"id": 838,
														"nodeType": "IfStatement",
														"src": "8198:93:0",
														"trueBody": {
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 831,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2167,
																			"src": "8250:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "8250:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 833,
																		"name": "amount0Out",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 738,
																		"src": "8262:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 834,
																		"name": "amount1Out",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 740,
																		"src": "8274:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 835,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 744,
																		"src": "8286:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 828,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 742,
																				"src": "8234:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 827,
																			"name": "IPancakeCallee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1531,
																			"src": "8219:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IPancakeCallee_$1531_$",
																				"typeString": "type(contract IPancakeCallee)"
																			}
																		},
																		"id": 829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8219:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IPancakeCallee_$1531",
																			"typeString": "contract IPancakeCallee"
																		}
																	},
																	"id": 830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "pancakeCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1530,
																	"src": "8219:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (address,uint256,uint256,bytes memory) external"
																	}
																},
																"id": 836,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8219:72:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 837,
															"nodeType": "ExpressionStatement",
															"src": "8219:72:0"
														}
													},
													{
														"expression": {
															"argumentTypes": null,
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"argumentTypes": null,
																"id": 839,
																"name": "balance0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "8301:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 845,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2199,
																				"src": "8346:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_DexPair_$1048",
																					"typeString": "contract DexPair"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_DexPair_$1048",
																					"typeString": "contract DexPair"
																				}
																			],
																			"id": 844,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8338:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8338:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 841,
																				"name": "_token0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 785,
																				"src": "8319:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 840,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1517,
																			"src": "8312:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1517_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8312:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1517",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1478,
																	"src": "8312:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8312:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8301:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 849,
														"nodeType": "ExpressionStatement",
														"src": "8301:51:0"
													},
													{
														"expression": {
															"argumentTypes": null,
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"argumentTypes": null,
																"id": 850,
																"name": "balance1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 782,
																"src": "8362:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 856,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2199,
																				"src": "8407:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_DexPair_$1048",
																					"typeString": "contract DexPair"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_DexPair_$1048",
																					"typeString": "contract DexPair"
																				}
																			],
																			"id": 855,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8399:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8399:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 852,
																				"name": "_token1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 789,
																				"src": "8380:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 851,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1517,
																			"src": "8373:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1517_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 853,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8373:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1517",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 854,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1478,
																	"src": "8373:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8373:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8362:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 860,
														"nodeType": "ExpressionStatement",
														"src": "8362:51:0"
													}
												]
											},
											{
												"assignments": [
													863
												],
												"declarations": [
													{
														"constant": false,
														"id": 863,
														"name": "amount0In",
														"nodeType": "VariableDeclaration",
														"scope": 971,
														"src": "8433:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 862,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8433:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 877,
												"initialValue": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 868,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 864,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "8450:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 865,
																"name": "_reserve0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 761,
																"src": "8461:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"id": 866,
																"name": "amount0Out",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 738,
																"src": "8473:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8461:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8450:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 875,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8524:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8450:75:0",
													"trueExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 874,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 869,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "8486:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 870,
																		"name": "_reserve0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 761,
																		"src": "8498:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint112",
																			"typeString": "uint112"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 871,
																		"name": "amount0Out",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 738,
																		"src": "8510:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8498:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 873,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8497:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8486:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8433:92:0"
											},
											{
												"assignments": [
													879
												],
												"declarations": [
													{
														"constant": false,
														"id": 879,
														"name": "amount1In",
														"nodeType": "VariableDeclaration",
														"scope": 971,
														"src": "8535:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 878,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8535:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 893,
												"initialValue": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 884,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 880,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "8552:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 883,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 881,
																"name": "_reserve1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 763,
																"src": "8563:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"id": 882,
																"name": "amount1Out",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 740,
																"src": "8575:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8563:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8552:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 891,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8626:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8552:75:0",
													"trueExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 890,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 885,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "8588:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 888,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 886,
																		"name": "_reserve1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 763,
																		"src": "8600:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint112",
																			"typeString": "uint112"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 887,
																		"name": "amount1Out",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 740,
																		"src": "8612:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8600:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 889,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8599:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8588:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8535:92:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 895,
																	"name": "amount0In",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 863,
																	"src": "8645:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8657:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8645:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 900,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 898,
																	"name": "amount1In",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 879,
																	"src": "8662:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 899,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8674:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8662:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "8645:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a20494e53554646494349454e545f494e5055545f414d4f554e54",
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8677:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b0a6dd250a09c1cd083ad4bf9f97424665d60e7bc0a208a1151c7d0051999c",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_INPUT_AMOUNT\""
															},
															"value": "Pancake: INSUFFICIENT_INPUT_AMOUNT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b0a6dd250a09c1cd083ad4bf9f97424665d60e7bc0a208a1151c7d0051999c",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_INPUT_AMOUNT\""
															}
														],
														"id": 894,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2170,
															2171
														],
														"referencedDeclaration": 2171,
														"src": "8637:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8637:77:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 904,
												"nodeType": "ExpressionStatement",
												"src": "8637:77:0"
											},
											{
												"id": 953,
												"nodeType": "Block",
												"src": "8724:350:0",
												"statements": [
													{
														"assignments": [
															906
														],
														"declarations": [
															{
																"constant": false,
																"id": 906,
																"name": "balance0Adjusted",
																"nodeType": "VariableDeclaration",
																"scope": 953,
																"src": "8798:21:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 905,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "8798:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"value": null,
																"visibility": "internal"
															}
														],
														"id": 918,
														"initialValue": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "3235",
																					"id": 914,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8861:2:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_25_by_1",
																						"typeString": "int_const 25"
																					},
																					"value": "25"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_25_by_1",
																						"typeString": "int_const 25"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 912,
																					"name": "amount0In",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 863,
																					"src": "8847:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 913,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2109,
																				"src": "8847:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 915,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8847:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "3130303030",
																					"id": 909,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8836:5:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					},
																					"value": "10000"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 907,
																					"name": "balance0",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 779,
																					"src": "8823:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 908,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2109,
																				"src": "8823:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 910,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8823:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 911,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2081,
																		"src": "8823:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 916,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8823:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 917,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8822:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8798:68:0"
													},
													{
														"assignments": [
															920
														],
														"declarations": [
															{
																"constant": false,
																"id": 920,
																"name": "balance1Adjusted",
																"nodeType": "VariableDeclaration",
																"scope": 953,
																"src": "8876:21:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 919,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "8876:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"value": null,
																"visibility": "internal"
															}
														],
														"id": 932,
														"initialValue": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "3235",
																					"id": 928,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8939:2:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_25_by_1",
																						"typeString": "int_const 25"
																					},
																					"value": "25"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_25_by_1",
																						"typeString": "int_const 25"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 926,
																					"name": "amount1In",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 879,
																					"src": "8925:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 927,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2109,
																				"src": "8925:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 929,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8925:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "3130303030",
																					"id": 923,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8914:5:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					},
																					"value": "10000"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 921,
																					"name": "balance1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 782,
																					"src": "8901:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 922,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2109,
																				"src": "8901:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8901:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 925,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2081,
																		"src": "8901:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8901:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 931,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8900:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8876:68:0"
													},
													{
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 936,
																				"name": "balance1Adjusted",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 920,
																				"src": "8983:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 934,
																				"name": "balance0Adjusted",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 906,
																				"src": "8962:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 935,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2109,
																			"src": "8962:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 937,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8962:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_rational_100000000_by_1",
																					"typeString": "int_const 100000000"
																				},
																				"id": 947,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"hexValue": "3130303030",
																					"id": 945,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9039:5:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					},
																					"value": "10000"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "32",
																					"id": 946,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9046:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "9039:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100000000_by_1",
																					"typeString": "int_const 100000000"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_100000000_by_1",
																					"typeString": "int_const 100000000"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 942,
																						"name": "_reserve1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 763,
																						"src": "9024:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"id": 939,
																								"name": "_reserve0",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 761,
																								"src": "9009:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint112",
																									"typeString": "uint112"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint112",
																									"typeString": "uint112"
																								}
																							],
																							"id": 938,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "9004:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": "uint"
																						},
																						"id": 940,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "9004:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 941,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2109,
																					"src": "9004:19:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 943,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9004:30:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 944,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2109,
																			"src": "9004:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 948,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9004:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8962:86:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "50616e63616b653a204b",
																	"id": 950,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9050:12:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_36f7756737193e2c474efd71f44e92bf4269370921f82a4ea4d5e4952e46633b",
																		"typeString": "literal_string \"Pancake: K\""
																	},
																	"value": "Pancake: K"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_36f7756737193e2c474efd71f44e92bf4269370921f82a4ea4d5e4952e46633b",
																		"typeString": "literal_string \"Pancake: K\""
																	}
																],
																"id": 933,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2170,
																	2171
																],
																"referencedDeclaration": 2171,
																"src": "8954:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8954:109:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 952,
														"nodeType": "ExpressionStatement",
														"src": "8954:109:0"
													}
												]
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 955,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "9092:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 956,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "9102:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 957,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "9112:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 958,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 763,
															"src": "9123:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 954,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "9084:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint112_$_t_uint112_$returns$__$",
															"typeString": "function (uint256,uint256,uint112,uint112)"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9084:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 960,
												"nodeType": "ExpressionStatement",
												"src": "9084:49:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 962,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2167,
																"src": "9153:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "9153:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 964,
															"name": "amount0In",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "9165:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 965,
															"name": "amount1In",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "9176:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 966,
															"name": "amount0Out",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "9187:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 967,
															"name": "amount1Out",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "9199:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 968,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "9211:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 961,
														"name": "Swap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															168
														],
														"referencedDeclaration": 168,
														"src": "9148:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256,uint256,address)"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9148:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 970,
												"nodeType": "EmitStatement",
												"src": "9143:71:0"
											}
										]
									},
									"documentation": null,
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 747,
											"modifierName": {
												"argumentTypes": null,
												"id": 746,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 72,
												"src": "7455:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "7455:4:0"
										}
									],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "7379:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 737,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7379:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "7396:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 739,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7396:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "7413:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7413:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "7425:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 743,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7425:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7378:67:0"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7460:0:0"
									},
									"scope": 1048,
									"src": "7365:1856:0",
									"stateMutability": "nonpayable",
									"superFunction": 1943,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1019,
										"nodeType": "Block",
										"src": "9307:289:0",
										"statements": [
											{
												"assignments": [
													980
												],
												"declarations": [
													{
														"constant": false,
														"id": 980,
														"name": "_token0",
														"nodeType": "VariableDeclaration",
														"scope": 1019,
														"src": "9317:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 979,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9317:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 982,
												"initialValue": {
													"argumentTypes": null,
													"id": 981,
													"name": "token0",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 36,
													"src": "9335:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9317:24:0"
											},
											{
												"assignments": [
													984
												],
												"declarations": [
													{
														"constant": false,
														"id": 984,
														"name": "_token1",
														"nodeType": "VariableDeclaration",
														"scope": 1019,
														"src": "9366:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 983,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9366:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 986,
												"initialValue": {
													"argumentTypes": null,
													"id": 985,
													"name": "token1",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 38,
													"src": "9384:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9366:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 988,
															"name": "_token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "9429:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 989,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "9438:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 999,
																	"name": "reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "9487:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 995,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2199,
																					"src": "9476:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_DexPair_$1048",
																						"typeString": "contract DexPair"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_DexPair_$1048",
																						"typeString": "contract DexPair"
																					}
																				],
																				"id": 994,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "9468:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": "address"
																			},
																			"id": 996,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9468:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 991,
																					"name": "_token0",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 980,
																					"src": "9449:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 990,
																				"name": "IERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1517,
																				"src": "9442:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC20_$1517_$",
																					"typeString": "type(contract IERC20)"
																				}
																			},
																			"id": 992,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9442:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1517",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 993,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1478,
																		"src": "9442:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 997,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9442:40:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 998,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2081,
																"src": "9442:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9442:54:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 987,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 136,
														"src": "9415:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9415:82:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1002,
												"nodeType": "ExpressionStatement",
												"src": "9415:82:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1004,
															"name": "_token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "9521:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1005,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "9530:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1015,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 42,
																	"src": "9579:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1011,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2199,
																					"src": "9568:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_DexPair_$1048",
																						"typeString": "contract DexPair"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_DexPair_$1048",
																						"typeString": "contract DexPair"
																					}
																				],
																				"id": 1010,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "9560:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": "address"
																			},
																			"id": 1012,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9560:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1007,
																					"name": "_token1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 984,
																					"src": "9541:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1006,
																				"name": "IERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1517,
																				"src": "9534:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC20_$1517_$",
																					"typeString": "type(contract IERC20)"
																				}
																			},
																			"id": 1008,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9534:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1517",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1009,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1478,
																		"src": "9534:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 1013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9534:40:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1014,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2081,
																"src": "9534:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9534:54:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1003,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 136,
														"src": "9507:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9507:82:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1018,
												"nodeType": "ExpressionStatement",
												"src": "9507:82:0"
											}
										]
									},
									"documentation": null,
									"id": 1020,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 977,
											"modifierName": {
												"argumentTypes": null,
												"id": 976,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 72,
												"src": "9302:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "9302:4:0"
										}
									],
									"name": "skim",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "9281:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9281:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9280:12:0"
									},
									"returnParameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9307:0:0"
									},
									"scope": 1048,
									"src": "9267:329:0",
									"stateMutability": "nonpayable",
									"superFunction": 1948,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1046,
										"nodeType": "Block",
										"src": "9672:126:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1031,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2199,
																			"src": "9723:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_DexPair_$1048",
																				"typeString": "contract DexPair"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_DexPair_$1048",
																				"typeString": "contract DexPair"
																			}
																		],
																		"id": 1030,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9715:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 1032,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9715:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1027,
																			"name": "token0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 36,
																			"src": "9697:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1026,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1517,
																		"src": "9690:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$1517_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 1028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9690:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1517",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1478,
																"src": "9690:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9690:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1039,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2199,
																			"src": "9764:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_DexPair_$1048",
																				"typeString": "contract DexPair"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_DexPair_$1048",
																				"typeString": "contract DexPair"
																			}
																		],
																		"id": 1038,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9756:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 1040,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9756:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1035,
																			"name": "token1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 38,
																			"src": "9738:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1034,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1517,
																		"src": "9731:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$1517_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 1036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9731:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1517",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1478,
																"src": "9731:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9731:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1042,
															"name": "reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "9772:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 1043,
															"name": "reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 42,
															"src": "9782:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 1025,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "9682:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint112_$_t_uint112_$returns$__$",
															"typeString": "function (uint256,uint256,uint112,uint112)"
														}
													},
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9682:109:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1045,
												"nodeType": "ExpressionStatement",
												"src": "9682:109:0"
											}
										]
									},
									"documentation": null,
									"id": 1047,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1023,
											"modifierName": {
												"argumentTypes": null,
												"id": 1022,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 72,
												"src": "9667:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "9667:4:0"
										}
									],
									"name": "sync",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9655:2:0"
									},
									"returnParameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9672:0:0"
									},
									"scope": 1048,
									"src": "9642:156:0",
									"stateMutability": "nonpayable",
									"superFunction": 1951,
									"visibility": "external"
								}
							],
							"scope": 1049,
							"src": "318:9482:0"
						}
					],
					"src": "36:9765:0"
				},
				"id": 0
			},
			"DexSwap/PancakeERC20.sol": {
				"ast": {
					"absolutePath": "DexSwap/PancakeERC20.sol",
					"exportedSymbols": {
						"PancakeERC20": [
							1433
						]
					},
					"id": 1434,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1050,
							"literals": [
								"solidity",
								"=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:1"
						},
						{
							"absolutePath": "DexSwap/interfaces/IPancakeERC20.sol",
							"file": "./interfaces/IPancakeERC20.sol",
							"id": 1051,
							"nodeType": "ImportDirective",
							"scope": 1434,
							"sourceUnit": 1650,
							"src": "62:40:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "DexSwap/libraries/SafeMath.sol",
							"file": "./libraries/SafeMath.sol",
							"id": 1052,
							"nodeType": "ImportDirective",
							"scope": 1434,
							"sourceUnit": 2111,
							"src": "103:34:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1053,
										"name": "IPancakeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1649,
										"src": "164:13:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPancakeERC20_$1649",
											"typeString": "contract IPancakeERC20"
										}
									},
									"id": 1054,
									"nodeType": "InheritanceSpecifier",
									"src": "164:13:1"
								}
							],
							"contractDependencies": [
								1649
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1433,
							"linearizedBaseContracts": [
								1433,
								1649
							],
							"name": "PancakeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1057,
									"libraryName": {
										"contractScope": null,
										"id": 1055,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2110,
										"src": "190:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$2110",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "184:27:1",
									"typeName": {
										"id": 1056,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "203:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 1060,
									"name": "name",
									"nodeType": "VariableDeclaration",
									"scope": 1433,
									"src": "217:43:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 1058,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "217:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "44657853776170204c5073",
										"id": 1059,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "247:13:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2e1074c3d07633e155da54b471df7d2db05e930cf983650fa82ae075d6880ddc",
											"typeString": "literal_string \"DexSwap LPs\""
										},
										"value": "DexSwap LPs"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1063,
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"scope": 1433,
									"src": "266:44:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 1061,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "266:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "446578537761702d4c50",
										"id": 1062,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "298:12:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_1ff6a12404291b42166c0359480f32daa809e0f2a8d1d3508198adef1175fd25",
											"typeString": "literal_string \"DexSwap-LP\""
										},
										"value": "DexSwap-LP"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1066,
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"scope": 1433,
									"src": "316:35:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1064,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "316:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3138",
										"id": 1065,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "349:2:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1068,
									"name": "totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 1433,
									"src": "357:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1067,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "357:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1072,
									"name": "balanceOf",
									"nodeType": "VariableDeclaration",
									"scope": 1433,
									"src": "389:44:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1071,
										"keyType": {
											"id": 1069,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "397:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "389:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1070,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "408:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1078,
									"name": "allowance",
									"nodeType": "VariableDeclaration",
									"scope": 1433,
									"src": "439:64:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1077,
										"keyType": {
											"id": 1073,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "447:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "439:47:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 1076,
											"keyType": {
												"id": 1074,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "466:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "458:27:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 1075,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "477:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1080,
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "VariableDeclaration",
									"scope": 1433,
									"src": "510:31:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1079,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "510:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1083,
									"name": "PERMIT_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"scope": 1433,
									"src": "651:108:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1081,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "651:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307836653731656461653132623162393766346431663630333730666566313031303566613266616165303132363131346131363963363438343564363132366339",
										"id": 1082,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "693:66:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_49955707469362902507454157297736832118868343942642399513960811609542965143241_by_1",
											"typeString": "int_const 4995...(69 digits omitted)...3241"
										},
										"value": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1087,
									"name": "nonces",
									"nodeType": "VariableDeclaration",
									"scope": 1433,
									"src": "765:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1086,
										"keyType": {
											"id": 1084,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "773:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "765:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1085,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "784:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1095,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1089,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "828:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "828:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "851:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1090,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "851:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1093,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "876:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1092,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "827:63:1"
									},
									"src": "813:78:1"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1103,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1097,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "911:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1096,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "911:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1099,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "933:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1098,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "933:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1101,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "953:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "953:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "910:57:1"
									},
									"src": "896:72:1"
								},
								{
									"body": {
										"id": 1135,
										"nodeType": "Block",
										"src": "995:426:1",
										"statements": [
											{
												"assignments": [
													1107
												],
												"declarations": [
													{
														"constant": false,
														"id": 1107,
														"name": "chainId",
														"nodeType": "VariableDeclaration",
														"scope": 1135,
														"src": "1005:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1106,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1005:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1108,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "1005:15:1"
											},
											{
												"externalReferences": [
													{
														"chainId": {
															"declaration": 1107,
															"isOffset": false,
															"isSlot": false,
															"src": "1053:7:1",
															"valueSize": 1
														}
													}
												],
												"id": 1109,
												"nodeType": "InlineAssembly",
												"operations": "{ chainId := chainid() }",
												"src": "1030:51:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1110,
														"name": "DOMAIN_SEPARATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "1090:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
																				"id": 1115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1170:84:1",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				},
																				"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				}
																			],
																			"id": 1114,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2161,
																			"src": "1160:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 1116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1160:95:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1119,
																						"name": "name",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1060,
																						"src": "1289:4:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_string_memory",
																							"typeString": "string memory"
																						}
																					],
																					"id": 1118,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1283:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": "bytes"
																				},
																				"id": 1120,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1283:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 1117,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2161,
																			"src": "1273:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 1121,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1273:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"hexValue": "31",
																						"id": 1124,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1329:3:1",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						},
																						"value": "1"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						}
																					],
																					"id": 1123,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1323:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": "bytes"
																				},
																				"id": 1125,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1323:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 1122,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2161,
																			"src": "1313:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 1126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1313:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1127,
																		"name": "chainId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1107,
																		"src": "1352:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1129,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2187,
																				"src": "1385:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_PancakeERC20_$1433",
																					"typeString": "contract PancakeERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_PancakeERC20_$1433",
																					"typeString": "contract PancakeERC20"
																				}
																			],
																			"id": 1128,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1377:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 1130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1377:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1112,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2154,
																		"src": "1132:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 1113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encode",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1132:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 1131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1132:272:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1111,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2161,
															"src": "1109:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1132,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1109:305:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1090:324:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1134,
												"nodeType": "ExpressionStatement",
												"src": "1090:324:1"
											}
										]
									},
									"documentation": null,
									"id": 1136,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "985:2:1"
									},
									"returnParameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "995:0:1"
									},
									"scope": 1433,
									"src": "974:447:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1169,
										"nodeType": "Block",
										"src": "1478:149:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1143,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1068,
														"src": "1488:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1146,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1140,
																"src": "1518:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1144,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1068,
																"src": "1502:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2059,
															"src": "1502:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1502:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1488:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1149,
												"nodeType": "ExpressionStatement",
												"src": "1488:36:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1150,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1072,
															"src": "1534:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1152,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1151,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "1544:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1534:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1157,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1140,
																"src": "1568:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1153,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1072,
																	"src": "1550:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1155,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1154,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1138,
																	"src": "1560:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1550:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2059,
															"src": "1550:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1550:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1534:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1160,
												"nodeType": "ExpressionStatement",
												"src": "1534:40:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1606:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1162,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1598:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1164,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1598:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1165,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "1610:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1166,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1140,
															"src": "1614:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1161,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1103
														],
														"referencedDeclaration": 1103,
														"src": "1589:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1589:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1168,
												"nodeType": "EmitStatement",
												"src": "1584:36:1"
											}
										]
									},
									"documentation": null,
									"id": 1170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1138,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "1442:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1442:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1140,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "1454:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1454:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1441:27:1"
									},
									"returnParameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1478:0:1"
									},
									"scope": 1433,
									"src": "1427:200:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1203,
										"nodeType": "Block",
										"src": "1686:155:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1177,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1072,
															"src": "1696:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1179,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1178,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1172,
															"src": "1706:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1696:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1184,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1174,
																"src": "1734:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1180,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1072,
																	"src": "1714:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1182,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1181,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1172,
																	"src": "1724:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1714:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2081,
															"src": "1714:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1185,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1714:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1696:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1187,
												"nodeType": "ExpressionStatement",
												"src": "1696:44:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1188,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1068,
														"src": "1750:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1191,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1174,
																"src": "1780:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1189,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1068,
																"src": "1764:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2081,
															"src": "1764:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1192,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1764:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1750:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1194,
												"nodeType": "ExpressionStatement",
												"src": "1750:36:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1196,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1172,
															"src": "1810:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1824:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1197,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1816:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1199,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1816:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1200,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1174,
															"src": "1828:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1195,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1103
														],
														"referencedDeclaration": 1103,
														"src": "1801:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1801:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1202,
												"nodeType": "EmitStatement",
												"src": "1796:38:1"
											}
										]
									},
									"documentation": null,
									"id": 1204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "1648:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1648:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1174,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "1662:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1662:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1647:29:1"
									},
									"returnParameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1686:0:1"
									},
									"scope": 1433,
									"src": "1633:208:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1227,
										"nodeType": "Block",
										"src": "1950:96:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1213,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1078,
																"src": "1960:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1216,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1214,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1206,
																"src": "1970:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1960:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1217,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1215,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "1977:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1960:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1218,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1210,
														"src": "1988:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1960:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1220,
												"nodeType": "ExpressionStatement",
												"src": "1960:33:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1222,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1206,
															"src": "2017:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1223,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "2024:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1224,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1210,
															"src": "2033:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1221,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1095
														],
														"referencedDeclaration": 1095,
														"src": "2008:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2008:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1226,
												"nodeType": "EmitStatement",
												"src": "2003:36:1"
											}
										]
									},
									"documentation": null,
									"id": 1228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1206,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "1874:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1208,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "1897:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1897:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1210,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "1922:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1922:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1864:77:1"
									},
									"returnParameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1950:0:1"
									},
									"scope": 1433,
									"src": "1847:199:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1265,
										"nodeType": "Block",
										"src": "2150:151:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1237,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1072,
															"src": "2160:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1239,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1238,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1230,
															"src": "2170:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2160:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1244,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1234,
																"src": "2198:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1240,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1072,
																	"src": "2178:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1242,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1241,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1230,
																	"src": "2188:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2178:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2081,
															"src": "2178:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2178:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2160:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1247,
												"nodeType": "ExpressionStatement",
												"src": "2160:44:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1248,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1072,
															"src": "2214:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1250,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1249,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "2224:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2214:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1255,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1234,
																"src": "2248:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1251,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1072,
																	"src": "2230:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1253,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1252,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1232,
																	"src": "2240:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2230:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2059,
															"src": "2230:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1256,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2230:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2214:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1258,
												"nodeType": "ExpressionStatement",
												"src": "2214:40:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1260,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1230,
															"src": "2278:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1261,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "2284:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1262,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "2288:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1259,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1103
														],
														"referencedDeclaration": 1103,
														"src": "2269:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2269:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1264,
												"nodeType": "EmitStatement",
												"src": "2264:30:1"
											}
										]
									},
									"documentation": null,
									"id": 1266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "2080:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2080:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "2102:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1234,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "2122:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2122:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2070:71:1"
									},
									"returnParameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2150:0:1"
									},
									"scope": 1433,
									"src": "2052:249:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1284,
										"nodeType": "Block",
										"src": "2380:74:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1276,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2167,
																"src": "2399:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2399:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1278,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1268,
															"src": "2411:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1279,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1270,
															"src": "2420:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1275,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "2390:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2390:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1281,
												"nodeType": "ExpressionStatement",
												"src": "2390:36:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1282,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2443:4:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1274,
												"id": 1283,
												"nodeType": "Return",
												"src": "2436:11:1"
											}
										]
									},
									"documentation": null,
									"id": 1285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "2324:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1270,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "2341:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2341:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2323:32:1"
									},
									"returnParameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "2374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1272,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2373:6:1"
									},
									"scope": 1433,
									"src": "2307:147:1",
									"stateMutability": "nonpayable",
									"superFunction": 1594,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1303,
										"nodeType": "Block",
										"src": "2529:70:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1295,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2167,
																"src": "2549:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2549:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1297,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1287,
															"src": "2561:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1298,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1289,
															"src": "2565:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1294,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1266,
														"src": "2539:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2539:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1300,
												"nodeType": "ExpressionStatement",
												"src": "2539:32:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1301,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2588:4:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1293,
												"id": 1302,
												"nodeType": "Return",
												"src": "2581:11:1"
											}
										]
									},
									"documentation": null,
									"id": 1304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "2478:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2478:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1289,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "2490:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2490:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2477:27:1"
									},
									"returnParameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "2523:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1291,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2523:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2522:6:1"
									},
									"scope": 1433,
									"src": "2460:139:1",
									"stateMutability": "nonpayable",
									"superFunction": 1603,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1353,
										"nodeType": "Block",
										"src": "2722:214:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1315,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1078,
																"src": "2736:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1317,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1316,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1306,
																"src": "2746:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2736:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1320,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1318,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2167,
																"src": "2752:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2752:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2736:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "2775:2:1",
																"subExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 1322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2776:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															],
															"id": 1321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2767:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": "uint256"
														},
														"id": 1324,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2767:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2736:42:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1344,
												"nodeType": "IfStatement",
												"src": "2732:141:1",
												"trueBody": {
													"id": 1343,
													"nodeType": "Block",
													"src": "2780:93:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1326,
																			"name": "allowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1078,
																			"src": "2794:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1330,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1327,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1306,
																			"src": "2804:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2794:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1331,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1328,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2167,
																			"src": "2810:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "2810:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2794:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1339,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1310,
																			"src": "2856:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 1332,
																					"name": "allowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1078,
																					"src": "2824:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(address => mapping(address => uint256))"
																					}
																				},
																				"id": 1334,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 1333,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1306,
																					"src": "2834:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2824:15:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1337,
																			"indexExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 1335,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2167,
																					"src": "2840:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1336,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "2840:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2824:27:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1338,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2081,
																		"src": "2824:31:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1340,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2824:38:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2794:68:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1342,
															"nodeType": "ExpressionStatement",
															"src": "2794:68:1"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1346,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1306,
															"src": "2892:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1347,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1308,
															"src": "2898:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1348,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1310,
															"src": "2902:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1345,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1266,
														"src": "2882:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2882:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1350,
												"nodeType": "ExpressionStatement",
												"src": "2882:26:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2925:4:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1314,
												"id": 1352,
												"nodeType": "Return",
												"src": "2918:11:1"
											}
										]
									},
									"documentation": null,
									"id": 1354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "2636:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2636:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1308,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "2658:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2658:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1310,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "2678:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2678:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2626:71:1"
									},
									"returnParameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1313,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "2716:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1312,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2716:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2715:6:1"
									},
									"scope": 1433,
									"src": "2605:331:1",
									"stateMutability": "nonpayable",
									"superFunction": 1614,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1431,
										"nodeType": "Block",
										"src": "3125:543:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1372,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1362,
																"src": "3143:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1373,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2157,
																	"src": "3155:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1374,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3155:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3143:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a2045585049524544",
															"id": 1376,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3172:18:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c94fedce6c17cde8c2120d29d390f27d6964b7aed2ab712d624019c41a3810c1",
																"typeString": "literal_string \"Pancake: EXPIRED\""
															},
															"value": "Pancake: EXPIRED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c94fedce6c17cde8c2120d29d390f27d6964b7aed2ab712d624019c41a3810c1",
																"typeString": "literal_string \"Pancake: EXPIRED\""
															}
														],
														"id": 1371,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2170,
															2171
														],
														"referencedDeclaration": 2171,
														"src": "3135:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3135:56:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1378,
												"nodeType": "ExpressionStatement",
												"src": "3135:56:1"
											},
											{
												"assignments": [
													1380
												],
												"declarations": [
													{
														"constant": false,
														"id": 1380,
														"name": "digest",
														"nodeType": "VariableDeclaration",
														"scope": 1431,
														"src": "3201:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1379,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3201:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1402,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "1901",
																	"id": 1384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3275:10:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"argumentTypes": null,
																	"id": 1385,
																	"name": "DOMAIN_SEPARATOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1080,
																	"src": "3303:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1389,
																					"name": "PERMIT_TYPEHASH",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1083,
																					"src": "3358:15:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1390,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1356,
																					"src": "3375:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1391,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1358,
																					"src": "3382:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1392,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1360,
																					"src": "3391:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1396,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "++",
																					"prefix": false,
																					"src": "3398:15:1",
																					"subExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 1393,
																							"name": "nonces",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1087,
																							"src": "3398:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 1395,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 1394,
																							"name": "owner",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1356,
																							"src": "3405:5:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "3398:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1397,
																					"name": "deadline",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1362,
																					"src": "3415:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1387,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2154,
																					"src": "3347:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1388,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encode",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "3347:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 1398,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3347:77:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 1386,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2161,
																		"src": "3337:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 1399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3337:88:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1382,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2154,
																	"src": "3241:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1383,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3241:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3241:198:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1381,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2161,
														"src": "3218:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3218:231:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3201:248:1"
											},
											{
												"assignments": [
													1404
												],
												"declarations": [
													{
														"constant": false,
														"id": 1404,
														"name": "recoveredAddress",
														"nodeType": "VariableDeclaration",
														"scope": 1431,
														"src": "3459:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1403,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3459:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1411,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1406,
															"name": "digest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1380,
															"src": "3496:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 1407,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1364,
															"src": "3504:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"argumentTypes": null,
															"id": 1408,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1366,
															"src": "3507:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 1409,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1368,
															"src": "3510:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1405,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2159,
														"src": "3486:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 1410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3486:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3459:53:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1417,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1413,
																	"name": "recoveredAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "3530:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3558:1:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3550:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 1416,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3550:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "3530:30:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1418,
																	"name": "recoveredAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "3564:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1419,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1356,
																	"src": "3584:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3564:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3530:59:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a20494e56414c49445f5349474e4154555245",
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3591:28:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_861fe3f25593eb07d57a38fb1b6b0f761f16eb1611a0df03954a734d69fb97bf",
																"typeString": "literal_string \"Pancake: INVALID_SIGNATURE\""
															},
															"value": "Pancake: INVALID_SIGNATURE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_861fe3f25593eb07d57a38fb1b6b0f761f16eb1611a0df03954a734d69fb97bf",
																"typeString": "literal_string \"Pancake: INVALID_SIGNATURE\""
															}
														],
														"id": 1412,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2170,
															2171
														],
														"referencedDeclaration": 2171,
														"src": "3522:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3522:98:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1424,
												"nodeType": "ExpressionStatement",
												"src": "3522:98:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1426,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1356,
															"src": "3639:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1427,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1358,
															"src": "3646:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1428,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1360,
															"src": "3655:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1425,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "3630:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3630:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1430,
												"nodeType": "ExpressionStatement",
												"src": "3630:31:1"
											}
										]
									},
									"documentation": null,
									"id": 1432,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "2967:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2967:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1358,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "2990:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2990:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1360,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "3015:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3015:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1362,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "3038:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3038:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1364,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "3064:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1363,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3064:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1366,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "3081:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1365,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3081:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1368,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "3100:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1367,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2957:158:1"
									},
									"returnParameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3125:0:1"
									},
									"scope": 1433,
									"src": "2942:726:1",
									"stateMutability": "nonpayable",
									"superFunction": 1648,
									"visibility": "external"
								}
							],
							"scope": 1434,
							"src": "139:3531:1"
						}
					],
					"src": "36:3635:1"
				},
				"id": 1
			},
			"DexSwap/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "DexSwap/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1517
						]
					},
					"id": 1518,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1435,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:2"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1517,
							"linearizedBaseContracts": [
								1517
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 1443,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1437,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "100:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "100:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1439,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "123:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "123:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1441,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "148:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "148:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "99:63:2"
									},
									"src": "85:78:2"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1451,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "183:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "183:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1447,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "205:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "205:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1449,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "225:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "225:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "182:57:2"
									},
									"src": "168:72:2"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1456,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "259:2:2"
									},
									"returnParameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1454,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "285:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1453,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "285:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "284:15:2"
									},
									"scope": 1517,
									"src": "246:54:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1461,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "321:2:2"
									},
									"returnParameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1459,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "347:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1458,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "347:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "346:15:2"
									},
									"scope": 1517,
									"src": "306:56:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1466,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "385:2:2"
									},
									"returnParameters": {
										"id": 1465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1464,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "411:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1463,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "411:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "410:7:2"
									},
									"scope": 1517,
									"src": "368:50:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1471,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "444:2:2"
									},
									"returnParameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "470:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "470:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "469:9:2"
									},
									"scope": 1517,
									"src": "424:55:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1478,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1473,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "504:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "504:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "503:15:2"
									},
									"returnParameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1476,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "542:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "542:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "541:9:2"
									},
									"scope": 1517,
									"src": "485:66:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1487,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1480,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "576:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "576:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1482,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "591:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "591:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "575:32:2"
									},
									"returnParameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "631:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "631:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "630:9:2"
									},
									"scope": 1517,
									"src": "557:83:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1496,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1489,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "663:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "663:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1491,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "680:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "680:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "662:32:2"
									},
									"returnParameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1494,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "713:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1493,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "713:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "712:6:2"
									},
									"scope": 1517,
									"src": "646:73:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1505,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1498,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "743:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "743:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1500,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "755:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "755:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "742:27:2"
									},
									"returnParameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1503,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "788:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1502,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "788:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "787:6:2"
									},
									"scope": 1517,
									"src": "725:69:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1516,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1507,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "831:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1509,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "853:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "853:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1511,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "873:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "873:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "821:71:2"
									},
									"returnParameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1514,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "911:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1513,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "911:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "910:6:2"
									},
									"scope": 1517,
									"src": "800:117:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 1518,
							"src": "62:857:2"
						}
					],
					"src": "36:884:2"
				},
				"id": 2
			},
			"DexSwap/interfaces/IPancakeCallee.sol": {
				"ast": {
					"absolutePath": "DexSwap/interfaces/IPancakeCallee.sol",
					"exportedSymbols": {
						"IPancakeCallee": [
							1531
						]
					},
					"id": 1532,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1519,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:3"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1531,
							"linearizedBaseContracts": [
								1531
							],
							"name": "IPancakeCallee",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 1530,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pancakeCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1521,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "123:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "123:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1523,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "147:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "147:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1525,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "172:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "172:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1527,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "197:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1526,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "197:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "113:109:3"
									},
									"returnParameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "231:0:3"
									},
									"scope": 1531,
									"src": "93:139:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 1532,
							"src": "62:172:3"
						}
					],
					"src": "36:199:3"
				},
				"id": 3
			},
			"DexSwap/interfaces/IPancakeERC20.sol": {
				"ast": {
					"absolutePath": "DexSwap/interfaces/IPancakeERC20.sol",
					"exportedSymbols": {
						"IPancakeERC20": [
							1649
						]
					},
					"id": 1650,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1533,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:4"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1649,
							"linearizedBaseContracts": [
								1649
							],
							"name": "IPancakeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 1541,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1535,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "107:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "107:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1537,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "130:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "130:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1539,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "155:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "155:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "106:63:4"
									},
									"src": "92:78:4"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1549,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1543,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "190:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "190:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1545,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "212:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "212:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1547,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "232:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "232:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "189:57:4"
									},
									"src": "175:72:4"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1554,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "266:2:4"
									},
									"returnParameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1552,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "292:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1551,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "292:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "291:15:4"
									},
									"scope": 1649,
									"src": "253:54:4",
									"stateMutability": "pure",
									"superFunction": 1740,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1559,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "328:2:4"
									},
									"returnParameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "354:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1556,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "354:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "353:15:4"
									},
									"scope": 1649,
									"src": "313:56:4",
									"stateMutability": "pure",
									"superFunction": 1745,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1564,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "392:2:4"
									},
									"returnParameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1562,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "418:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1561,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "418:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "417:7:4"
									},
									"scope": 1649,
									"src": "375:50:4",
									"stateMutability": "pure",
									"superFunction": 1750,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1569,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "451:2:4"
									},
									"returnParameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1567,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "477:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "476:9:4"
									},
									"scope": 1649,
									"src": "431:55:4",
									"stateMutability": "view",
									"superFunction": 1755,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1576,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1571,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "511:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "511:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "510:15:4"
									},
									"returnParameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "549:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "549:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "548:9:4"
									},
									"scope": 1649,
									"src": "492:66:4",
									"stateMutability": "view",
									"superFunction": 1762,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1585,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "583:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "583:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1580,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "598:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "598:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "582:32:4"
									},
									"returnParameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1583,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "638:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "638:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "637:9:4"
									},
									"scope": 1649,
									"src": "564:83:4",
									"stateMutability": "view",
									"superFunction": 1771,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1594,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1587,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "670:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1589,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "687:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "669:32:4"
									},
									"returnParameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1592,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "720:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1591,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "720:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "719:6:4"
									},
									"scope": 1649,
									"src": "653:73:4",
									"stateMutability": "nonpayable",
									"superFunction": 1780,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1603,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1596,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "750:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "750:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1598,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "762:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "762:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "749:27:4"
									},
									"returnParameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1601,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "795:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1600,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "795:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "794:6:4"
									},
									"scope": 1649,
									"src": "732:69:4",
									"stateMutability": "nonpayable",
									"superFunction": 1789,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1614,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1605,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "838:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "838:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1607,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "860:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "860:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1609,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "880:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "880:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "828:71:4"
									},
									"returnParameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1612,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "918:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1611,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "918:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "917:6:4"
									},
									"scope": 1649,
									"src": "807:117:4",
									"stateMutability": "nonpayable",
									"superFunction": 1800,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1619,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "955:2:4"
									},
									"returnParameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1617,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "981:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1616,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "981:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "980:9:4"
									},
									"scope": 1649,
									"src": "930:60:4",
									"stateMutability": "view",
									"superFunction": 1805,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1624,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1020:2:4"
									},
									"returnParameters": {
										"id": 1623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1622,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "1046:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1621,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1046:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1045:9:4"
									},
									"scope": 1649,
									"src": "996:59:4",
									"stateMutability": "pure",
									"superFunction": 1810,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1631,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1626,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "1077:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1077:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1076:15:4"
									},
									"returnParameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1629,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "1115:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1115:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1114:9:4"
									},
									"scope": 1649,
									"src": "1061:63:4",
									"stateMutability": "view",
									"superFunction": 1817,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1648,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1633,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "1155:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1155:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1635,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "1178:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1178:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1637,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "1203:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1639,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "1226:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1226:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1641,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "1252:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1640,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1252:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1643,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "1269:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1642,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1269:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1645,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "1288:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1644,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1288:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1145:158:4"
									},
									"returnParameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1312:0:4"
									},
									"scope": 1649,
									"src": "1130:183:4",
									"stateMutability": "nonpayable",
									"superFunction": 1834,
									"visibility": "external"
								}
							],
							"scope": 1650,
							"src": "62:1253:4"
						}
					],
					"src": "36:1280:4"
				},
				"id": 4
			},
			"DexSwap/interfaces/IPancakeFactory.sol": {
				"ast": {
					"absolutePath": "DexSwap/interfaces/IPancakeFactory.sol",
					"exportedSymbols": {
						"IPancakeFactory": [
							1717
						]
					},
					"id": 1718,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1651,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:5"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1717,
							"linearizedBaseContracts": [
								1717
							],
							"name": "IPancakeFactory",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 1661,
									"name": "PairCreated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1653,
												"indexed": true,
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "112:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "112:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1655,
												"indexed": true,
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "136:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "136:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1657,
												"indexed": false,
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "160:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "160:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1659,
												"indexed": false,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "174:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "174:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "111:71:5"
									},
									"src": "94:89:5"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1666,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeTo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "203:2:5"
									},
									"returnParameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "229:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "229:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "228:9:5"
									},
									"scope": 1717,
									"src": "189:49:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1671,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeToSetter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "264:2:5"
									},
									"returnParameters": {
										"id": 1670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1669,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "290:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "290:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "289:9:5"
									},
									"scope": 1717,
									"src": "244:55:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1680,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPair",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1673,
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "322:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "322:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1675,
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "338:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "338:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "321:32:5"
									},
									"returnParameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1678,
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "377:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "377:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "376:14:5"
									},
									"scope": 1717,
									"src": "305:86:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1687,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairs",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "415:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "414:9:5"
									},
									"returnParameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1685,
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "447:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "446:14:5"
									},
									"scope": 1717,
									"src": "397:64:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1692,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairsLength",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1688,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "490:2:5"
									},
									"returnParameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1690,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "516:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "516:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "515:9:5"
									},
									"scope": 1717,
									"src": "467:58:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1701,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPair",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1694,
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 1701,
												"src": "551:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "551:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1696,
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 1701,
												"src": "567:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "567:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "550:32:5"
									},
									"returnParameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1699,
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 1701,
												"src": "601:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "600:14:5"
									},
									"scope": 1717,
									"src": "531:84:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeTo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1703,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "639:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "638:9:5"
									},
									"returnParameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "656:0:5"
									},
									"scope": 1717,
									"src": "621:36:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1711,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeToSetter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1708,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "687:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "686:9:5"
									},
									"returnParameters": {
										"id": 1710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "704:0:5"
									},
									"scope": 1717,
									"src": "663:42:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "INIT_CODE_PAIR_HASH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "739:2:5"
									},
									"returnParameters": {
										"id": 1715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1714,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "765:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1713,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "765:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "764:9:5"
									},
									"scope": 1717,
									"src": "711:63:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 1718,
							"src": "62:714:5"
						}
					],
					"src": "36:741:5"
				},
				"id": 5
			},
			"DexSwap/interfaces/IPancakePair.sol": {
				"ast": {
					"absolutePath": "DexSwap/interfaces/IPancakePair.sol",
					"exportedSymbols": {
						"IPancakePair": [
							1959
						]
					},
					"id": 1960,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1719,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:6"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1959,
							"linearizedBaseContracts": [
								1959
							],
							"name": "IPancakePair",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 1727,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1721,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "106:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "106:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1723,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "129:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "129:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1725,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "154:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "154:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "105:63:6"
									},
									"src": "91:78:6"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1735,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1729,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "189:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "189:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1731,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "211:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1730,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "211:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1733,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "231:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "231:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "188:57:6"
									},
									"src": "174:72:6"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1740,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "265:2:6"
									},
									"returnParameters": {
										"id": 1739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1738,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "291:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1737,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "291:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "290:15:6"
									},
									"scope": 1959,
									"src": "252:54:6",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1745,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "327:2:6"
									},
									"returnParameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1743,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "353:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1742,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "353:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "352:15:6"
									},
									"scope": 1959,
									"src": "312:56:6",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1750,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:6"
									},
									"returnParameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1748,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "417:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1747,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "417:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "416:7:6"
									},
									"scope": 1959,
									"src": "374:50:6",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1755,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "450:2:6"
									},
									"returnParameters": {
										"id": 1754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1753,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "476:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "476:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "475:9:6"
									},
									"scope": 1959,
									"src": "430:55:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1762,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1757,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "510:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "510:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "509:15:6"
									},
									"returnParameters": {
										"id": 1761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1760,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "548:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "548:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "547:9:6"
									},
									"scope": 1959,
									"src": "491:66:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1771,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1764,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "582:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1766,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "597:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "597:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "581:32:6"
									},
									"returnParameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "637:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "636:9:6"
									},
									"scope": 1959,
									"src": "563:83:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1780,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1773,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "669:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "669:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1775,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "686:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "668:32:6"
									},
									"returnParameters": {
										"id": 1779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1778,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "719:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1777,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "719:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "718:6:6"
									},
									"scope": 1959,
									"src": "652:73:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1789,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1782,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "749:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "749:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1784,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "761:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "761:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "748:27:6"
									},
									"returnParameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1787,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "794:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1786,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "794:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "793:6:6"
									},
									"scope": 1959,
									"src": "731:69:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1800,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1791,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "837:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1793,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "859:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1795,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "879:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "879:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "827:71:6"
									},
									"returnParameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1798,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "917:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1797,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "917:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "916:6:6"
									},
									"scope": 1959,
									"src": "806:117:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1805,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "954:2:6"
									},
									"returnParameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1803,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "980:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1802,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "980:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "979:9:6"
									},
									"scope": 1959,
									"src": "929:60:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1810,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1019:2:6"
									},
									"returnParameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1808,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "1045:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1807,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1045:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1044:9:6"
									},
									"scope": 1959,
									"src": "995:59:6",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1817,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1812,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1817,
												"src": "1076:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1811,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1076:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1075:15:6"
									},
									"returnParameters": {
										"id": 1816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1815,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1817,
												"src": "1114:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1113:9:6"
									},
									"scope": 1959,
									"src": "1060:63:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1819,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "1154:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1818,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1154:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1821,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "1177:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1177:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1823,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "1202:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1202:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1825,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "1225:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1225:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1827,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "1251:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1826,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1251:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1829,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "1268:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1828,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1268:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1831,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "1287:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1830,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1287:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1144:158:6"
									},
									"returnParameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1311:0:6"
									},
									"scope": 1959,
									"src": "1129:183:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1842,
									"name": "Mint",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1836,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1842,
												"src": "1329:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1835,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1329:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1838,
												"indexed": false,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1842,
												"src": "1353:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1353:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1840,
												"indexed": false,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1842,
												"src": "1370:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1370:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1328:58:6"
									},
									"src": "1318:69:6"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1852,
									"name": "Burn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1844,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "1403:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1843,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1403:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1846,
												"indexed": false,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "1427:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1427:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1848,
												"indexed": false,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "1444:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1444:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1850,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "1461:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1461:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1402:78:6"
									},
									"src": "1392:89:6"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1866,
									"name": "Swap",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1854,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "1506:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1506:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1856,
												"indexed": false,
												"name": "amount0In",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "1538:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1538:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1858,
												"indexed": false,
												"name": "amount1In",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "1565:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1565:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1860,
												"indexed": false,
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "1592:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1592:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1862,
												"indexed": false,
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "1620:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1620:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1864,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "1648:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1648:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1496:176:6"
									},
									"src": "1486:187:6"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1872,
									"name": "Sync",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1868,
												"indexed": false,
												"name": "reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "1689:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1867,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1689:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1870,
												"indexed": false,
												"name": "reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "1707:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1869,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1707:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1688:36:6"
									},
									"src": "1678:47:6"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1877,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MINIMUM_LIQUIDITY",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1873,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1757:2:6"
									},
									"returnParameters": {
										"id": 1876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1875,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "1783:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1783:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1782:9:6"
									},
									"scope": 1959,
									"src": "1731:61:6",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1882,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1878,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1814:2:6"
									},
									"returnParameters": {
										"id": 1881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1880,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "1840:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1879,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1840:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1839:9:6"
									},
									"scope": 1959,
									"src": "1798:51:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1887,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1883,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1870:2:6"
									},
									"returnParameters": {
										"id": 1886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1885,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "1896:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1884,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1896:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1895:9:6"
									},
									"scope": 1959,
									"src": "1855:50:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1892,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1926:2:6"
									},
									"returnParameters": {
										"id": 1891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1890,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1892,
												"src": "1952:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1889,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1952:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1951:9:6"
									},
									"scope": 1959,
									"src": "1911:50:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1901,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1987:2:6"
									},
									"returnParameters": {
										"id": 1900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1895,
												"name": "reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 1901,
												"src": "2050:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1894,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "2050:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1897,
												"name": "reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 1901,
												"src": "2080:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1896,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "2080:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1899,
												"name": "blockTimestampLast",
												"nodeType": "VariableDeclaration",
												"scope": 1901,
												"src": "2110:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1898,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2110:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2036:109:6"
									},
									"scope": 1959,
									"src": "1967:179:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1906,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price0CumulativeLast",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1902,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2181:2:6"
									},
									"returnParameters": {
										"id": 1905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1904,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1906,
												"src": "2207:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2207:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2206:9:6"
									},
									"scope": 1959,
									"src": "2152:64:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1911,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price1CumulativeLast",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2251:2:6"
									},
									"returnParameters": {
										"id": 1910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1909,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1911,
												"src": "2277:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2277:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2276:9:6"
									},
									"scope": 1959,
									"src": "2222:64:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1916,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "kLast",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2306:2:6"
									},
									"returnParameters": {
										"id": 1915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1914,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "2332:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2331:9:6"
									},
									"scope": 1959,
									"src": "2292:49:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1923,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1918,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1923,
												"src": "2361:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2360:12:6"
									},
									"returnParameters": {
										"id": 1922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1921,
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1923,
												"src": "2391:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2391:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2390:19:6"
									},
									"scope": 1959,
									"src": "2347:63:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1932,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1925,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "2430:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1924,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2430:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2429:12:6"
									},
									"returnParameters": {
										"id": 1931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1928,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "2460:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2460:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1930,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "2477:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2477:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2459:34:6"
									},
									"scope": 1959,
									"src": "2416:78:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1943,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1934,
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 1943,
												"src": "2523:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2523:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1936,
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 1943,
												"src": "2551:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2551:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1938,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1943,
												"src": "2579:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2579:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1940,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1943,
												"src": "2599:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1939,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2599:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2513:111:6"
									},
									"returnParameters": {
										"id": 1942,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2633:0:6"
									},
									"scope": 1959,
									"src": "2500:134:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1948,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "skim",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1945,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "2654:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2654:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2653:12:6"
									},
									"returnParameters": {
										"id": 1947,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2674:0:6"
									},
									"scope": 1959,
									"src": "2640:35:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1951,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sync",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2694:2:6"
									},
									"returnParameters": {
										"id": 1950,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:0:6"
									},
									"scope": 1959,
									"src": "2681:25:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1958,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1953,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "2732:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2732:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1955,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "2741:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2741:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2731:18:6"
									},
									"returnParameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2758:0:6"
									},
									"scope": 1959,
									"src": "2712:47:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 1960,
							"src": "62:2699:6"
						}
					],
					"src": "36:2726:6"
				},
				"id": 6
			},
			"DexSwap/libraries/Math.sol": {
				"ast": {
					"absolutePath": "DexSwap/libraries/Math.sol",
					"exportedSymbols": {
						"Math": [
							2035
						]
					},
					"id": 2036,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1961,
							"literals": [
								"solidity",
								"=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:7"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2035,
							"linearizedBaseContracts": [
								2035
							],
							"name": "Math",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1979,
										"nodeType": "Block",
										"src": "203:34:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1970,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1968,
														"src": "213:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1971,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1963,
																"src": "217:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1972,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1965,
																"src": "221:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "217:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"argumentTypes": null,
															"id": 1975,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1965,
															"src": "229:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1976,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "217:13:7",
														"trueExpression": {
															"argumentTypes": null,
															"id": 1974,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1963,
															"src": "225:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "213:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1978,
												"nodeType": "ExpressionStatement",
												"src": "213:17:7"
											}
										]
									},
									"documentation": null,
									"id": 1980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1963,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "147:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "147:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1965,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "158:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "158:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "146:22:7"
									},
									"returnParameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1968,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "192:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "192:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "191:11:7"
									},
									"scope": 2035,
									"src": "134:103:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2033,
										"nodeType": "Block",
										"src": "411:242:7",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1987,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1982,
														"src": "425:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "33",
														"id": 1988,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "429:1:7",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "425:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2025,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 2023,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1982,
															"src": "609:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 2024,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "614:1:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "609:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 2031,
													"nodeType": "IfStatement",
													"src": "605:42:7",
													"trueBody": {
														"id": 2030,
														"nodeType": "Block",
														"src": "617:30:7",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 2028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 2026,
																		"name": "z",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1985,
																		"src": "631:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 2027,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "635:1:7",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "631:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2029,
																"nodeType": "ExpressionStatement",
																"src": "631:5:7"
															}
														]
													}
												},
												"id": 2032,
												"nodeType": "IfStatement",
												"src": "421:226:7",
												"trueBody": {
													"id": 2022,
													"nodeType": "Block",
													"src": "432:167:7",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1992,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1990,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1985,
																	"src": "446:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 1991,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1982,
																	"src": "450:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "446:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1993,
															"nodeType": "ExpressionStatement",
															"src": "446:5:7"
														},
														{
															"assignments": [
																1995
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1995,
																	"name": "x",
																	"nodeType": "VariableDeclaration",
																	"scope": 2022,
																	"src": "465:9:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1994,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "465:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 2001,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2000,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1996,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1982,
																		"src": "477:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 1997,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "481:1:7",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "477:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 1999,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "485:1:7",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "477:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "465:21:7"
														},
														{
															"body": {
																"id": 2020,
																"nodeType": "Block",
																"src": "514:75:7",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 2007,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 2005,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1985,
																				"src": "532:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"id": 2006,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1995,
																				"src": "536:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "532:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2008,
																		"nodeType": "ExpressionStatement",
																		"src": "532:5:7"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 2018,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 2009,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1995,
																				"src": "555:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2017,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"components": [
																						{
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2014,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2012,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"argumentTypes": null,
																									"id": 2010,
																									"name": "y",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1982,
																									"src": "560:1:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "/",
																								"rightExpression": {
																									"argumentTypes": null,
																									"id": 2011,
																									"name": "x",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1995,
																									"src": "564:1:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "560:5:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"argumentTypes": null,
																								"id": 2013,
																								"name": "x",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1995,
																								"src": "568:1:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "560:9:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 2015,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "559:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "32",
																					"id": 2016,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "573:1:7",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "559:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "555:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2019,
																		"nodeType": "ExpressionStatement",
																		"src": "555:19:7"
																	}
																]
															},
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2002,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1995,
																	"src": "507:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 2003,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1985,
																	"src": "511:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "507:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2021,
															"nodeType": "WhileStatement",
															"src": "500:89:7"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 2034,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1982,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2034,
												"src": "366:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "366:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "365:11:7"
									},
									"returnParameters": {
										"id": 1986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1985,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2034,
												"src": "400:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "400:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "399:11:7"
									},
									"scope": 2035,
									"src": "352:301:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 2036,
							"src": "115:540:7"
						}
					],
					"src": "36:620:7"
				},
				"id": 7
			},
			"DexSwap/libraries/SafeMath.sol": {
				"ast": {
					"absolutePath": "DexSwap/libraries/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							2110
						]
					},
					"id": 2111,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2037,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:31:8"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2110,
							"linearizedBaseContracts": [
								2110
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2058,
										"nodeType": "Block",
										"src": "267:66:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2054,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 2051,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 2047,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2044,
																			"src": "286:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2050,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 2048,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2039,
																				"src": "290:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 2049,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2041,
																				"src": "294:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "290:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "286:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2052,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "285:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2053,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2039,
																"src": "300:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "285:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d6164642d6f766572666c6f77",
															"id": 2055,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "303:22:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3903056b84ed2aba2be78662dc6c5c99b160cebe9af9bd9493d0fc28ff16f6db",
																"typeString": "literal_string \"ds-math-add-overflow\""
															},
															"value": "ds-math-add-overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3903056b84ed2aba2be78662dc6c5c99b160cebe9af9bd9493d0fc28ff16f6db",
																"typeString": "literal_string \"ds-math-add-overflow\""
															}
														],
														"id": 2046,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2170,
															2171
														],
														"referencedDeclaration": 2171,
														"src": "277:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "277:49:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2057,
												"nodeType": "ExpressionStatement",
												"src": "277:49:8"
											}
										]
									},
									"documentation": null,
									"id": 2059,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2039,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2059,
												"src": "211:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "211:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2041,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2059,
												"src": "222:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "222:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "210:22:8"
									},
									"returnParameters": {
										"id": 2045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2044,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2059,
												"src": "256:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "256:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "255:11:8"
									},
									"scope": 2110,
									"src": "198:135:8",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2080,
										"nodeType": "Block",
										"src": "408:67:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 2073,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 2069,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2066,
																			"src": "427:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2072,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 2070,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2061,
																				"src": "431:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 2071,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2063,
																				"src": "435:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "431:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "427:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2074,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "426:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2075,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2061,
																"src": "441:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "426:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d7375622d756e646572666c6f77",
															"id": 2077,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "444:23:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_03b20b9f6e6e7905f077509fd420fb44afc685f254bcefe49147296e1ba25590",
																"typeString": "literal_string \"ds-math-sub-underflow\""
															},
															"value": "ds-math-sub-underflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_03b20b9f6e6e7905f077509fd420fb44afc685f254bcefe49147296e1ba25590",
																"typeString": "literal_string \"ds-math-sub-underflow\""
															}
														],
														"id": 2068,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2170,
															2171
														],
														"referencedDeclaration": 2171,
														"src": "418:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "418:50:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2079,
												"nodeType": "ExpressionStatement",
												"src": "418:50:8"
											}
										]
									},
									"documentation": null,
									"id": 2081,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2061,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2081,
												"src": "352:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "352:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2063,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2081,
												"src": "363:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "363:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "351:22:8"
									},
									"returnParameters": {
										"id": 2067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2066,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2081,
												"src": "397:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2065,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "397:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "396:11:8"
									},
									"scope": 2110,
									"src": "339:136:8",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2108,
										"nodeType": "Block",
										"src": "550:80:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2093,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2091,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2085,
																	"src": "568:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "573:1:8",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "568:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"id": 2098,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 2094,
																					"name": "z",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2088,
																					"src": "579:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2097,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 2095,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2083,
																						"src": "583:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"argumentTypes": null,
																						"id": 2096,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2085,
																						"src": "587:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "583:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "579:9:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2099,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "578:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 2100,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2085,
																		"src": "592:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "578:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 2102,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2083,
																	"src": "597:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "578:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "568:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d6d756c2d6f766572666c6f77",
															"id": 2105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "600:22:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd",
																"typeString": "literal_string \"ds-math-mul-overflow\""
															},
															"value": "ds-math-mul-overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd",
																"typeString": "literal_string \"ds-math-mul-overflow\""
															}
														],
														"id": 2090,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2170,
															2171
														],
														"referencedDeclaration": 2171,
														"src": "560:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "560:63:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2107,
												"nodeType": "ExpressionStatement",
												"src": "560:63:8"
											}
										]
									},
									"documentation": null,
									"id": 2109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2083,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "494:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "494:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2085,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "505:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "493:22:8"
									},
									"returnParameters": {
										"id": 2089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2088,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "539:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "539:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "538:11:8"
									},
									"scope": 2110,
									"src": "481:149:8",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 2111,
							"src": "175:457:8"
						}
					],
					"src": "36:597:8"
				},
				"id": 8
			},
			"DexSwap/libraries/UQ112x112.sol": {
				"ast": {
					"absolutePath": "DexSwap/libraries/UQ112x112.sol",
					"exportedSymbols": {
						"UQ112x112": [
							2152
						]
					},
					"id": 2153,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2112,
							"literals": [
								"solidity",
								"=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:9"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2152,
							"linearizedBaseContracts": [
								2152
							],
							"name": "UQ112x112",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2117,
									"name": "Q112",
									"nodeType": "VariableDeclaration",
									"scope": 2152,
									"src": "243:30:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint224",
										"typeString": "uint224"
									},
									"typeName": {
										"id": 2113,
										"name": "uint224",
										"nodeType": "ElementaryTypeName",
										"src": "243:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint224",
											"typeString": "uint224"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_5192296858534827628530496329220096_by_1",
											"typeString": "int_const 5192...(26 digits omitted)...0096"
										},
										"id": 2116,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"hexValue": "32",
											"id": 2114,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "267:1:9",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_2_by_1",
												"typeString": "int_const 2"
											},
											"value": "2"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "313132",
											"id": 2115,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "270:3:9",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_112_by_1",
												"typeString": "int_const 112"
											},
											"value": "112"
										},
										"src": "267:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5192296858534827628530496329220096_by_1",
											"typeString": "int_const 5192...(26 digits omitted)...0096"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2132,
										"nodeType": "Block",
										"src": "380:57:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2124,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2122,
														"src": "390:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														},
														"id": 2129,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2126,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2119,
																	"src": "402:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"id": 2125,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "394:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint224_$",
																	"typeString": "type(uint224)"
																},
																"typeName": "uint224"
															},
															"id": 2127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "394:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint224",
																"typeString": "uint224"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"argumentTypes": null,
															"id": 2128,
															"name": "Q112",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2117,
															"src": "407:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint224",
																"typeString": "uint224"
															}
														},
														"src": "394:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														}
													},
													"src": "390:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"id": 2131,
												"nodeType": "ExpressionStatement",
												"src": "390:21:9"
											}
										]
									},
									"documentation": null,
									"id": 2133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "encode",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2119,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "335:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 2118,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "335:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "334:11:9"
									},
									"returnParameters": {
										"id": 2123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2122,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "369:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint224",
													"typeString": "uint224"
												},
												"typeName": {
													"id": 2121,
													"name": "uint224",
													"nodeType": "ElementaryTypeName",
													"src": "369:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "368:11:9"
									},
									"scope": 2152,
									"src": "319:118:9",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2150,
										"nodeType": "Block",
										"src": "576:35:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2142,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2140,
														"src": "586:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														},
														"id": 2147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 2143,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2135,
															"src": "590:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint224",
																"typeString": "uint224"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2145,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2137,
																	"src": "602:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"id": 2144,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "594:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint224_$",
																	"typeString": "type(uint224)"
																},
																"typeName": "uint224"
															},
															"id": 2146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "594:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint224",
																"typeString": "uint224"
															}
														},
														"src": "590:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														}
													},
													"src": "586:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"id": 2149,
												"nodeType": "ExpressionStatement",
												"src": "586:18:9"
											}
										]
									},
									"documentation": null,
									"id": 2151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uqdiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2135,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "520:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint224",
													"typeString": "uint224"
												},
												"typeName": {
													"id": 2134,
													"name": "uint224",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2137,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "531:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 2136,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "531:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "519:22:9"
									},
									"returnParameters": {
										"id": 2141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2140,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "565:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint224",
													"typeString": "uint224"
												},
												"typeName": {
													"id": 2139,
													"name": "uint224",
													"nodeType": "ElementaryTypeName",
													"src": "565:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "564:11:9"
									},
									"scope": 2152,
									"src": "505:106:9",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 2153,
							"src": "219:394:9"
						}
					],
					"src": "36:578:9"
				},
				"id": 9
			}
		}
	}
}